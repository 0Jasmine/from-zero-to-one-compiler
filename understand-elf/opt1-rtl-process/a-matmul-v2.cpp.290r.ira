
;; Function main (main, funcdef_no=30, decl_uid=6647, cgraph_uid=31, symbol_order=30) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 14 count 15 (  1.4)

Pass 0 for finding pseudo/allocno costs

    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r160: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r159: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r158: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r157: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r156: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r154: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r152: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r150: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r146: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r144: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r141: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r139: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r137: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r136: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r133: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r132: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r130: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r127: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r125: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r124: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r111: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r110: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r109: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r108: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r107: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS

  r162 costs: LO_REGS:2 BASE_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 EVEN_REG:2 GENERAL_REGS:2 CORE_REGS:2 VFP_D0_D7_REGS:25 VFP_LO_REGS:25 VFP_REGS:25 ALL_REGS:25 MEM:11
  r161 costs: LO_REGS:2 BASE_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 EVEN_REG:2 GENERAL_REGS:2 CORE_REGS:2 VFP_D0_D7_REGS:25 VFP_LO_REGS:25 VFP_REGS:25 ALL_REGS:25 MEM:11
  r155 costs: LO_REGS:1980 BASE_REGS:1980 HI_REGS:1980 CALLER_SAVE_REGS:1980 EVEN_REG:1980 GENERAL_REGS:1980 CORE_REGS:1980 VFP_D0_D7_REGS:14865 VFP_LO_REGS:14865 VFP_REGS:14865 ALL_REGS:14865 MEM:9910
  r153 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:14990 VFP_LO_REGS:14990 VFP_REGS:14990 ALL_REGS:14990 MEM:9950
  r151 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:29700 VFP_LO_REGS:29700 VFP_REGS:29700 ALL_REGS:29700 MEM:19800
  r149 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:14924 VFP_LO_REGS:14924 VFP_REGS:14924 ALL_REGS:14924 MEM:9945
  r148 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:29700 VFP_LO_REGS:29700 VFP_REGS:29700 ALL_REGS:29700 MEM:19800
  r147 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:290 VFP_LO_REGS:290 VFP_REGS:290 ALL_REGS:290 MEM:150
  r145 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:300 VFP_LO_REGS:300 VFP_REGS:300 ALL_REGS:300 MEM:200
  r143 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:224 VFP_LO_REGS:224 VFP_REGS:224 ALL_REGS:224 MEM:145
  r142 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:300 VFP_LO_REGS:300 VFP_REGS:300 ALL_REGS:300 MEM:200
  r141 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:20 CALLER_SAVE_REGS:20 EVEN_REG:20 GENERAL_REGS:20 CORE_REGS:20 VFP_D0_D7_REGS:164 VFP_LO_REGS:164 VFP_REGS:164 ALL_REGS:164 MEM:105
  r139 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:20 CALLER_SAVE_REGS:20 EVEN_REG:20 GENERAL_REGS:20 CORE_REGS:20 VFP_D0_D7_REGS:164 VFP_LO_REGS:164 VFP_REGS:164 ALL_REGS:164 MEM:105
  r135 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:195 VFP_LO_REGS:195 VFP_REGS:195 ALL_REGS:195 MEM:130
  r134 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:165 VFP_LO_REGS:165 VFP_REGS:165 ALL_REGS:165 MEM:110
  r131 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:15464 VFP_LO_REGS:15464 VFP_REGS:15464 ALL_REGS:15464 MEM:10305
  r129 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:125 VFP_LO_REGS:125 VFP_REGS:125 ALL_REGS:125 MEM:21
  r128 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:410 VFP_LO_REGS:410 VFP_REGS:410 ALL_REGS:410 MEM:211
  r126 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:315 VFP_LO_REGS:315 VFP_REGS:315 ALL_REGS:315 MEM:210
  r123 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:29800 VFP_LO_REGS:29800 VFP_REGS:29800 ALL_REGS:29800 MEM:19810
  r122 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:460 VFP_LO_REGS:460 VFP_REGS:460 ALL_REGS:460 MEM:301
  r121 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:460 VFP_LO_REGS:460 VFP_REGS:460 ALL_REGS:460 MEM:301
  r120 costs: LO_REGS:2 BASE_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 EVEN_REG:2 GENERAL_REGS:2 CORE_REGS:2 VFP_D0_D7_REGS:65 VFP_LO_REGS:65 VFP_REGS:65 ALL_REGS:65 MEM:32
  r119 costs: LO_REGS:2 BASE_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 EVEN_REG:2 GENERAL_REGS:2 CORE_REGS:2 VFP_D0_D7_REGS:65 VFP_LO_REGS:65 VFP_REGS:65 ALL_REGS:65 MEM:32
  r118 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:29800 VFP_LO_REGS:29800 VFP_REGS:29800 ALL_REGS:29800 MEM:19810
  r117 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 CORE_REGS:0 VFP_D0_D7_REGS:89700 VFP_LO_REGS:89700 VFP_REGS:89700 ALL_REGS:89700 MEM:59800
  r116 costs: LO_REGS:1980 BASE_REGS:1980 HI_REGS:3960 CALLER_SAVE_REGS:3960 EVEN_REG:3960 GENERAL_REGS:3960 CORE_REGS:3960 VFP_D0_D7_REGS:44550 VFP_LO_REGS:44550 VFP_REGS:44550 ALL_REGS:44550 MEM:29700
  r115 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:1980 CALLER_SAVE_REGS:1980 EVEN_REG:1980 GENERAL_REGS:1980 CORE_REGS:1980 VFP_D0_D7_REGS:74250 VFP_LO_REGS:74250 VFP_REGS:74250 ALL_REGS:74250 MEM:49500
  r113 costs: LO_REGS:0 BASE_REGS:0 HI_REGS:20 CALLER_SAVE_REGS:20 EVEN_REG:20 GENERAL_REGS:20 CORE_REGS:20 VFP_D0_D7_REGS:15450 VFP_LO_REGS:15450 VFP_REGS:15450 ALL_REGS:15450 MEM:10300

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 3
;;  header 7, latch 9
;;  depth 1, outer 0
;;  nodes: 7 9 8
;;
;; Loop 4
;;  header 8, latch 8
;;  depth 2, outer 3
;;  nodes: 8
;;
;; Loop 2
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 8 9 }
;; 9 succs { 7 10 }
;; 10 succs { 1 }
scanning new insn with uid = 143.
verify found no changes in insn with uid = 143.
deleting insn with uid = 48.
Removing SCRATCH to p163 in insn #44 (nop 3)
rescanning insn with uid = 44.
Removing SCRATCH to p164 in insn #56 (nop 3)
rescanning insn with uid = 56.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 14 count 15 (  1.4)
Reg 161 uninteresting
Reg 119 uninteresting
Reg 139: def dominates all uses has unique first use
Reg 162 uninteresting
Reg 120 uninteresting
Reg 134: def dominates all uses has unique first use
Reg 141: def dominates all uses has unique first use
Reg 129 uninteresting
Reg 155: def dominates all uses has unique first use
Reg 145 uninteresting
Reg 147 uninteresting
Reg 153: def dominates all uses has unique first use
Reg 151 uninteresting
Reg 116 uninteresting
Reg 134 not local to one basic block
Reg 139 not local to one basic block
Reg 141 not local to one basic block
Reg 153 not local to one basic block
Reg 155 not local to one basic block
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 3
;;  header 7, latch 9
;;  depth 1, outer 0
;;  nodes: 7 9 8
;;
;; Loop 4
;;  header 8, latch 8
;;  depth 2, outer 3
;;  nodes: 8
;;
;; Loop 2
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 8 9 }
;; 9 succs { 7 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 139: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 143 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 60 (nil))

Pass 0 for finding pseudo/allocno costs

    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r164,l4) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r163,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r155,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r155,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r153,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r153,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r151,l4) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r149,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r149,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r148,l4) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r147,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r145,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r143,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r143,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r142,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r141,l2) best LO_REGS, allocno GENERAL_REGS
    a9 (r141,l0) best LO_REGS, allocno GENERAL_REGS
    r139: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r139,l1) best LO_REGS, allocno GENERAL_REGS
    a13 (r139,l0) best LO_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r135,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r134,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r131,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r131,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r129,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r129,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r128,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r128,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r126,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r126,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r123,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r123,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r122,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r121,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r120,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r120,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r120,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r119,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a54 (r119,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r119,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r119,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r118,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r118,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r117,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a31 (r117,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r116,l4) best LO_REGS, allocno GENERAL_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r115,l4) best LO_REGS, allocno GENERAL_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r113,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r113,l3) best LO_REGS, allocno GENERAL_REGS

  a0(r120,l0) costs: LO_REGS:2,2 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:65,65 VFP_LO_REGS:65,65 ALL_REGS:65,65 MEM:32,32
  a1(r119,l0) costs: LO_REGS:2,2 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:65,65 VFP_LO_REGS:65,65 ALL_REGS:65,65 MEM:32,32
  a2(r155,l0) costs: LO_REGS:0,1980 HI_REGS:0,1980 CALLER_SAVE_REGS:0,1980 EVEN_REG:0,1980 GENERAL_REGS:0,1980 VFP_D0_D7_REGS:15,14865 VFP_LO_REGS:15,14865 ALL_REGS:15,14865 MEM:10,9910
  a3(r149,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:74,14924 VFP_LO_REGS:74,14924 ALL_REGS:74,14924 MEM:45,9945
  a4(r143,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:74,224 VFP_LO_REGS:74,224 ALL_REGS:74,224 MEM:45,145
  a5(r131,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14,15464 VFP_LO_REGS:14,15464 ALL_REGS:14,15464 MEM:5,10305
  a6(r128,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:10,410 VFP_LO_REGS:10,410 ALL_REGS:10,410 MEM:1,211
  a7(r129,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:25,125 VFP_LO_REGS:25,125 ALL_REGS:25,125 MEM:11,21
  a8(r126,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,315 VFP_LO_REGS:15,315 ALL_REGS:15,315 MEM:10,210
  a9(r141,l0) costs: LO_REGS:0,0 HI_REGS:0,20 CALLER_SAVE_REGS:0,20 EVEN_REG:0,20 GENERAL_REGS:0,20 VFP_D0_D7_REGS:14,164 VFP_LO_REGS:14,164 ALL_REGS:14,164 MEM:5,105
  a10(r121,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:10,460 VFP_LO_REGS:10,460 ALL_REGS:10,460 MEM:1,301
  a11(r134,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,165 VFP_LO_REGS:15,165 ALL_REGS:15,165 MEM:10,110
  a12(r162,l0) costs: LO_REGS:2,2 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:25,25 VFP_LO_REGS:25,25 ALL_REGS:25,25 MEM:11,11
  a13(r139,l0) costs: LO_REGS:0,0 HI_REGS:0,20 CALLER_SAVE_REGS:0,20 EVEN_REG:0,20 GENERAL_REGS:0,20 VFP_D0_D7_REGS:14,164 VFP_LO_REGS:14,164 ALL_REGS:14,164 MEM:5,105
  a14(r122,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:10,460 VFP_LO_REGS:10,460 ALL_REGS:10,460 MEM:1,301
  a15(r135,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:45,195 VFP_LO_REGS:45,195 ALL_REGS:45,195 MEM:30,130
  a16(r161,l0) costs: LO_REGS:2,2 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:25,25 VFP_LO_REGS:25,25 ALL_REGS:25,25 MEM:11,11
  a17(r119,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a18(r120,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a19(r126,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a20(r128,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:400,400 VFP_LO_REGS:400,400 ALL_REGS:400,400 MEM:210,210
  a21(r129,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:100,100 VFP_LO_REGS:100,100 ALL_REGS:100,100 MEM:10,10
  a22(r131,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:600,15450 VFP_LO_REGS:600,15450 ALL_REGS:600,15450 MEM:400,10300
  a23(r143,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a24(r149,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,14850 VFP_LO_REGS:0,14850 ALL_REGS:0,14850 MEM:0,9900
  a25(r155,l3) costs: LO_REGS:0,1980 HI_REGS:0,1980 CALLER_SAVE_REGS:0,1980 EVEN_REG:0,1980 GENERAL_REGS:0,1980 VFP_D0_D7_REGS:0,14850 VFP_LO_REGS:0,14850 ALL_REGS:0,14850 MEM:0,9900
  a26(r153,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:140,14990 VFP_LO_REGS:140,14990 ALL_REGS:140,14990 MEM:50,9950
  a27(r118,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:100,29800 VFP_LO_REGS:100,29800 ALL_REGS:100,29800 MEM:10,19810
  a28(r123,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:100,29800 VFP_LO_REGS:100,29800 ALL_REGS:100,29800 MEM:10,19810
  a29(r113,l3) costs: LO_REGS:0,0 HI_REGS:20,20 CALLER_SAVE_REGS:20,20 EVEN_REG:20,20 GENERAL_REGS:20,20 VFP_D0_D7_REGS:600,15450 VFP_LO_REGS:600,15450 ALL_REGS:600,15450 MEM:400,10300
  a30(r147,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:290,290 VFP_LO_REGS:290,290 ALL_REGS:290,290 MEM:150,150
  a31(r117,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:600,89700 VFP_LO_REGS:600,89700 ALL_REGS:600,89700 MEM:400,59800
  a32(r145,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a33(r142,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a34(r163,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a35(r113,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a36(r117,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:89100,89100 VFP_LO_REGS:89100,89100 ALL_REGS:89100,89100 MEM:59400,59400
  a37(r118,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:29700,29700 MEM:19800,19800
  a38(r119,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r120,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a40(r123,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:29700,29700 MEM:19800,19800
  a41(r126,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a42(r128,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a43(r129,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a44(r131,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a45(r143,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a46(r149,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a47(r153,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a48(r155,l4) costs: LO_REGS:1980,1980 HI_REGS:1980,1980 CALLER_SAVE_REGS:1980,1980 EVEN_REG:1980,1980 GENERAL_REGS:1980,1980 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a49(r116,l4) costs: LO_REGS:1980,1980 HI_REGS:3960,3960 CALLER_SAVE_REGS:3960,3960 EVEN_REG:3960,3960 GENERAL_REGS:3960,3960 VFP_D0_D7_REGS:44550,44550 VFP_LO_REGS:44550,44550 ALL_REGS:44550,44550 MEM:29700,29700
  a50(r115,l4) costs: LO_REGS:0,0 HI_REGS:1980,1980 CALLER_SAVE_REGS:1980,1980 EVEN_REG:1980,1980 GENERAL_REGS:1980,1980 VFP_D0_D7_REGS:74250,74250 VFP_LO_REGS:74250,74250 ALL_REGS:74250,74250 MEM:49500,49500
  a51(r151,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:29700,29700 MEM:19800,19800
  a52(r148,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:29700,29700 MEM:19800,19800
  a53(r164,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a54(r119,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a55(r120,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a56(r121,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:450,450 VFP_LO_REGS:450,450 ALL_REGS:450,450 MEM:300,300
  a57(r134,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a58(r141,l2) costs: LO_REGS:0,0 HI_REGS:20,20 CALLER_SAVE_REGS:20,20 EVEN_REG:20,20 GENERAL_REGS:20,20 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a59(r119,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a60(r122,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:450,450 VFP_LO_REGS:450,450 ALL_REGS:450,450 MEM:300,300
  a61(r135,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a62(r139,l1) costs: LO_REGS:0,0 HI_REGS:20,20 CALLER_SAVE_REGS:20,20 EVEN_REG:20,20 GENERAL_REGS:20,20 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100

   Insn 99(l0): point = 0
   Insn 98(l0): point = 2
   Insn 93(l0): point = 4
   Insn 92(l0): point = 6
   Insn 91(l0): point = 8
   Insn 90(l0): point = 10
   Insn 68(l0): point = 13
   Insn 138(l0): point = 15
   Insn 137(l0): point = 17
   Insn 135(l0): point = 19
   Insn 134(l0): point = 21
   Insn 6(l0): point = 23
   Insn 5(l0): point = 25
   Insn 39(l0): point = 27
   Insn 38(l0): point = 29
   Insn 31(l0): point = 32
   Insn 4(l0): point = 34
   Insn 29(l0): point = 36
   Insn 27(l0): point = 38
   Insn 133(l0): point = 40
   Insn 26(l0): point = 42
   Insn 25(l0): point = 44
   Insn 18(l0): point = 47
   Insn 3(l0): point = 49
   Insn 142(l0): point = 51
   Insn 141(l0): point = 53
   Insn 13(l0): point = 55
   Insn 132(l0): point = 57
   Insn 12(l0): point = 59
   Insn 11(l0): point = 61
   Insn 60(l3): point = 64
   Insn 8(l3): point = 66
   Insn 7(l3): point = 68
   Insn 52(l3): point = 70
   Insn 50(l3): point = 72
   Insn 143(l3): point = 74
   Insn 47(l3): point = 76
   Insn 46(l3): point = 78
   Insn 44(l3): point = 80
   Insn 41(l3): point = 82
   Insn 88(l3): point = 85
   Insn 87(l3): point = 87
   Insn 85(l3): point = 89
   Insn 84(l3): point = 91
   Insn 83(l3): point = 93
   Insn 82(l3): point = 95
   Insn 81(l3): point = 97
   Insn 77(l4): point = 100
   Insn 76(l4): point = 102
   Insn 74(l4): point = 104
   Insn 73(l4): point = 106
   Insn 72(l4): point = 108
   Insn 71(l4): point = 110
   Insn 70(l4): point = 112
   Insn 67(l4): point = 114
   Insn 65(l4): point = 116
   Insn 64(l4): point = 118
   Insn 62(l4): point = 120
   Insn 59(l4): point = 122
   Insn 58(l4): point = 124
   Insn 56(l4): point = 126
   Insn 36(l2): point = 129
   Insn 35(l2): point = 131
   Insn 32(l2): point = 133
   Insn 23(l1): point = 136
   Insn 22(l1): point = 138
   Insn 19(l1): point = 140
 a0(r120): [7..38]
 a1(r119): [11..55]
 a2(r155): [13..13]
 a3(r149): [13..17]
 a4(r143): [13..21]
 a5(r131): [13..23]
 a6(r128): [13..25]
 a7(r129): [13..27]
 a8(r126): [13..29]
 a9(r141): [32..32]
 a10(r121): [32..34]
 a11(r134): [32..36]
 a12(r162): [39..40]
 a13(r139): [47..47]
 a14(r122): [47..49]
 a15(r135): [47..53]
 a16(r161): [56..57]
 a17(r119): [64..99]
 a18(r120): [64..99]
 a19(r126): [64..99]
 a20(r128): [64..99]
 a21(r129): [64..99]
 a22(r131): [64..99]
 a23(r143): [64..99]
 a24(r149): [64..99]
 a25(r155): [64..99]
 a26(r153): [64..64]
 a27(r118): [64..66]
 a28(r123): [64..68]
 a29(r113): [64..76]
 a30(r147): [73..74]
 a31(r117): [64..82]
 a32(r145): [77..78]
 a33(r142): [77..80]
 a34(r163): [80..80]
 a35(r113): [100..128]
 a36(r117): [100..128]
 a37(r118): [100..128]
 a38(r119): [100..128]
 a39(r120): [100..128]
 a40(r123): [100..128]
 a41(r126): [100..128]
 a42(r128): [100..128]
 a43(r129): [100..128]
 a44(r131): [100..128]
 a45(r143): [100..128]
 a46(r149): [100..128]
 a47(r153): [100..128]
 a48(r155): [100..128]
 a49(r116): [113..116]
 a50(r115): [117..122]
 a51(r151): [123..124]
 a52(r148): [123..126]
 a53(r164): [126..126]
 a54(r119): [129..135]
 a55(r120): [129..135]
 a56(r121): [129..135]
 a57(r134): [129..135]
 a58(r141): [129..135]
 a59(r119): [136..142]
 a60(r122): [136..142]
 a61(r135): [136..142]
 a62(r139): [136..142]
Compressing live ranges: from 143 to 31 - 21%
Ranges after the compression:
 a0(r120): [0..4]
 a1(r119): [0..8]
 a2(r155): [1..1]
 a3(r149): [1..2]
 a4(r143): [1..2]
 a5(r131): [1..2]
 a6(r128): [1..2]
 a7(r129): [1..2]
 a8(r126): [1..2]
 a9(r141): [3..3]
 a10(r121): [3..4]
 a11(r134): [3..4]
 a12(r162): [5..6]
 a13(r139): [7..7]
 a14(r122): [7..8]
 a15(r135): [7..8]
 a16(r161): [9..10]
 a17(r119): [11..18]
 a18(r120): [11..18]
 a19(r126): [11..18]
 a20(r128): [11..18]
 a21(r129): [11..18]
 a22(r131): [11..18]
 a23(r143): [11..18]
 a24(r149): [11..18]
 a25(r155): [11..18]
 a26(r153): [11..11]
 a27(r118): [11..12]
 a28(r123): [11..12]
 a29(r113): [11..14]
 a30(r147): [13..14]
 a31(r117): [11..18]
 a32(r145): [15..16]
 a33(r142): [15..17]
 a34(r163): [17..17]
 a35(r113): [19..26]
 a36(r117): [19..26]
 a37(r118): [19..26]
 a38(r119): [19..26]
 a39(r120): [19..26]
 a40(r123): [19..26]
 a41(r126): [19..26]
 a42(r128): [19..26]
 a43(r129): [19..26]
 a44(r131): [19..26]
 a45(r143): [19..26]
 a46(r149): [19..26]
 a47(r153): [19..26]
 a48(r155): [19..26]
 a49(r116): [19..20]
 a50(r115): [21..22]
 a51(r151): [23..24]
 a52(r148): [23..25]
 a53(r164): [25..25]
 a54(r119): [27..28]
 a55(r120): [27..28]
 a56(r121): [27..28]
 a57(r134): [27..28]
 a58(r141): [27..28]
 a59(r119): [29..30]
 a60(r122): [29..30]
 a61(r135): [29..30]
 a62(r139): [29..30]
    Creating cap  a63(r153,l0: a26(r153,l3))
    Creating cap  a64(r118,l0: a27(r118,l3))
    Creating cap  a65(r123,l0: a28(r123,l3))
    Creating cap  a66(r113,l0: a29(r113,l3))
    Creating cap  a67(r147,l0: a30(r147,l3))
    Creating cap  a68(r117,l0: a31(r117,l3))
    Creating cap  a69(r145,l0: a32(r145,l3))
    Creating cap  a70(r142,l0: a33(r142,l3))
    Creating cap  a71(r163,l0: a34(r163,l3))
    Creating cap  a72(r116,l3: a49(r116,l4))
    Creating cap  a73(r115,l3: a50(r115,l4))
    Creating cap  a74(r151,l3: a51(r151,l4))
    Creating cap  a75(r148,l3: a52(r148,l4))
    Creating cap  a76(r164,l3: a53(r164,l4))
    Creating cap  a77(r116,l0: a72(r116,l3: a49(r116,l4)))
    Creating cap  a78(r115,l0: a73(r115,l3: a50(r115,l4)))
    Creating cap  a79(r151,l0: a74(r151,l3: a51(r151,l4)))
    Creating cap  a80(r148,l0: a75(r148,l3: a52(r148,l4)))
    Creating cap  a81(r164,l0: a76(r164,l3: a53(r164,l4)))
+++Allocating 1184 bytes for conflict table (uncompressed size 1312)
;; a0(r120,l0) conflicts: a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a9(r141,l0) a10(r121,l0) a11(r134,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a1(r119,l0) conflicts: a0(r120,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a9(r141,l0) a10(r121,l0) a11(r134,l0) a12(r162,l0) a13(r139,l0) a14(r122,l0) a15(r135,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a2(r155,l0) conflicts: a0(r120,l0) a1(r119,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a3(r149,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a4(r143,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a5(r131,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a6(r128,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a7(r129,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a8(r126,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a9(r141,l0) conflicts: a0(r120,l0) a1(r119,l0) a10(r121,l0) a11(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r121,l0) conflicts: a0(r120,l0) a1(r119,l0) a9(r141,l0) a11(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r134,l0) conflicts: a0(r120,l0) a1(r119,l0) a9(r141,l0) a10(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r162,l0) conflicts: a1(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r139,l0) conflicts: a1(r119,l0) a14(r122,l0) a15(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r122,l0) conflicts: a1(r119,l0) a13(r139,l0) a15(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r135,l0) conflicts: a1(r119,l0) a13(r139,l0) a14(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r161,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r119,l3) conflicts: a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a18(r120,l3) conflicts: a17(r119,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a19(r126,l3) conflicts: a17(r119,l3) a18(r120,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a20(r128,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a21(r129,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a22(r131,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a23(r143,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a24(r149,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a25(r155,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a26(r153,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a27(r118,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a28(r123,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a29(r113,l3) a31(r117,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a29(r113,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a31(r117,l3) a30(r147,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a30(r147,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a29(r113,l3) a31(r117,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r117,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a30(r147,l3) a32(r145,l3) a33(r142,l3) a34(r163,l3) a72(r116,l3) a73(r115,l3) a74(r151,l3) a75(r148,l3) a76(r164,l3)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a32(r145,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a31(r117,l3) a33(r142,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r142,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a31(r117,l3) a32(r145,l3) a34(r163,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r163,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a31(r117,l3) a33(r142,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r113,l4) conflicts: a49(r116,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a36(r117,l4) conflicts: a49(r116,l4) a35(r113,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a37(r118,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a38(r119,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a39(r120,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a40(r123,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a41(r126,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a42(r128,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a43(r129,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a44(r131,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a45(r143,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a46(r149,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a47(r153,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a47(r153,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a48(r155,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a48(r155,l4) conflicts: a49(r116,l4) a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a50(r115,l4) a51(r151,l4) a52(r148,l4) a53(r164,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a49(r116,l4) conflicts: a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r115,l4) conflicts: a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r151,l4) conflicts: a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a52(r148,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r148,l4) conflicts: a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a51(r151,l4) a53(r164,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r164,l4) conflicts: a35(r113,l4) a36(r117,l4) a37(r118,l4) a38(r119,l4) a39(r120,l4) a40(r123,l4) a41(r126,l4) a42(r128,l4) a43(r129,l4) a44(r131,l4) a45(r143,l4) a46(r149,l4) a47(r153,l4) a48(r155,l4) a52(r148,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r119,l2) conflicts: a55(r120,l2) a56(r121,l2) a57(r134,l2) a58(r141,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r120,l2) conflicts: a54(r119,l2) a56(r121,l2) a57(r134,l2) a58(r141,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r121,l2) conflicts: a54(r119,l2) a55(r120,l2) a57(r134,l2) a58(r141,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r134,l2) conflicts: a54(r119,l2) a55(r120,l2) a56(r121,l2) a58(r141,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r141,l2) conflicts: a54(r119,l2) a55(r120,l2) a56(r121,l2) a57(r134,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r119,l1) conflicts: a60(r122,l1) a61(r135,l1) a62(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r122,l1) conflicts: a59(r119,l1) a61(r135,l1) a62(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r135,l1) conflicts: a59(r119,l1) a60(r122,l1) a62(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r139,l1) conflicts: a59(r119,l1) a60(r122,l1) a61(r135,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r153,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a64(r118,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a65(r123,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a66(r113,l0) a68(r117,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a66(r113,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a68(r117,l0) a67(r147,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a67(r147,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a66(r113,l0) a68(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r117,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a67(r147,l0) a69(r145,l0) a70(r142,l0) a71(r163,l0) a77(r116,l0) a78(r115,l0) a79(r151,l0) a80(r148,l0) a81(r164,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a69(r145,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a68(r117,l0) a70(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r142,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a68(r117,l0) a69(r145,l0) a71(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r163,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a68(r117,l0) a70(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r116,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r115,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r151,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a75(r148,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r148,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a74(r151,l3) a76(r164,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a76(r164,l3) conflicts: a17(r119,l3) a18(r120,l3) a19(r126,l3) a20(r128,l3) a21(r129,l3) a22(r131,l3) a23(r143,l3) a24(r149,l3) a25(r155,l3) a26(r153,l3) a27(r118,l3) a28(r123,l3) a29(r113,l3) a31(r117,l3) a75(r148,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r116,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r115,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r151,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a80(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r148,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a79(r151,l0) a81(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r164,l0) conflicts: a0(r120,l0) a1(r119,l0) a2(r155,l0) a3(r149,l0) a4(r143,l0) a5(r131,l0) a6(r128,l0) a7(r129,l0) a8(r126,l0) a63(r153,l0) a64(r118,l0) a65(r123,l0) a66(r113,l0) a68(r117,l0) a80(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r120)<->a12(r162)@1:move
  cp1:a1(r119)<->a16(r161)@1:move
  cp2:a29(r113)<->a32(r145)@1:shuffle
  cp3:a29(r113)<->a33(r142)@1:shuffle
  cp4:a50(r115)<->a51(r151)@123:shuffle
  cp5:a50(r115)<->a52(r148)@123:shuffle
  cp6:a49(r116)<->a50(r115)@123:shuffle
  cp7:a66(r113)<->a69(r145)@1:shuffle
  cp8:a66(r113)<->a70(r142)@1:shuffle
  cp9:a73(r115)<->a74(r151)@123:shuffle
  cp10:a73(r115)<->a75(r148)@123:shuffle
  cp11:a72(r116)<->a73(r115)@123:shuffle
  cp12:a78(r115)<->a79(r151)@123:shuffle
  cp13:a78(r115)<->a80(r148)@123:shuffle
  cp14:a77(r116)<->a78(r115)@123:shuffle
  pref0:a1(r119)<-hr0@2
  pref1:a0(r120)<-hr0@2
  pref2:a12(r162)<-hr0@2
  pref3:a16(r161)<-hr0@2
  pref4:a49(r116)<-hr2@1980
  pref5:a48(r155)<-hr1@990
  pref6:a25(r155)<-hr1@990
  pref7:a2(r155)<-hr1@990
  pref8:a72(r116)<-hr2@990
  pref9:a77(r116)<-hr2@990
  regions=5, blocks=11, points=31
    allocnos=82 (big 0), copies=15, conflicts=0, ranges=63

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 10 6(->7:l3) 4(->5:l2) 2(->3:l1)
    all: 0r120 1r119 2r155 3r149 4r143 5r131 6r128 7r129 8r126 9r141 10r121 11r134 12r162 13r139 14r122 15r135 16r161 63r153 64r118 65r123 66r113 67r147 68r117 69r145 70r142 71r163 77r116 78r115 79r151 80r148 81r164
    modified regnos: 113 115 116 117 118 119 120 121 122 123 126 128 129 131 134 135 139 141 142 143 145 147 148 149 151 153 155 161 162 163 164
    border:
    Pressure: GENERAL_REGS=19
 Removing pref1:hr0@2
 Removing pref0:hr0@2
 Removing pref7:hr1@990
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14)@264816
          2:( 4-11)@297010
      Allocno a0r120 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a1r119 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a2r155 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a3r149 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a4r143 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a5r131 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a6r128 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a7r129 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a8r126 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a9r141 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a10r121 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a11r134 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a12r162 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a13r139 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a14r122 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a15r135 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a16r161 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a63r153 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a64r118 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a65r123 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a66r113 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a67r147 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a68r117 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a69r145 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a70r142 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a71r163 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a77r116 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a78r115 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a79r151 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a80r148 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a81r164 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
        Forming thread by copy 12:a78r115-a79r151 (freq=123):
          Result (freq=6930): a78r115(4950) a79r151(1980)
        Forming thread by copy 14:a77r116-a78r115 (freq=123):
          Result (freq=9900): a77r116(2970) a78r115(4950) a79r151(1980)
      Pushing a16(r161,l0)(cost 0)
      Pushing a12(r162,l0)(cost 0)
      Pushing a71(r163,l0: a34(r163,l3))(cost 0)
      Pushing a13(r139,l0)(cost 0)
      Pushing a11(r134,l0)(cost 0)
      Pushing a9(r141,l0)(cost 0)
      Pushing a15(r135,l0)(cost 0)
      Pushing a70(r142,l0: a33(r142,l3))(cost 0)
      Pushing a69(r145,l0: a32(r145,l3))(cost 0)
      Pushing a67(r147,l0: a30(r147,l3))(cost 0)
      Pushing a14(r122,l0)(cost 0)
      Pushing a10(r121,l0)(cost 0)
      Pushing a81(r164,l0: a76(r164,l3: a53(r164,l4)))(cost 0)
      Pushing a80(r148,l0: a75(r148,l3: a52(r148,l4)))(cost 0)
      Pushing a79(r151,l0: a74(r151,l3: a51(r151,l4)))(cost 0)
      Pushing a77(r116,l0: a72(r116,l3: a49(r116,l4)))(cost 0)
      Pushing a78(r115,l0: a73(r115,l3: a50(r115,l4)))(cost 0)
      Pushing a7(r129,l0)(potential spill: pri=0, cost=21)
      Forming thread from colorable bucket:
      Pushing a0(r120,l0)(potential spill: pri=1, cost=34)
      Forming thread from colorable bucket:
      Pushing a1(r119,l0)(potential spill: pri=1, cost=34)
      Forming thread from colorable bucket:
      Pushing a4(r143,l0)(potential spill: pri=6, cost=145)
      Forming thread from colorable bucket:
      Pushing a8(r126,l0)(potential spill: pri=9, cost=210)
      Forming thread from colorable bucket:
      Pushing a6(r128,l0)(potential spill: pri=9, cost=211)
      Forming thread from allocno a2r155:
        Making a2(r155,l0) colorable
      Forming thread from allocno a3r149:
        Making a3(r149,l0) colorable
      Forming thread from allocno a5r131:
        Making a5(r131,l0) colorable
      Forming thread from allocno a63r153:
        Making a63(r153,l0: a26(r153,l3)) colorable
      Forming thread from allocno a64r118:
        Making a64(r118,l0: a27(r118,l3)) colorable
      Forming thread from allocno a65r123:
        Making a65(r123,l0: a28(r123,l3)) colorable
      Forming thread from allocno a66r113:
        Forming thread by copy 7:a66r113-a69r145 (freq=1):
          Result (freq=1050): a66r113(1030) a69r145(20)
        Making a66(r113,l0: a29(r113,l3)) colorable
      Forming thread from allocno a68r117:
        Making a68(r117,l0: a31(r117,l3)) colorable
      Forming thread from colorable bucket:
      Pushing a2(r155,l0)(cost 7930)
      Pushing a3(r149,l0)(cost 9945)
      Pushing a63(r153,l0: a26(r153,l3))(cost 9950)
      Pushing a5(r131,l0)(cost 10305)
      Pushing a66(r113,l0: a29(r113,l3))(cost 10300)
      Pushing a65(r123,l0: a28(r123,l3))(cost 19810)
      Pushing a64(r118,l0: a27(r118,l3))(cost 19810)
      Pushing a68(r117,l0: a31(r117,l3))(cost 59800)
      Popping a68(r117,l0: a31(r117,l3))  --         assign reg 4
      Popping a64(r118,l0: a27(r118,l3))  --         assign reg 5
      Popping a65(r123,l0: a28(r123,l3))  --         assign reg 6
      Popping a66(r113,l0: a29(r113,l3))  --         assign reg 7
      Popping a5(r131,l0)  --         assign reg 8
      Popping a63(r153,l0: a26(r153,l3))  --         assign reg 9
      Popping a3(r149,l0)  --         assign reg 10
      Popping a2(r155,l0)  --         assign reg 11
      Popping a6(r128,l0)  -- spill
      Popping a8(r126,l0)  -- spill
      Popping a4(r143,l0)  -- spill
      Popping a1(r119,l0)  -- spill
      Popping a0(r120,l0)  -- spill
      Popping a7(r129,l0)  -- spill
      Popping a78(r115,l0: a73(r115,l3: a50(r115,l4)))  --         assign reg 2
      Popping a77(r116,l0: a72(r116,l3: a49(r116,l4)))  --         assign reg 2
      Popping a79(r151,l0: a74(r151,l3: a51(r151,l4)))  --         assign reg 2
      Popping a80(r148,l0: a75(r148,l3: a52(r148,l4)))  --         assign reg 3
      Popping a81(r164,l0: a76(r164,l3: a53(r164,l4)))  --         assign reg 2
      Popping a10(r121,l0)  --         assign reg 3
      Popping a14(r122,l0)  --         assign reg 3
      Popping a67(r147,l0: a30(r147,l3))  --         assign reg 3
      Popping a69(r145,l0: a32(r145,l3))  --         assign reg 7
      Popping a70(r142,l0: a33(r142,l3))  --         assign reg 3
      Popping a15(r135,l0)  --         assign reg 2
      Popping a9(r141,l0)  --         assign reg 2
      Popping a11(r134,l0)  --         assign reg 1
      Popping a13(r139,l0)  --         assign reg 1
      Popping a71(r163,l0: a34(r163,l3))  --         assign reg 2
      Popping a12(r162,l0)  --         assign reg 0
      Popping a16(r161,l0)  --         assign reg 0

  Loop 3 (parent 0, header bb7, depth 1)
    bbs: 9(->10:l0) 7(->8:l4)
    all: 17r119 18r120 19r126 20r128 21r129 22r131 23r143 24r149 25r155 26r153 27r118 28r123 29r113 30r147 31r117 32r145 33r142 34r163 72r116 73r115 74r151 75r148 76r164
    modified regnos: 113 115 116 117 118 123 126 128 131 142 145 147 148 151 153 163 164
    border: 17r119 18r120 19r126 20r128 21r129 22r131 23r143 24r149 25r155
    Pressure: GENERAL_REGS=19
 Removing pref6:hr1@990
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14)@262660
          2:( 4-11)@296600
      Spill a17(r119,l3)
      Spill a18(r120,l3)
      Spill a21(r129,l3)
      Allocno a19r126 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a20r128 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a22r131 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a23r143 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a24r149 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a25r155 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a26r153 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a27r118 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a28r123 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a29r113 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a30r147 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a31r117 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a32r145 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a33r142 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a34r163 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a72r116 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a73r115 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a74r151 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a75r148 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a76r164 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
        Forming thread by copy 9:a73r115-a74r151 (freq=123):
          Result (freq=6930): a73r115(4950) a74r151(1980)
        Forming thread by copy 11:a72r116-a73r115 (freq=123):
          Result (freq=9900): a72r116(2970) a73r115(4950) a74r151(1980)
      Pushing a34(r163,l3)(cost 0)
      Pushing a33(r142,l3)(cost 0)
      Pushing a32(r145,l3)(cost 0)
      Pushing a30(r147,l3)(cost 0)
      Pushing a76(r164,l3: a53(r164,l4))(cost 0)
      Pushing a75(r148,l3: a52(r148,l4))(cost 0)
      Pushing a74(r151,l3: a51(r151,l4))(cost 0)
      Pushing a72(r116,l3: a49(r116,l4))(cost 0)
      Pushing a73(r115,l3: a50(r115,l4))(cost 0)
      Pushing a23(r143,l3)(potential spill: pri=2, cost=60)
      Forming thread from colorable bucket:
      Pushing a19(r126,l3)(potential spill: pri=7, cost=160)
      Forming thread from colorable bucket:
      Pushing a20(r128,l3)(potential spill: pri=7, cost=170)
      Forming thread from allocno a22r131:
        Making a22(r131,l3) colorable
      Forming thread from allocno a24r149:
        Making a24(r149,l3) colorable
      Forming thread from allocno a25r155:
        Making a25(r155,l3) colorable
      Forming thread from allocno a26r153:
        Making a26(r153,l3) colorable
      Forming thread from allocno a27r118:
        Making a27(r118,l3) colorable
      Forming thread from allocno a28r123:
        Making a28(r123,l3) colorable
      Forming thread from allocno a29r113:
        Forming thread by copy 2:a29r113-a32r145 (freq=1):
          Result (freq=1050): a29r113(1030) a32r145(20)
        Making a29(r113,l3) colorable
      Forming thread from allocno a31r117:
        Making a31(r117,l3) colorable
      Forming thread from colorable bucket:
      Pushing a25(r155,l3)(cost 7960)
      Pushing a24(r149,l3)(cost 9940)
      Pushing a26(r153,l3)(cost 9950)
      Pushing a22(r131,l3)(cost 10340)
      Pushing a29(r113,l3)(cost 10300)
      Pushing a28(r123,l3)(cost 19810)
      Pushing a27(r118,l3)(cost 19810)
      Pushing a31(r117,l3)(cost 59800)
      Popping a31(r117,l3)  --         assign reg 4
      Popping a27(r118,l3)  --         assign reg 5
      Popping a28(r123,l3)  --         assign reg 6
      Popping a29(r113,l3)  --         assign reg 7
      Popping a22(r131,l3)  --         assign reg 8
      Popping a26(r153,l3)  --         assign reg 9
      Popping a24(r149,l3)  --         assign reg 10
      Popping a25(r155,l3)  --         assign reg 11
      Popping a20(r128,l3)  -- spill
      Popping a19(r126,l3)  -- spill
      Popping a23(r143,l3)  -- spill
      Popping a73(r115,l3: a50(r115,l4))  --         assign reg 2
      Popping a72(r116,l3: a49(r116,l4))  --         assign reg 2
      Popping a74(r151,l3: a51(r151,l4))  --         assign reg 2
      Popping a75(r148,l3: a52(r148,l4))  --         assign reg 3
      Popping a76(r164,l3: a53(r164,l4))  --         assign reg 2
      Popping a30(r147,l3)  --         assign reg 3
      Popping a32(r145,l3)  --         assign reg 7
      Popping a33(r142,l3)  --         assign reg 3
      Popping a34(r163,l3)  --         assign reg 2

  Loop 4 (parent 3, header bb8, depth 2)
    bbs: 8(->9:l3)
    all: 35r113 36r117 37r118 38r119 39r120 40r123 41r126 42r128 43r129 44r131 45r143 46r149 47r153 48r155 49r116 50r115 51r151 52r148 53r164
    modified regnos: 115 116 117 118 123 148 151 164
    border: 35r113 36r117 37r118 38r119 39r120 40r123 41r126 42r128 43r129 44r131 45r143 46r149 47r153 48r155
    Pressure: GENERAL_REGS=19
 Removing pref5:hr1@990
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-8 10-12 14)@261360
          2:( 4-8 10-11)@273240
      Spill a38(r119,l4)
      Spill a39(r120,l4)
      Spill a41(r126,l4)
      Spill a42(r128,l4)
      Spill a43(r129,l4)
      Spill a45(r143,l4)
      Allocno a35r113 of GENERAL_REGS(14) has 7 avail. regs  4-8 10-11, node:  4-8 10-11 (confl regs =  0-3 12-106)
      Allocno a36r117 of GENERAL_REGS(14) has 7 avail. regs  4-8 10-11, node:  4-8 10-11 (confl regs =  0-3 12-106)
      Allocno a37r118 of GENERAL_REGS(14) has 7 avail. regs  4-8 10-11, node:  4-8 10-11 (confl regs =  0-3 12-106)
      Allocno a40r123 of GENERAL_REGS(14) has 7 avail. regs  4-8 10-11, node:  4-8 10-11 (confl regs =  0-3 12-106)
      Allocno a44r131 of GENERAL_REGS(14) has 7 avail. regs  4-8 10-11, node:  4-8 10-11 (confl regs =  0-3 12-106)
      Allocno a46r149 of GENERAL_REGS(14) has 7 avail. regs  4-8 10-11, node:  4-8 10-11 (confl regs =  0-3 12-106)
      Allocno a48r155 of GENERAL_REGS(14) has 7 avail. regs  4-8 10-11, node:  4-8 10-11 (confl regs =  0-3 12-106)
      Allocno a49r116 of GENERAL_REGS(14) has 13 avail. regs  0-8 10-12 14, node:  0-8 10-12 14 (confl regs =  13 15-106)
      Allocno a50r115 of GENERAL_REGS(14) has 13 avail. regs  0-8 10-12 14, node:  0-8 10-12 14 (confl regs =  13 15-106)
      Allocno a51r151 of GENERAL_REGS(14) has 13 avail. regs  0-8 10-12 14, node:  0-8 10-12 14 (confl regs =  13 15-106)
      Allocno a52r148 of GENERAL_REGS(14) has 13 avail. regs  0-8 10-12 14, node:  0-8 10-12 14 (confl regs =  13 15-106)
      Allocno a53r164 of GENERAL_REGS(14) has 13 avail. regs  0-8 10-12 14, node:  0-8 10-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
        Forming thread by copy 4:a50r115-a51r151 (freq=123):
          Result (freq=6930): a50r115(4950) a51r151(1980)
        Forming thread by copy 6:a49r116-a50r115 (freq=123):
          Result (freq=9900): a49r116(2970) a50r115(4950) a51r151(1980)
      Pushing a53(r164,l4)(cost 0)
      Pushing a52(r148,l4)(cost 0)
      Pushing a51(r151,l4)(cost 0)
      Pushing a49(r116,l4)(cost 0)
      Pushing a50(r115,l4)(cost 0)
      Forming thread from allocno a35r113:
        Making a35(r113,l4) colorable
      Forming thread from allocno a36r117:
        Making a36(r117,l4) colorable
      Forming thread from allocno a37r118:
        Making a37(r118,l4) colorable
      Forming thread from allocno a40r123:
        Making a40(r123,l4) colorable
      Forming thread from allocno a44r131:
        Making a44(r131,l4) colorable
      Forming thread from allocno a46r149:
        Making a46(r149,l4) colorable
      Forming thread from allocno a48r155:
        Making a48(r155,l4) colorable
      Pushing a48(r155,l4)(cost 8300)
      Pushing a46(r149,l4)(cost 10280)
      Pushing a44(r131,l4)(cost 10280)
      Pushing a35(r113,l4)(cost 10120)
      Pushing a40(r123,l4)(cost 20020)
      Pushing a37(r118,l4)(cost 20020)
      Pushing a36(r117,l4)(cost 59620)
      Popping a36(r117,l4)  --         assign reg 4
      Popping a37(r118,l4)  --         assign reg 5
      Popping a40(r123,l4)  --         assign reg 6
      Popping a35(r113,l4)  --         assign reg 7
      Popping a44(r131,l4)  --         assign reg 8
      Popping a46(r149,l4)  --         assign reg 10
      Popping a48(r155,l4)  --         assign reg 11
      Popping a50(r115,l4)  --         assign reg 2
      Popping a49(r116,l4)  --         assign reg 2
      Popping a51(r151,l4)  --         assign reg 2
      Popping a52(r148,l4)  --         assign reg 3
      Popping a53(r164,l4)  --         assign reg 2

  Loop 2 (parent 0, header bb5, depth 1)
    bbs: 5(->6:l0)
    all: 54r119 55r120 56r121 57r134 58r141
    modified regnos: 121
    border: 54r119 55r120 56r121 57r134 58r141
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-1 3-12 14)@800
      Spill a54(r119,l2)
      Spill a55(r120,l2)
      Allocno a56r121 of GENERAL_REGS(14) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  13 15-106)
      Allocno a57r134 of GENERAL_REGS(14) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
      Pushing a57(r134,l2)(cost 0)
      Pushing a56(r121,l2)(cost 0)
      Popping a56(r121,l2)  --         assign reg 3
      Popping a57(r134,l2)  --         assign reg 1

  Loop 1 (parent 0, header bb3, depth 1)
    bbs: 3(->4:l0)
    all: 59r119 60r122 61r135 62r139
    modified regnos: 122
    border: 59r119 60r122 61r135 62r139
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0 2-12 14)@800
      Spill a59(r119,l1)
      Allocno a60r122 of GENERAL_REGS(14) has 13 avail. regs  0 2-12 14, node:  0 2-12 14 (confl regs =  13 15-106)
      Allocno a61r135 of GENERAL_REGS(14) has 13 avail. regs  0 2-12 14, node:  0 2-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
      Pushing a61(r135,l1)(cost 0)
      Pushing a60(r122,l1)(cost 0)
      Popping a60(r122,l1)  --         assign reg 3
      Popping a61(r135,l1)  --         assign reg 2
Disposition:
   35:r113 l4     7   29:r113 l3     7   50:r115 l4     2   49:r116 l4     2
   36:r117 l4     4   31:r117 l3     4   37:r118 l4     5   27:r118 l3     5
   59:r119 l1   mem   54:r119 l2   mem   38:r119 l4   mem   17:r119 l3   mem
    1:r119 l0   mem   55:r120 l2   mem   39:r120 l4   mem   18:r120 l3   mem
    0:r120 l0   mem   56:r121 l2     3   10:r121 l0     3   60:r122 l1     3
   14:r122 l0     3   40:r123 l4     6   28:r123 l3     6   41:r126 l4   mem
   19:r126 l3   mem    8:r126 l0   mem   42:r128 l4   mem   20:r128 l3   mem
    6:r128 l0   mem   43:r129 l4   mem   21:r129 l3   mem    7:r129 l0   mem
   44:r131 l4     8   22:r131 l3     8    5:r131 l0     8   57:r134 l2     1
   11:r134 l0     1   61:r135 l1     2   15:r135 l0     2   62:r139 l1     1
   13:r139 l0     1   58:r141 l2     2    9:r141 l0     2   33:r142 l3     3
   45:r143 l4   mem   23:r143 l3   mem    4:r143 l0   mem   32:r145 l3     7
   30:r147 l3     3   52:r148 l4     3   46:r149 l4    10   24:r149 l3    10
    3:r149 l0    10   51:r151 l4     2   47:r153 l4     9   26:r153 l3     9
   48:r155 l4    11   25:r155 l3    11    2:r155 l0    11   16:r161 l0     0
   12:r162 l0     0   34:r163 l3     2   53:r164 l4     2
New iteration of spill/restore move
      Changing RTL for loop 3 (header bb7)
  8 vs parent 8:      Creating newreg=165 from oldreg=131
  10 vs parent 10:      Creating newreg=166 from oldreg=149
  11 vs parent 11:      Creating newreg=167 from oldreg=155
rescanning insn with uid = 85.
rescanning insn with uid = 87.
rescanning insn with uid = 41.
      Changing RTL for loop 4 (header bb8)
  7 vs parent 7:      Creating newreg=168 from oldreg=113
  4 vs parent 4:      Creating newreg=169 from oldreg=117
  5 vs parent 5:      Creating newreg=170 from oldreg=118
  6 vs parent 6:      Creating newreg=171 from oldreg=123
  8 vs parent 8:      Creating newreg=172 from oldreg=165
  10 vs parent 10:      Creating newreg=173 from oldreg=166
  11 vs parent 11:      Creating newreg=174 from oldreg=167
rescanning insn with uid = 56.
rescanning insn with uid = 58.
rescanning insn with uid = 62.
rescanning insn with uid = 64.
rescanning insn with uid = 65.
rescanning insn with uid = 67.
rescanning insn with uid = 71.
rescanning insn with uid = 74.
rescanning insn with uid = 76.
      Changing RTL for loop 2 (header bb5)
  3 vs parent 3:      Creating newreg=175 from oldreg=121
  1 vs parent 1:      Creating newreg=176 from oldreg=134
rescanning insn with uid = 32.
rescanning insn with uid = 35.
      Changing RTL for loop 1 (header bb3)
  3 vs parent 3:      Creating newreg=177 from oldreg=122
  2 vs parent 2:      Creating newreg=178 from oldreg=135
rescanning insn with uid = 19.
rescanning insn with uid = 22.
scanning new insn with uid = 144.
scanning new insn with uid = 145.
scanning new insn with uid = 146.
scanning new insn with uid = 147.
scanning new insn with uid = 148.
scanning new insn with uid = 149.
scanning new insn with uid = 150.
scanning new insn with uid = 151.
scanning new insn with uid = 152.
scanning new insn with uid = 153.
scanning new insn with uid = 154.
scanning new insn with uid = 155.
scanning new insn with uid = 156.
scanning new insn with uid = 157.
scanning new insn with uid = 158.
scanning new insn with uid = 159.
scanning new insn with uid = 160.
    Adding cp15:a14r122-a60r177
    Adding range [32..32] to allocno a14r122
    Adding cp16:a15r135-a61r178
    Adding range [32..34] to allocno a15r135
    Adding range [33..35] to allocno a60r177
    Adding range [35..35] to allocno a61r178
    Adding range [32..35] to live through  allocno a1r119
    Adding range [32..35] to live through  allocno a13r139
    Adding cp17:a10r121-a56r175
    Adding range [37..37] to allocno a10r121
    Adding cp18:a11r134-a57r176
    Adding range [37..39] to allocno a11r134
    Adding range [38..40] to allocno a56r175
    Adding range [40..40] to allocno a57r176
    Adding range [37..40] to live through  allocno a1r119
    Adding range [37..40] to live through  allocno a0r120
    Adding range [37..40] to live through  allocno a9r141
    Adding cp19:a5r131-a22r165
    Adding range [42..42] to allocno a5r131
    Adding cp20:a3r149-a24r166
    Adding range [42..44] to allocno a3r149
    Adding cp21:a2r155-a25r167
    Adding range [42..46] to allocno a2r155
    Adding range [43..47] to allocno a22r165
    Adding range [45..47] to allocno a24r166
    Adding range [47..47] to allocno a25r167
    Adding range [42..47] to live through  allocno a1r119
    Adding range [42..47] to live through  allocno a0r120
    Adding range [42..47] to live through  allocno a8r126
    Adding range [42..47] to live through  allocno a6r128
    Adding range [42..47] to live through  allocno a7r129
    Adding range [42..47] to live through  allocno a4r143
    Adding cp22:a29r113-a35r168
    Adding range [49..49] to allocno a29r113
    Adding cp23:a31r117-a36r169
    Adding range [49..51] to allocno a31r117
    Adding cp24:a27r118-a37r170
    Adding range [49..53] to allocno a27r118
    Adding cp25:a28r123-a40r171
    Adding range [49..55] to allocno a28r123
    Adding cp26:a22r165-a44r172
    Adding range [49..57] to allocno a22r165
    Adding cp27:a24r166-a46r173
    Adding range [49..59] to allocno a24r166
    Adding cp28:a25r167-a48r174
    Adding range [49..61] to allocno a25r167
    Adding range [50..62] to allocno a35r168
    Adding range [52..62] to allocno a36r169
    Adding range [54..62] to allocno a37r170
    Adding range [56..62] to allocno a40r171
    Adding range [58..62] to allocno a44r172
    Adding range [60..62] to allocno a46r173
    Adding range [62..62] to allocno a48r174
    Adding range [49..62] to live through  allocno a17r119
    Adding range [49..62] to live through  allocno a18r120
    Adding range [49..62] to live through  allocno a19r126
    Adding range [49..62] to live through  allocno a20r128
    Adding range [49..62] to live through  allocno a21r129
    Adding range [49..62] to live through  allocno a23r143
    Adding range [49..62] to live through  allocno a26r153
    Adding cp29:a22r165-a44r172
    Adding range [64..64] to allocno a44r172
    Adding cp30:a24r166-a46r173
    Adding range [64..66] to allocno a46r173
    Adding cp31:a25r167-a48r174
    Adding range [64..68] to allocno a48r174
    Adding range [65..69] to allocno a22r165
    Adding range [67..69] to allocno a24r166
    Adding range [69..69] to allocno a25r167
    Adding range [64..69] to live through  allocno a17r119
    Adding range [64..69] to live through  allocno a18r120
    Adding range [64..69] to live through  allocno a19r126
    Adding range [64..69] to live through  allocno a20r128
    Adding range [64..69] to live through  allocno a21r129
    Adding range [64..69] to live through  allocno a23r143
    New r165: setting preferred GENERAL_REGS, alternative NO_REGS
    New r166: setting preferred GENERAL_REGS, alternative NO_REGS
    New r167: setting preferred GENERAL_REGS, alternative NO_REGS
    New r168: setting preferred LO_REGS, alternative GENERAL_REGS
    New r169: setting preferred GENERAL_REGS, alternative NO_REGS
    New r170: setting preferred GENERAL_REGS, alternative NO_REGS
    New r171: setting preferred GENERAL_REGS, alternative NO_REGS
    New r172: setting preferred GENERAL_REGS, alternative NO_REGS
    New r173: setting preferred GENERAL_REGS, alternative NO_REGS
    New r174: setting preferred GENERAL_REGS, alternative NO_REGS
    New r175: setting preferred GENERAL_REGS, alternative NO_REGS
    New r176: setting preferred GENERAL_REGS, alternative NO_REGS
    New r177: setting preferred GENERAL_REGS, alternative NO_REGS
    New r178: setting preferred GENERAL_REGS, alternative NO_REGS
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 14 count 15 (  1.4)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 3
;;  header 7, latch 9
;;  depth 1, outer 0
;;  nodes: 7 9 8
;;
;; Loop 4
;;  header 8, latch 8
;;  depth 2, outer 3
;;  nodes: 8
;;
;; Loop 2
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 8 9 }
;; 9 succs { 7 10 }
;; 10 succs { 1 }
+++Costs: overall 1167, reg -4, mem 1171, ld 0, st 0, move 214
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={9d,2u} r2={8d,1u} r3={7d} r7={1d,10u} r12={12d} r13={1d,16u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,10u} r103={1d,9u} r104={6d} r105={6d} r106={6d} r113={2d,3u} r115={2d,3u} r116={1d,2u} r117={1d,4u,1e} r118={1d,1u} r119={1d,4u} r120={1d,4u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r126={2d,1u} r128={2d,2u} r129={1d,2u} r131={1d,1u} r134={1d,1u} r135={2d,2u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r143={2d,2u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r149={2d,2u} r151={1d,1u} r153={1d,1u} r155={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d} r164={1d} r165={3d,4u} r166={2d,1u} r167={2d,1u} r168={1d,1u} r169={2d,5u,1e} r170={2d,1u} r171={2d,1u} r172={1d,2u} r173={1d,2u} r174={1d,2u} r175={2d,2u} r176={1d,1u} r177={2d,2u} r178={1d,1u} 
;;    total ref usage 724{586d,136u,2e} in 84{78 regular + 6 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 2 12 2 (set (reg:SI 0 r0)
        (const_int 40000 [0x9c40])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 12 11 132 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f3dd6fd3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:33 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 132 12 13 2 (set (reg:SI 161)
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 13 132 15 2 (set (reg/f:SI 119 [ _30 ])
        (reg:SI 161)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_NOALIAS (reg/f:SI 137)
            (nil))))
(note 15 13 141 2 NOTE_INSN_DELETED)
(insn 141 15 142 2 (set (reg/f:SI 135 [ _90 ])
        (plus:SI (reg/f:SI 119 [ _30 ])
            (const_int 39936 [0x9c00]))) 7 {*arm_addsi3}
     (nil))
(insn 142 141 3 2 (set (reg/f:SI 135 [ _90 ])
        (plus:SI (reg/f:SI 135 [ _90 ])
            (const_int 64 [0x40]))) 7 {*arm_addsi3}
     (nil))
(insn 3 142 18 2 (set (reg/f:SI 122 [ _44 ])
        (reg/f:SI 119 [ _30 ])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 18 3 144 2 (set (reg:SI 139)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 144 18 145 2 (set (reg/f:SI 177 [orig:122 _44 ] [122])
        (reg/f:SI 122 [ _44 ])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 122 [ _44 ])
        (nil)))
(insn 145 144 21 2 (set (reg/f:SI 178 [orig:135 _90 ] [135])
        (reg/f:SI 135 [ _90 ])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 135 [ _90 ])
        (nil)))
(code_label 21 145 17 3 2 (nil) [1 uses])
(note 17 21 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 22 3 (set (mem:SI (post_inc:SI (reg/f:SI 177 [orig:122 _44 ] [122])) [0 MEM[(int *)_58]+0 S4 A32])
        (reg:SI 139)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg/f:SI 177 [orig:122 _44 ] [122])
        (nil)))
(insn 22 19 23 3 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 177 [orig:122 _44 ] [122])
            (reg/f:SI 178 [orig:135 _90 ] [135]))) "./understand-elf/matmul-v2.cpp":12:33 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 21)
            (pc))) "./understand-elf/matmul-v2.cpp":12:33 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 21)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 0 r0)
        (const_int 400 [0x190])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 26 25 133 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f3dd6fd3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:28 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 133 26 27 4 (set (reg:SI 162)
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 27 133 29 4 (set (reg/f:SI 120 [ _32 ])
        (reg:SI 162)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_NOALIAS (reg/f:SI 140)
            (nil))))
(insn 29 27 4 4 (set (reg/f:SI 134 [ _89 ])
        (plus:SI (reg/f:SI 120 [ _32 ])
            (const_int 400 [0x190]))) 7 {*arm_addsi3}
     (nil))
(insn 4 29 31 4 (set (reg/f:SI 121 [ _41 ])
        (reg/f:SI 120 [ _32 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 31 4 146 4 (set (reg:SI 141)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 146 31 147 4 (set (reg/f:SI 175 [orig:121 _41 ] [121])
        (reg/f:SI 121 [ _41 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 121 [ _41 ])
        (nil)))
(insn 147 146 34 4 (set (reg/f:SI 176 [orig:134 _89 ] [134])
        (reg/f:SI 134 [ _89 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 134 [ _89 ])
        (nil)))
(code_label 34 147 30 5 3 (nil) [1 uses])
(note 30 34 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 35 5 (set (mem:SI (post_inc:SI (reg/f:SI 175 [orig:121 _41 ] [121])) [0 MEM[(int *)_60]+0 S4 A32])
        (reg:SI 141)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg/f:SI 175 [orig:121 _41 ] [121])
        (nil)))
(insn 35 32 36 5 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 175 [orig:121 _41 ] [121])
            (reg/f:SI 176 [orig:134 _89 ] [134]))) "./understand-elf/matmul-v2.cpp":13:28 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 34)
            (pc))) "./understand-elf/matmul-v2.cpp":13:28 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 34)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:SI 126 [ ivtmp.33 ])
        (plus:SI (reg/f:SI 120 [ _32 ])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 39 38 5 6 (set (reg/f:SI 129 [ ivtmp.35 ])
        (plus:SI (reg/f:SI 119 [ _30 ])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 5 39 6 6 (set (reg:SI 128 [ ivtmp.35 ])
        (reg/f:SI 129 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 134 6 (set (reg:SI 131 [ ivtmp.38 ])
        (const_int 100 [0x64])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 100 [0x64])
        (nil)))
(insn 134 6 135 6 (set (reg:SI 143)
        (const_int 60495 [0xec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 60495 [0xec4f])
        (nil)))
(insn 135 134 137 6 (set (zero_extract:SI (reg:SI 143)
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20164 [0x4ec4])) "./understand-elf/matmul-v2.cpp":15:21 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1321528399 [0x4ec4ec4f])
        (nil)))
(insn 137 135 138 6 (set (reg:SI 149)
        (const_int 26215 [0x6667])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 26215 [0x6667])
        (nil)))
(insn 138 137 68 6 (set (zero_extract:SI (reg:SI 149)
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 26214 [0x6666])) "./understand-elf/matmul-v2.cpp":17:30 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1717986919 [0x66666667])
        (nil)))
(insn 68 138 148 6 (set (reg/f:SI 155)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (nil)))
(insn 148 68 149 6 (set (reg:SI 165 [orig:131 ivtmp.38 ] [131])
        (reg:SI 131 [ ivtmp.38 ])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 131 [ ivtmp.38 ])
        (nil)))
(insn 149 148 150 6 (set (reg:SI 166 [149])
        (reg:SI 149)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 149)
        (nil)))
(insn 150 149 86 6 (set (reg/f:SI 167 [155])
        (reg/f:SI 155)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 155)
        (nil)))
(code_label 86 150 40 7 5 (nil) [1 uses])
(note 40 86 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 44 7 (set (reg:SI 117 [ ivtmp.18 ])
        (plus:SI (reg:SI 165 [orig:131 ivtmp.38 ] [131])
            (const_int -100 [0xffffffffffffff9c]))) 7 {*arm_addsi3}
     (nil))
(insn 44 41 45 7 (parallel [
            (set (reg:SI 142)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                            (sign_extend:DI (reg:SI 143)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 163))
        ]) "./understand-elf/matmul-v2.cpp":15:21 71 {*smull_high}
     (expr_list:REG_UNUSED (reg:SI 163)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                        (const_int 1321528399 [0x4ec4ec4f]))
                    (const_int 32 [0x20])))
            (nil))))
(note 45 44 46 7 NOTE_INSN_DELETED)
(insn 46 45 47 7 (set (reg:SI 145)
        (ashiftrt:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
(insn 47 46 49 7 (set (reg:SI 113 [ _4 ])
        (minus:SI (ashiftrt:SI (reg:SI 142)
                (const_int 2 [0x2]))
            (reg:SI 145))) "./understand-elf/matmul-v2.cpp":15:21 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 142)
            (nil))))
(note 49 47 143 7 NOTE_INSN_DELETED)
(insn 143 49 50 7 (set (reg:SI 147)
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 13 [0xd])
        (nil)))
(insn 50 143 52 7 (set (reg:SI 113 [ _4 ])
        (minus:SI (reg:SI 117 [ ivtmp.18 ])
            (mult:SI (reg:SI 147)
                (reg:SI 113 [ _4 ])))) "./understand-elf/matmul-v2.cpp":15:21 58 {*mls}
     (expr_list:REG_DEAD (reg:SI 147)
        (nil)))
(insn 52 50 7 7 (set (mem:SI (pre_inc:SI (reg:SI 126 [ ivtmp.33 ])) [0 MEM[(int *)_84]+0 S4 A32])
        (reg:SI 113 [ _4 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 126 [ ivtmp.33 ])
        (nil)))
(insn 7 52 8 7 (set (reg:SI 123 [ ivtmp.23 ])
        (reg:SI 128 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 60 7 (set (reg:SI 118 [ ivtmp.20 ])
        (reg/f:SI 129 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 60 8 151 7 (set (reg:SI 153)
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 20 [0x14])
        (nil)))
(insn 151 60 152 7 (set (reg:SI 168 [orig:113 _4 ] [113])
        (reg:SI 113 [ _4 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 113 [ _4 ])
        (nil)))
(insn 152 151 153 7 (set (reg:SI 169 [orig:117 ivtmp.18 ] [117])
        (reg:SI 117 [ ivtmp.18 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 117 [ ivtmp.18 ])
        (nil)))
(insn 153 152 154 7 (set (reg:SI 170 [orig:118 ivtmp.20 ] [118])
        (reg:SI 118 [ ivtmp.20 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 118 [ ivtmp.20 ])
        (nil)))
(insn 154 153 155 7 (set (reg:SI 171 [orig:123 ivtmp.23 ] [123])
        (reg:SI 123 [ ivtmp.23 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 123 [ ivtmp.23 ])
        (nil)))
(insn 155 154 156 7 (set (reg:SI 172 [orig:131 ivtmp.38 ] [131])
        (reg:SI 165 [orig:131 ivtmp.38 ] [131])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 165 [orig:131 ivtmp.38 ] [131])
        (nil)))
(insn 156 155 157 7 (set (reg:SI 173 [149])
        (reg:SI 166 [149])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 166 [149])
        (nil)))
(insn 157 156 75 7 (set (reg/f:SI 174 [155])
        (reg/f:SI 167 [155])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 167 [155])
        (nil)))
(code_label 75 157 53 8 4 (nil) [1 uses])
(note 53 75 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 53 57 8 (parallel [
            (set (reg:SI 148)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 169 [orig:117 ivtmp.18 ] [117]))
                            (sign_extend:DI (reg:SI 173 [149])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 164))
        ]) "./understand-elf/matmul-v2.cpp":17:30 71 {*smull_high}
     (expr_list:REG_UNUSED (reg:SI 164)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 169 [orig:117 ivtmp.18 ] [117]))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(note 57 56 58 8 NOTE_INSN_DELETED)
(insn 58 57 59 8 (set (reg:SI 151)
        (ashiftrt:SI (reg:SI 169 [orig:117 ivtmp.18 ] [117])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
(insn 59 58 61 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (ashiftrt:SI (reg:SI 148)
                (const_int 3 [0x3]))
            (reg:SI 151))) "./understand-elf/matmul-v2.cpp":17:30 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 148)
            (nil))))
(note 61 59 62 8 NOTE_INSN_DELETED)
(insn 62 61 64 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 169 [orig:117 ivtmp.18 ] [117])
            (mult:SI (reg:SI 153)
                (reg:SI 115 [ _9 ])))) "./understand-elf/matmul-v2.cpp":17:30 58 {*mls}
     (nil))
(insn 64 62 65 8 (set (mem:SI (pre_inc:SI (reg:SI 170 [orig:118 ivtmp.20 ] [118])) [0 MEM[(int *)_56]+0 S4 A32])
        (reg:SI 115 [ _9 ])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 170 [orig:118 ivtmp.20 ] [118])
        (nil)))
(insn 65 64 67 8 (set (reg:SI 116 [ _15 ])
        (mult:SI (reg:SI 115 [ _9 ])
            (reg:SI 168 [orig:113 _4 ] [113]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
        (nil)))
(insn 67 65 70 8 (set (mem:SI (pre_inc:SI (reg:SI 171 [orig:123 ivtmp.23 ] [123])) [0 MEM[(int *)_53]+0 S4 A32])
        (reg:SI 116 [ _15 ])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 171 [orig:123 ivtmp.23 ] [123])
        (nil)))
(insn 70 67 71 8 (set (reg:SI 2 r2)
        (reg:SI 116 [ _15 ])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116 [ _15 ])
        (nil)))
(insn 71 70 72 8 (set (reg:SI 1 r1)
        (reg/f:SI 174 [155])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (nil)))
(insn 72 71 73 8 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 73 72 74 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3dd6d8f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 74 73 76 8 (set (reg:SI 169 [orig:117 ivtmp.18 ] [117])
        (plus:SI (reg:SI 169 [orig:117 ivtmp.18 ] [117])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:22 7 {*arm_addsi3}
     (nil))
(insn 76 74 77 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 169 [orig:117 ivtmp.18 ] [117])
            (reg:SI 172 [orig:131 ivtmp.38 ] [131]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 77 76 78 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 75)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 75)
(note 78 77 158 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 158 78 159 9 (set (reg:SI 165 [orig:131 ivtmp.38 ] [131])
        (reg:SI 172 [orig:131 ivtmp.38 ] [131])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 172 [orig:131 ivtmp.38 ] [131])
        (nil)))
(insn 159 158 160 9 (set (reg:SI 166 [149])
        (reg:SI 173 [149])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 173 [149])
        (nil)))
(insn 160 159 79 9 (set (reg/f:SI 167 [155])
        (reg/f:SI 174 [155])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 174 [155])
        (nil)))
(note 79 160 81 9 NOTE_INSN_DELETED)
(insn 81 79 82 9 (set (reg:SI 1 r1)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 1 [0x1])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
        (nil)))
(insn 82 81 83 9 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 83 82 84 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3dd6d8f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 84 83 85 9 (set (reg:SI 128 [ ivtmp.35 ])
        (plus:SI (reg:SI 128 [ ivtmp.35 ])
            (const_int 400 [0x190]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn 85 84 87 9 (set (reg:SI 165 [orig:131 ivtmp.38 ] [131])
        (plus:SI (reg:SI 165 [orig:131 ivtmp.38 ] [131])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn 87 85 88 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 165 [orig:131 ivtmp.38 ] [131])
            (const_int 200 [0xc8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 88 87 89 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 86)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 86)
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 10 (set (reg:SI 0 r0)
        (reg/f:SI 119 [ _30 ])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 119 [ _30 ])
        (nil)))
(call_insn 91 90 92 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f3dd6fd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 92 91 93 10 (set (reg:SI 0 r0)
        (reg/f:SI 120 [ _32 ])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 120 [ _32 ])
        (nil)))
(call_insn 93 92 94 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f3dd6fd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(note 94 93 98 10 NOTE_INSN_DELETED)
(insn 98 94 99 10 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 99 98 0 10 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))

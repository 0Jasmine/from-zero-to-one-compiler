
;; Function main (main, funcdef_no=30, decl_uid=6647, cgraph_uid=31, symbol_order=30) (executed once)

*****starting processing of loop 4 ******
setting blocks to analyze 8, 12
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 2 ( 0.13)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 2 ( 0.13)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 3 (  0.2)


starting region dump


main

Dataflow summary:
def_info->table_size = 98, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={9d,2u} r2={8d,1u} r3={7d} r7={1d,14u} r12={12d} r13={1d,20u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,14u} r103={1d,13u} r104={6d} r105={6d} r106={6d} r113={2d,3u,1e} r115={2d,3u,1e} r116={1d,2u} r117={2d,8u,4e} r118={2d,2u} r119={1d,4u,1e} r120={1d,4u} r121={2d,3u} r122={2d,3u} r123={2d,2u} r126={2d,2u} r128={2d,2u} r129={1d,2u} r131={2d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 718{569d,142u,7e} in 74{68 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 3[6,6] 12[7,8] 14[9,9] 15[10,10] 16[11,11] 17[12,12] 18[13,13] 19[14,14] 20[15,15] 21[16,16] 22[17,17] 23[18,18] 24[19,19] 25[20,20] 26[21,21] 27[22,22] 28[23,23] 29[24,24] 30[25,25] 31[26,26] 48[27,27] 49[28,28] 50[29,29] 51[30,30] 52[31,31] 53[32,32] 54[33,33] 55[34,34] 56[35,35] 57[36,36] 58[37,37] 59[38,38] 60[39,39] 61[40,40] 62[41,41] 63[42,42] 64[43,43] 65[44,44] 66[45,45] 67[46,46] 68[47,47] 69[48,48] 70[49,49] 71[50,50] 72[51,51] 73[52,52] 74[53,53] 75[54,54] 76[55,55] 77[56,56] 78[57,57] 79[58,58] 80[59,59] 81[60,60] 82[61,61] 83[62,62] 84[63,63] 85[64,64] 86[65,65] 87[66,66] 88[67,67] 89[68,68] 90[69,69] 91[70,70] 92[71,71] 93[72,72] 94[73,73] 95[74,74] 96[75,75] 97[76,76] 98[77,77] 99[78,78] 100[79,80] 101[81,81] 104[82,82] 105[83,83] 106[84,84] 115[85,86] 116[87,87] 117[88,88] 118[89,89] 123[90,90] 148[91,91] 149[92,92] 150[93,93] 151[94,94] 152[95,95] 153[96,96] 155[97,97] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 131
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 131
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 115 116 117 118 123 148 149 150 151 152 153 155
;; live  in  	 117 118 123
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 100 [cc] 115 116 117 118 123 148 149 150 151 152 153 155
;; live  kill	 12 [ip] 14 [lr]
;; rd  in  	(3) 117[88],118[89],123[90]
;; rd  gen 	(14) 0[1],100[80],115[86],116[87],117[88],118[89],123[90],148[91],149[92],150[93],151[94],152[95],153[96],155[97]
;; rd  kill	(18) 0[0,1],14[9],100[79,80],115[85,86],116[87],117[88],118[89],123[90],148[91],149[92],150[93],151[94],152[95],153[96],155[97]
;;  UD chains for artificial uses at top

(code_label 75 8 53 8 4 (nil) [0 uses])
(note 53 75 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 55
(insn 55 53 56 8 (set (reg:SI 149)
        (const_int 1717986919 [0x66666667])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 1 uid 56
;;      reg 117 { d88(bb 8 insn 74) }
;;      reg 149 { d92(bb 8 insn 55) }
;;   eq_note reg 117 { d88(bb 8 insn 74) }
(insn 56 55 57 8 (parallel [
            (set (reg:SI 148)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                            (sign_extend:DI (reg:SI 149)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "./understand-elf/matmul-v2.cpp":17:30 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (expr_list:REG_DEAD (reg:SI 149)
            (nil))))
;;   UD chains for insn luid 2 uid 57
;;      reg 148 { d91(bb 8 insn 56) }
(insn 57 56 58 8 (set (reg:SI 150)
        (ashiftrt:SI (reg:SI 148)
            (const_int 3 [0x3]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
;;   UD chains for insn luid 3 uid 58
;;      reg 117 { d88(bb 8 insn 74) }
(insn 58 57 59 8 (set (reg:SI 151)
        (ashiftrt:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
;;   UD chains for insn luid 4 uid 59
;;      reg 150 { d93(bb 8 insn 57) }
;;      reg 151 { d94(bb 8 insn 58) }
;;   eq_note reg 117 { d88(bb 8 insn 74) }
(insn 59 58 60 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 150)
            (reg:SI 151))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 150)
            (expr_list:REG_EQUAL (div:SI (reg:SI 117 [ ivtmp.18 ])
                    (const_int 20 [0x14]))
                (nil)))))
;;   UD chains for insn luid 5 uid 60
(insn 60 59 61 8 (set (reg:SI 153)
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 6 uid 61
;;      reg 115 { d85(bb 8 insn 59) }
;;      reg 153 { d96(bb 8 insn 60) }
;;   eq_note reg 115 { d85(bb 8 insn 59) }
(insn 61 60 62 8 (set (reg:SI 152)
        (mult:SI (reg:SI 153)
            (reg:SI 115 [ _9 ]))) "./understand-elf/matmul-v2.cpp":17:30 56 {*mul}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 115 [ _9 ])
            (const_int 20 [0x14]))
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
                (nil)))))
;;   UD chains for insn luid 7 uid 62
;;      reg 117 { d88(bb 8 insn 74) }
;;      reg 152 { d95(bb 8 insn 61) }
(insn 62 61 63 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 152))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
;;   UD chains for insn luid 8 uid 63
;;      reg 118 { d89(bb 8 insn 63) }
(insn 63 62 64 8 (set (reg:SI 118 [ ivtmp.20 ])
        (plus:SI (reg:SI 118 [ ivtmp.20 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":17:23 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 9 uid 64
;;      reg 115 { d86(bb 8 insn 62) }
;;      reg 118 { d89(bb 8 insn 63) }
(insn 64 63 65 8 (set (mem:SI (reg:SI 118 [ ivtmp.20 ]) [0 MEM[(int *)_56]+0 S4 A32])
        (reg:SI 115 [ _9 ])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 10 uid 65
;;      reg 113 { }
;;      reg 115 { d86(bb 8 insn 62) }
(insn 65 64 66 8 (set (reg:SI 116 [ _15 ])
        (mult:SI (reg:SI 115 [ _9 ])
            (reg:SI 113 [ _4 ]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
        (nil)))
;;   UD chains for insn luid 11 uid 66
;;      reg 123 { d90(bb 8 insn 66) }
(insn 66 65 67 8 (set (reg:SI 123 [ ivtmp.23 ])
        (plus:SI (reg:SI 123 [ ivtmp.23 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":18:27 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 12 uid 67
;;      reg 116 { d87(bb 8 insn 65) }
;;      reg 123 { d90(bb 8 insn 66) }
(insn 67 66 68 8 (set (mem:SI (reg:SI 123 [ ivtmp.23 ]) [0 MEM[(int *)_53]+0 S4 A32])
        (reg:SI 116 [ _15 ])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 13 uid 68
(insn 68 67 70 8 (set (reg/f:SI 155)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (nil)))
;;   UD chains for insn luid 14 uid 70
;;      reg 116 { d87(bb 8 insn 65) }
(insn 70 68 71 8 (set (reg:SI 2 r2)
        (reg:SI 116 [ _15 ])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116 [ _15 ])
        (nil)))
;;   UD chains for insn luid 15 uid 71
;;      reg 155 { d97(bb 8 insn 68) }
(insn 71 70 72 8 (set (reg:SI 1 r1)
        (reg/f:SI 155)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (expr_list:REG_DEAD (reg/f:SI 154)
            (nil))))
;;   UD chains for insn luid 16 uid 72
(insn 72 71 73 8 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 17 uid 73
;;      reg 13 { }
;;      reg 0 { d0(bb 8 insn 72) }
;;      reg 1 { d2(bb 8 insn 71) }
;;      reg 2 { d4(bb 8 insn 70) }
(call_insn 73 72 74 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3dd6d8f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
;;   UD chains for insn luid 18 uid 74
;;      reg 117 { d88(bb 8 insn 74) }
(insn 74 73 76 8 (set (reg:SI 117 [ ivtmp.18 ])
        (plus:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:22 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 19 uid 76
;;      reg 117 { d88(bb 8 insn 74) }
;;      reg 131 { }
(insn 76 74 77 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 131 [ ivtmp.38 ]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
;;   UD chains for insn luid 20 uid 77
;;      reg 100 { d80(bb 8 insn 76) }
(jump_insn 77 76 104 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 104)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 104)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 131
;; live  out 	 117 118 123
;; rd  out 	(3) 117[88],118[89],123[90]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }


;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 131
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
;; live  in  	 117 118 123
;; live  gen 	
;; live  kill	
;; rd  in  	(14) 0[1],100[80],115[86],116[87],117[88],118[89],123[90],148[91],149[92],150[93],151[94],152[95],153[96],155[97]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 104 77 103 12 7 (nil) [1 uses])
(note 103 104 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 131
;; live  out 	 117 118 123
;; rd  out 	(3) 117[88],118[89],123[90]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }



*****ending processing of loop 4 ******
Set in insn 55 is invariant (0), cost 8, depends on 
Set in insn 60 is invariant (1), cost 4, depends on 
Set in insn 68 is invariant (2), cost 8, depends on 
Set in insn 71 is invariant (3), cost 0, depends on 2
Set in insn 72 is invariant (4), cost 4, depends on 
Decided to move invariant 0 -- gain 8
Decided to move invariant 2 -- gain 8
Decided to move invariant 1 -- gain 4
Invariant 0 moved without introducing a new temporary register
changing bb of uid 55
  from 8 to 7
Invariant 1 moved without introducing a new temporary register
changing bb of uid 60
  from 8 to 7
Invariant 2 moved without introducing a new temporary register
changing bb of uid 68
  from 8 to 7
starting the processing of deferred insns
ending the processing of deferred insns
*****starting processing of loop 3 ******
setting blocks to analyze 7, 8, 9, 11, 12
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 7 ( 0.47)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 10 ( 0.67)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 11 ( 0.73)


starting region dump


main

Dataflow summary:
def_info->table_size = 197, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={9d,2u} r2={8d,1u} r3={7d} r7={1d,14u} r12={12d} r13={1d,20u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,14u} r103={1d,13u} r104={6d} r105={6d} r106={6d} r113={2d,3u,1e} r115={2d,3u,1e} r116={1d,2u} r117={2d,8u,4e} r118={2d,2u} r119={1d,4u,1e} r120={1d,4u} r121={2d,3u} r122={2d,3u} r123={2d,2u} r126={2d,2u} r128={2d,2u} r129={1d,2u} r131={2d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 718{569d,142u,7e} in 74{68 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168
;;  reg->defs[] map:	0[0,3] 1[4,7] 2[8,10] 3[11,12] 12[13,16] 14[17,18] 15[19,20] 16[21,22] 17[23,24] 18[25,26] 19[27,28] 20[29,30] 21[31,32] 22[33,34] 23[35,36] 24[37,38] 25[39,40] 26[41,42] 27[43,44] 28[45,46] 29[47,48] 30[49,50] 31[51,52] 48[53,54] 49[55,56] 50[57,58] 51[59,60] 52[61,62] 53[63,64] 54[65,66] 55[67,68] 56[69,70] 57[71,72] 58[73,74] 59[75,76] 60[77,78] 61[79,80] 62[81,82] 63[83,84] 64[85,86] 65[87,88] 66[89,90] 67[91,92] 68[93,94] 69[95,96] 70[97,98] 71[99,100] 72[101,102] 73[103,104] 74[105,106] 75[107,108] 76[109,110] 77[111,112] 78[113,114] 79[115,116] 80[117,118] 81[119,120] 82[121,122] 83[123,124] 84[125,126] 85[127,128] 86[129,130] 87[131,132] 88[133,134] 89[135,136] 90[137,138] 91[139,140] 92[141,142] 93[143,144] 94[145,146] 95[147,148] 96[149,150] 97[151,152] 98[153,154] 99[155,156] 100[157,160] 101[161,162] 104[163,164] 105[165,166] 106[167,168] 113[169,170] 115[171,172] 116[173,173] 117[174,175] 118[176,177] 123[178,179] 126[180,180] 128[181,181] 131[182,182] 142[183,183] 143[184,184] 144[185,185] 145[186,186] 146[187,187] 147[188,188] 148[189,189] 149[190,190] 150[191,191] 151[192,192] 152[193,193] 153[194,194] 155[195,195] 157[196,196] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 128 129 131
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 128 129 131
;; lr  def 	 113 117 118 123 126 142 143 144 145 146 147 149 153 155
;; live  in  	 126 128 131
;; live  gen 	 113 117 118 123 126 142 143 144 145 146 147 149 153 155
;; live  kill	
;; rd  in  	(3) 126[180],128[181],131[182]
;; rd  gen 	(14) 113[170],117[174],118[176],123[178],126[180],142[183],143[184],144[185],145[186],146[187],147[188],149[190],153[194],155[195]
;; rd  kill	(18) 113[169,170],117[174,175],118[176,177],123[178,179],126[180],142[183],143[184],144[185],145[186],146[187],147[188],149[190],153[194],155[195]
;;  UD chains for artificial uses at top

(code_label 86 6 40 7 5 (nil) [0 uses])
(note 40 86 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 41
;;      reg 131 { d182(bb 9 insn 85) }
(insn 41 40 43 7 (set (reg:SI 117 [ ivtmp.18 ])
        (plus:SI (reg:SI 131 [ ivtmp.38 ])
            (const_int -100 [0xffffffffffffff9c]))) 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 1 uid 43
(insn 43 41 44 7 (set (reg:SI 143)
        (const_int 1321528399 [0x4ec4ec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 2 uid 44
;;      reg 117 { d174(bb 7 insn 41) }
;;      reg 143 { d184(bb 7 insn 43) }
;;   eq_note reg 117 { d174(bb 7 insn 41) }
(insn 44 43 45 7 (parallel [
            (set (reg:SI 142)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                            (sign_extend:DI (reg:SI 143)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "./understand-elf/matmul-v2.cpp":15:21 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                    (const_int 1321528399 [0x4ec4ec4f]))
                (const_int 32 [0x20])))
        (expr_list:REG_DEAD (reg:SI 143)
            (nil))))
;;   UD chains for insn luid 3 uid 45
;;      reg 142 { d183(bb 7 insn 44) }
(insn 45 44 46 7 (set (reg:SI 144)
        (ashiftrt:SI (reg:SI 142)
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
;;   UD chains for insn luid 4 uid 46
;;      reg 117 { d174(bb 7 insn 41) }
(insn 46 45 47 7 (set (reg:SI 145)
        (ashiftrt:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
;;   UD chains for insn luid 5 uid 47
;;      reg 144 { d185(bb 7 insn 45) }
;;      reg 145 { d186(bb 7 insn 46) }
;;   eq_note reg 117 { d174(bb 7 insn 41) }
(insn 47 46 48 7 (set (reg:SI 113 [ _4 ])
        (minus:SI (reg:SI 144)
            (reg:SI 145))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 144)
            (expr_list:REG_EQUAL (div:SI (reg:SI 117 [ ivtmp.18 ])
                    (const_int 13 [0xd]))
                (nil)))))
;;   UD chains for insn luid 6 uid 48
(insn 48 47 49 7 (set (reg:SI 147)
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 7 uid 49
;;      reg 113 { d169(bb 7 insn 47) }
;;      reg 147 { d188(bb 7 insn 48) }
;;   eq_note reg 113 { d169(bb 7 insn 47) }
(insn 49 48 50 7 (set (reg:SI 146)
        (mult:SI (reg:SI 147)
            (reg:SI 113 [ _4 ]))) "./understand-elf/matmul-v2.cpp":15:21 56 {*mul}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 113 [ _4 ])
            (const_int 13 [0xd]))
        (expr_list:REG_DEAD (reg:SI 147)
            (expr_list:REG_DEAD (reg:SI 113 [ _4 ])
                (nil)))))
;;   UD chains for insn luid 8 uid 50
;;      reg 117 { d174(bb 7 insn 41) }
;;      reg 146 { d187(bb 7 insn 49) }
(insn 50 49 51 7 (set (reg:SI 113 [ _4 ])
        (minus:SI (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 146))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (nil)))
;;   UD chains for insn luid 9 uid 51
;;      reg 126 { d180(bb 7 insn 51) }
(insn 51 50 52 7 (set (reg:SI 126 [ ivtmp.33 ])
        (plus:SI (reg:SI 126 [ ivtmp.33 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":15:17 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 10 uid 52
;;      reg 113 { d170(bb 7 insn 50) }
;;      reg 126 { d180(bb 7 insn 51) }
(insn 52 51 7 7 (set (mem:SI (reg:SI 126 [ ivtmp.33 ]) [0 MEM[(int *)_84]+0 S4 A32])
        (reg:SI 113 [ _4 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 11 uid 7
;;      reg 128 { d181(bb 9 insn 84) }
(insn 7 52 8 7 (set (reg:SI 123 [ ivtmp.23 ])
        (reg:SI 128 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 12 uid 8
;;      reg 129 { }
(insn 8 7 55 7 (set (reg:SI 118 [ ivtmp.20 ])
        (reg/f:SI 129 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 13 uid 55
(insn 55 8 60 7 (set (reg:SI 149)
        (const_int 1717986919 [0x66666667])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 14 uid 60
(insn 60 55 68 7 (set (reg:SI 153)
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 15 uid 68
(insn 68 60 75 7 (set (reg/f:SI 155)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (nil)))
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 126 128 129 131 149 153 155
;; live  out 	 113 117 118 123 126 128 131 149 153 155
;; rd  out 	(10) 113[170],117[174],118[176],123[178],126[180],128[181],131[182],149[190],153[194],155[195]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }


;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 126 128 129 131 149 153 155
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 131 149 153 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 115 116 117 118 123 148 150 151 152
;; live  in  	 113 117 118 123 126 128 131 149 153 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 100 [cc] 115 116 117 118 123 148 150 151 152
;; live  kill	 12 [ip] 14 [lr]
;; rd  in  	(19) 113[170],117[174,175],118[176,177],123[178,179],126[180],128[181],131[182],142[183],143[184],144[185],145[186],146[187],147[188],149[190],153[194],155[195]
;; rd  gen 	(11) 0[1],100[158],115[172],116[173],117[175],118[177],123[179],148[189],150[191],151[192],152[193]
;; rd  kill	(23) 0[0,1,2,3],14[17,18],100[157,158,159,160],115[171,172],116[173],117[174,175],118[176,177],123[178,179],148[189],150[191],151[192],152[193]
;;  UD chains for artificial uses at top

(code_label 75 68 53 8 4 (nil) [0 uses])
(note 53 75 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 56
;;      reg 117 { d175(bb 8 insn 74) d174(bb 7 insn 41) }
;;      reg 149 { d190(bb 7 insn 55) }
;;   eq_note reg 117 { d175(bb 8 insn 74) d174(bb 7 insn 41) }
(insn 56 53 57 8 (parallel [
            (set (reg:SI 148)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                            (sign_extend:DI (reg:SI 149)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "./understand-elf/matmul-v2.cpp":17:30 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (expr_list:REG_DEAD (reg:SI 149)
            (nil))))
;;   UD chains for insn luid 1 uid 57
;;      reg 148 { d189(bb 8 insn 56) }
(insn 57 56 58 8 (set (reg:SI 150)
        (ashiftrt:SI (reg:SI 148)
            (const_int 3 [0x3]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
;;   UD chains for insn luid 2 uid 58
;;      reg 117 { d175(bb 8 insn 74) d174(bb 7 insn 41) }
(insn 58 57 59 8 (set (reg:SI 151)
        (ashiftrt:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
;;   UD chains for insn luid 3 uid 59
;;      reg 150 { d191(bb 8 insn 57) }
;;      reg 151 { d192(bb 8 insn 58) }
;;   eq_note reg 117 { d175(bb 8 insn 74) d174(bb 7 insn 41) }
(insn 59 58 61 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 150)
            (reg:SI 151))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 150)
            (expr_list:REG_EQUAL (div:SI (reg:SI 117 [ ivtmp.18 ])
                    (const_int 20 [0x14]))
                (nil)))))
;;   UD chains for insn luid 4 uid 61
;;      reg 115 { d171(bb 8 insn 59) }
;;      reg 153 { d194(bb 7 insn 60) }
;;   eq_note reg 115 { d171(bb 8 insn 59) }
(insn 61 59 62 8 (set (reg:SI 152)
        (mult:SI (reg:SI 153)
            (reg:SI 115 [ _9 ]))) "./understand-elf/matmul-v2.cpp":17:30 56 {*mul}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 115 [ _9 ])
            (const_int 20 [0x14]))
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
                (nil)))))
;;   UD chains for insn luid 5 uid 62
;;      reg 117 { d175(bb 8 insn 74) d174(bb 7 insn 41) }
;;      reg 152 { d193(bb 8 insn 61) }
(insn 62 61 63 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 152))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
;;   UD chains for insn luid 6 uid 63
;;      reg 118 { d177(bb 8 insn 63) d176(bb 7 insn 8) }
(insn 63 62 64 8 (set (reg:SI 118 [ ivtmp.20 ])
        (plus:SI (reg:SI 118 [ ivtmp.20 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":17:23 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 7 uid 64
;;      reg 115 { d172(bb 8 insn 62) }
;;      reg 118 { d177(bb 8 insn 63) }
(insn 64 63 65 8 (set (mem:SI (reg:SI 118 [ ivtmp.20 ]) [0 MEM[(int *)_56]+0 S4 A32])
        (reg:SI 115 [ _9 ])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 8 uid 65
;;      reg 113 { d170(bb 7 insn 50) }
;;      reg 115 { d172(bb 8 insn 62) }
(insn 65 64 66 8 (set (reg:SI 116 [ _15 ])
        (mult:SI (reg:SI 115 [ _9 ])
            (reg:SI 113 [ _4 ]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
        (nil)))
;;   UD chains for insn luid 9 uid 66
;;      reg 123 { d179(bb 8 insn 66) d178(bb 7 insn 7) }
(insn 66 65 67 8 (set (reg:SI 123 [ ivtmp.23 ])
        (plus:SI (reg:SI 123 [ ivtmp.23 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":18:27 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 10 uid 67
;;      reg 116 { d173(bb 8 insn 65) }
;;      reg 123 { d179(bb 8 insn 66) }
(insn 67 66 70 8 (set (mem:SI (reg:SI 123 [ ivtmp.23 ]) [0 MEM[(int *)_53]+0 S4 A32])
        (reg:SI 116 [ _15 ])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 11 uid 70
;;      reg 116 { d173(bb 8 insn 65) }
(insn 70 67 71 8 (set (reg:SI 2 r2)
        (reg:SI 116 [ _15 ])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116 [ _15 ])
        (nil)))
;;   UD chains for insn luid 12 uid 71
;;      reg 155 { d195(bb 7 insn 68) }
(insn 71 70 72 8 (set (reg:SI 1 r1)
        (reg/f:SI 155)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (expr_list:REG_DEAD (reg/f:SI 154)
            (nil))))
;;   UD chains for insn luid 13 uid 72
(insn 72 71 73 8 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 14 uid 73
;;      reg 13 { }
;;      reg 0 { d0(bb 8 insn 72) }
;;      reg 1 { d4(bb 8 insn 71) }
;;      reg 2 { d8(bb 8 insn 70) }
(call_insn 73 72 74 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3dd6d8f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
;;   UD chains for insn luid 15 uid 74
;;      reg 117 { d175(bb 8 insn 74) d174(bb 7 insn 41) }
(insn 74 73 76 8 (set (reg:SI 117 [ ivtmp.18 ])
        (plus:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:22 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 16 uid 76
;;      reg 117 { d175(bb 8 insn 74) }
;;      reg 131 { d182(bb 9 insn 85) }
(insn 76 74 77 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 131 [ ivtmp.38 ]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
;;   UD chains for insn luid 17 uid 77
;;      reg 100 { d158(bb 8 insn 76) }
(jump_insn 77 76 104 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 104)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 104)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 126 128 129 131 149 153 155
;; live  out 	 113 117 118 123 126 128 131 149 153 155
;; rd  out 	(10) 113[170],117[175],118[177],123[179],126[180],128[181],131[182],149[190],153[194],155[195]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }


;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 128 129 131
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 128 131
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 128 131 157
;; live  in  	 126 128 131
;; live  gen 	 0 [r0] 1 [r1] 100 [cc] 128 131 157
;; live  kill	 12 [ip] 14 [lr]
;; rd  in  	(10) 113[170],117[175],118[177],123[179],126[180],128[181],131[182],149[190],153[194],155[195]
;; rd  gen 	(5) 0[3],100[160],128[181],131[182],157[196]
;; rd  kill	(13) 0[0,1,2,3],14[17,18],100[157,158,159,160],128[181],131[182],157[196]
;;  UD chains for artificial uses at top

(note 78 103 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 79
(insn 79 78 81 9 (set (reg/f:SI 157)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 1 [0x1])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
        (nil)))
;;   UD chains for insn luid 1 uid 81
;;      reg 157 { d196(bb 9 insn 79) }
(insn 81 79 82 9 (set (reg:SI 1 r1)
        (reg/f:SI 157)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (nil))))
;;   UD chains for insn luid 2 uid 82
(insn 82 81 83 9 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 3 uid 83
;;      reg 13 { }
;;      reg 0 { d2(bb 9 insn 82) }
;;      reg 1 { d6(bb 9 insn 81) }
(call_insn 83 82 84 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3dd6d8f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;   UD chains for insn luid 4 uid 84
;;      reg 128 { d181(bb 9 insn 84) }
(insn 84 83 85 9 (set (reg:SI 128 [ ivtmp.35 ])
        (plus:SI (reg:SI 128 [ ivtmp.35 ])
            (const_int 400 [0x190]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 5 uid 85
;;      reg 131 { d182(bb 9 insn 85) }
(insn 85 84 87 9 (set (reg:SI 131 [ ivtmp.38 ])
        (plus:SI (reg:SI 131 [ ivtmp.38 ])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 6 uid 87
;;      reg 131 { d182(bb 9 insn 85) }
(insn 87 85 88 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 131 [ ivtmp.38 ])
            (const_int 200 [0xc8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
;;   UD chains for insn luid 7 uid 88
;;      reg 100 { d160(bb 9 insn 87) }
(jump_insn 88 87 102 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 102)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 102)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 128 129 131
;; live  out 	 126 128 131
;; rd  out 	(3) 126[180],128[181],131[182]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }


;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 128 129 131
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
;; live  in  	 126 128 131
;; live  gen 	
;; live  kill	
;; rd  in  	(3) 126[180],128[181],131[182]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 102 88 101 11 6 (nil) [1 uses])
(note 101 102 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 128 129 131
;; live  out 	 126 128 131
;; rd  out 	(3) 126[180],128[181],131[182]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }


;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 126 128 129 131 149 153 155
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
;; live  in  	 113 117 118 123 126 128 131 149 153 155
;; live  gen 	
;; live  kill	
;; rd  in  	(18) 0[1],100[158],113[170],115[172],116[173],117[175],118[177],123[179],126[180],128[181],131[182],148[189],149[190],150[191],151[192],152[193],153[194],155[195]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 104 77 103 12 7 (nil) [1 uses])
(note 103 104 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113 117 118 123 126 128 129 131 149 153 155
;; live  out 	 113 117 118 123 126 128 131 149 153 155
;; rd  out 	(10) 113[170],117[175],118[177],123[179],126[180],128[181],131[182],149[190],153[194],155[195]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }



*****ending processing of loop 3 ******
Set in insn 43 is invariant (0), cost 16, depends on 
Set in insn 48 is invariant (1), cost 4, depends on 
Set in insn 55 is invariant (2), cost 8, depends on 
Set in insn 60 is invariant (3), cost 4, depends on 
Set in insn 68 is invariant (4), cost 8, depends on 
Set in insn 71 is invariant (5), cost 0, depends on 4
Set in insn 72 is invariant (6), cost 4, depends on 
Set in insn 79 is invariant (7), cost 8, depends on 
Set in insn 81 is invariant (8), cost 0, depends on 7
Set in insn 82 is invariant (9), cost 4, depends on 
Invariant 9 is equivalent to invariant 6.
Decided to move invariant 0 -- gain 16
Decided to move invariant 2 -- gain 8
Decided to move invariant 4 -- gain 8
Invariant 0 moved without introducing a new temporary register
changing bb of uid 43
  from 7 to 6
Invariant 2 moved without introducing a new temporary register
changing bb of uid 55
  from 7 to 6
Invariant 4 moved without introducing a new temporary register
changing bb of uid 68
  from 7 to 6
starting the processing of deferred insns
ending the processing of deferred insns
*****starting processing of loop 2 ******
setting blocks to analyze 5, 13
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 2 ( 0.13)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 2 ( 0.13)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 3 (  0.2)


starting region dump


main

Dataflow summary:
def_info->table_size = 3, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={9d,2u} r2={8d,1u} r3={7d} r7={1d,14u} r12={12d} r13={1d,20u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,14u} r103={1d,13u} r104={6d} r105={6d} r106={6d} r113={2d,3u,1e} r115={2d,3u,1e} r116={1d,2u} r117={2d,8u,4e} r118={2d,2u} r119={1d,4u,1e} r120={1d,4u} r121={2d,3u} r122={2d,3u} r123={2d,2u} r126={2d,2u} r128={2d,2u} r129={1d,2u} r131={2d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 718{569d,142u,7e} in 74{68 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0
;;  reg->defs[] map:	100[0,0] 121[1,1] 141[2,2] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 134
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 134
;; lr  def 	 100 [cc] 121 141
;; live  in  	 121
;; live  gen 	 100 [cc] 121 141
;; live  kill	
;; rd  in  	(1) 121[1]
;; rd  gen 	(3) 100[0],121[1],141[2]
;; rd  kill	(3) 100[0],121[1],141[2]
;;  UD chains for artificial uses at top

(code_label 34 4 30 5 3 (nil) [0 uses])
(note 30 34 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 31
(insn 31 30 32 5 (set (reg:SI 141)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 1 uid 32
;;      reg 121 { d1(bb 5 insn 33) }
;;      reg 141 { d2(bb 5 insn 31) }
(insn 32 31 33 5 (set (mem:SI (reg/f:SI 121 [ _41 ]) [0 MEM[(int *)_60]+0 S4 A32])
        (reg:SI 141)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
;;   UD chains for insn luid 2 uid 33
;;      reg 121 { d1(bb 5 insn 33) }
(insn 33 32 35 5 (set (reg/f:SI 121 [ _41 ])
        (plus:SI (reg/f:SI 121 [ _41 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":13:28 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 3 uid 35
;;      reg 121 { d1(bb 5 insn 33) }
;;      reg 134 { }
(insn 35 33 36 5 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 121 [ _41 ])
            (reg/f:SI 134 [ _89 ]))) "./understand-elf/matmul-v2.cpp":13:28 268 {*arm_cmpsi_insn}
     (nil))
;;   UD chains for insn luid 4 uid 36
;;      reg 100 { d0(bb 5 insn 35) }
(jump_insn 36 35 106 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 106)
            (pc))) "./understand-elf/matmul-v2.cpp":13:28 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 106)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 134
;; live  out 	 121
;; rd  out 	(1) 121[1]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }


;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 134
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
;; live  in  	 121
;; live  gen 	
;; live  kill	
;; rd  in  	(3) 100[0],121[1],141[2]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 106 36 105 13 8 (nil) [1 uses])
(note 105 106 37 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 134
;; live  out 	 121
;; rd  out 	(1) 121[1]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }



*****ending processing of loop 2 ******
Set in insn 31 is invariant (0), cost 4, depends on 
Decided to move invariant 0 -- gain 4
Invariant 0 moved without introducing a new temporary register
changing bb of uid 31
  from 5 to 4
starting the processing of deferred insns
ending the processing of deferred insns
*****starting processing of loop 1 ******
setting blocks to analyze 3, 14
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 2 ( 0.13)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 2 ( 0.13)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 3 (  0.2)


starting region dump


main

Dataflow summary:
def_info->table_size = 3, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={9d,2u} r2={8d,1u} r3={7d} r7={1d,14u} r12={12d} r13={1d,20u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,14u} r103={1d,13u} r104={6d} r105={6d} r106={6d} r113={2d,3u,1e} r115={2d,3u,1e} r116={1d,2u} r117={2d,8u,4e} r118={2d,2u} r119={1d,4u,1e} r120={1d,4u} r121={2d,3u} r122={2d,3u} r123={2d,2u} r126={2d,2u} r128={2d,2u} r129={1d,2u} r131={2d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 718{569d,142u,7e} in 74{68 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0
;;  reg->defs[] map:	100[0,0] 122[1,1] 139[2,2] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122 135
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122 135
;; lr  def 	 100 [cc] 122 139
;; live  in  	 122
;; live  gen 	 100 [cc] 122 139
;; live  kill	
;; rd  in  	(1) 122[1]
;; rd  gen 	(3) 100[0],122[1],139[2]
;; rd  kill	(3) 100[0],122[1],139[2]
;;  UD chains for artificial uses at top

(code_label 21 3 17 3 2 (nil) [0 uses])
(note 17 21 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 18
(insn 18 17 19 3 (set (reg:SI 139)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
;;   UD chains for insn luid 1 uid 19
;;      reg 122 { d1(bb 3 insn 20) }
;;      reg 139 { d2(bb 3 insn 18) }
(insn 19 18 20 3 (set (mem:SI (reg/f:SI 122 [ _44 ]) [0 MEM[(int *)_58]+0 S4 A32])
        (reg:SI 139)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
;;   UD chains for insn luid 2 uid 20
;;      reg 122 { d1(bb 3 insn 20) }
(insn 20 19 22 3 (set (reg/f:SI 122 [ _44 ])
        (plus:SI (reg/f:SI 122 [ _44 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":12:33 7 {*arm_addsi3}
     (nil))
;;   UD chains for insn luid 3 uid 22
;;      reg 122 { d1(bb 3 insn 20) }
;;      reg 135 { }
(insn 22 20 23 3 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 122 [ _44 ])
            (reg/f:SI 135 [ _90 ]))) "./understand-elf/matmul-v2.cpp":12:33 268 {*arm_cmpsi_insn}
     (nil))
;;   UD chains for insn luid 4 uid 23
;;      reg 100 { d0(bb 3 insn 22) }
(jump_insn 23 22 108 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 108)
            (pc))) "./understand-elf/matmul-v2.cpp":12:33 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 108)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122 135
;; live  out 	 122
;; rd  out 	(1) 122[1]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }


;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122 135
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
;; live  in  	 122
;; live  gen 	
;; live  kill	
;; rd  in  	(3) 100[0],122[1],139[2]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 108 23 107 14 9 (nil) [1 uses])
(note 107 108 24 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122 135
;; live  out 	 122
;; rd  out 	(1) 122[1]
;;  UD chains for artificial uses at bottom
;;   reg 7 { }
;;   reg 13 { }
;;   reg 102 { }
;;   reg 103 { }



*****ending processing of loop 1 ******
Set in insn 18 is invariant (0), cost 4, depends on 
Decided to move invariant 0 -- gain 4
Invariant 0 moved without introducing a new temporary register
changing bb of uid 18
  from 3 to 2
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={9d,2u} r2={8d,1u} r3={7d} r7={1d,14u} r12={12d} r13={1d,20u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,14u} r103={1d,13u} r104={6d} r105={6d} r106={6d} r113={2d,3u,1e} r115={2d,3u,1e} r116={1d,2u} r117={2d,8u,4e} r118={2d,2u} r119={1d,4u,1e} r120={1d,4u} r121={2d,3u} r122={2d,3u} r123={2d,2u} r126={2d,2u} r128={2d,2u} r129={1d,2u} r131={2d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 718{569d,142u,7e} in 74{68 regular + 6 call} insns.
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 2 12 2 (set (reg:SI 0 r0)
        (const_int 40000 [0x9c40])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 12 11 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f3dd6fd3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:33 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 13 12 15 2 (set (reg/f:SI 119 [ _30 ])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NOALIAS (reg/f:SI 137)
            (nil))))
(insn 15 13 16 2 (set (reg:SI 138)
        (const_int 40000 [0x9c40])) 740 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 3 2 (set (reg/f:SI 135 [ _90 ])
        (plus:SI (reg/f:SI 119 [ _30 ])
            (reg:SI 138))) 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 119 [ _30 ])
            (const_int 40000 [0x9c40]))
        (expr_list:REG_DEAD (reg:SI 138)
            (nil))))
(insn 3 16 18 2 (set (reg/f:SI 122 [ _44 ])
        (reg/f:SI 119 [ _30 ])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 18 3 21 2 (set (reg:SI 139)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(code_label 21 18 17 3 2 (nil) [0 uses])
(note 17 21 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 20 3 (set (mem:SI (reg/f:SI 122 [ _44 ]) [0 MEM[(int *)_58]+0 S4 A32])
        (reg:SI 139)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 20 19 22 3 (set (reg/f:SI 122 [ _44 ])
        (plus:SI (reg/f:SI 122 [ _44 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":12:33 7 {*arm_addsi3}
     (nil))
(insn 22 20 23 3 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 122 [ _44 ])
            (reg/f:SI 135 [ _90 ]))) "./understand-elf/matmul-v2.cpp":12:33 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 108 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 108)
            (pc))) "./understand-elf/matmul-v2.cpp":12:33 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 108)
      ; pc falls through to BB 4
(code_label 108 23 107 14 9 (nil) [1 uses])
(note 107 108 24 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
      ; pc falls through to BB 3
(note 24 107 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 0 r0)
        (const_int 400 [0x190])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 26 25 27 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f3dd6fd3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:28 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 27 26 29 4 (set (reg/f:SI 120 [ _32 ])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NOALIAS (reg/f:SI 140)
            (nil))))
(insn 29 27 4 4 (set (reg/f:SI 134 [ _89 ])
        (plus:SI (reg/f:SI 120 [ _32 ])
            (const_int 400 [0x190]))) 7 {*arm_addsi3}
     (nil))
(insn 4 29 31 4 (set (reg/f:SI 121 [ _41 ])
        (reg/f:SI 120 [ _32 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 31 4 34 4 (set (reg:SI 141)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(code_label 34 31 30 5 3 (nil) [0 uses])
(note 30 34 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 5 (set (mem:SI (reg/f:SI 121 [ _41 ]) [0 MEM[(int *)_60]+0 S4 A32])
        (reg:SI 141)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
(insn 33 32 35 5 (set (reg/f:SI 121 [ _41 ])
        (plus:SI (reg/f:SI 121 [ _41 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":13:28 7 {*arm_addsi3}
     (nil))
(insn 35 33 36 5 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 121 [ _41 ])
            (reg/f:SI 134 [ _89 ]))) "./understand-elf/matmul-v2.cpp":13:28 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 36 35 106 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 106)
            (pc))) "./understand-elf/matmul-v2.cpp":13:28 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 106)
      ; pc falls through to BB 6
(code_label 106 36 105 13 8 (nil) [1 uses])
(note 105 106 37 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
      ; pc falls through to BB 5
(note 37 105 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:SI 126 [ ivtmp.33 ])
        (plus:SI (reg/f:SI 120 [ _32 ])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 39 38 5 6 (set (reg/f:SI 129 [ ivtmp.35 ])
        (plus:SI (reg/f:SI 119 [ _30 ])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 5 39 6 6 (set (reg:SI 128 [ ivtmp.35 ])
        (reg/f:SI 129 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 43 6 (set (reg:SI 131 [ ivtmp.38 ])
        (const_int 100 [0x64])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 43 6 55 6 (set (reg:SI 143)
        (const_int 1321528399 [0x4ec4ec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 55 43 68 6 (set (reg:SI 149)
        (const_int 1717986919 [0x66666667])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(insn 68 55 86 6 (set (reg/f:SI 155)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (nil)))
(code_label 86 68 40 7 5 (nil) [0 uses])
(note 40 86 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 44 7 (set (reg:SI 117 [ ivtmp.18 ])
        (plus:SI (reg:SI 131 [ ivtmp.38 ])
            (const_int -100 [0xffffffffffffff9c]))) 7 {*arm_addsi3}
     (nil))
(insn 44 41 45 7 (parallel [
            (set (reg:SI 142)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                            (sign_extend:DI (reg:SI 143)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "./understand-elf/matmul-v2.cpp":15:21 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                    (const_int 1321528399 [0x4ec4ec4f]))
                (const_int 32 [0x20])))
        (expr_list:REG_DEAD (reg:SI 143)
            (nil))))
(insn 45 44 46 7 (set (reg:SI 144)
        (ashiftrt:SI (reg:SI 142)
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
(insn 46 45 47 7 (set (reg:SI 145)
        (ashiftrt:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
(insn 47 46 48 7 (set (reg:SI 113 [ _4 ])
        (minus:SI (reg:SI 144)
            (reg:SI 145))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 144)
            (expr_list:REG_EQUAL (div:SI (reg:SI 117 [ ivtmp.18 ])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 48 47 49 7 (set (reg:SI 147)
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 7 (set (reg:SI 146)
        (mult:SI (reg:SI 147)
            (reg:SI 113 [ _4 ]))) "./understand-elf/matmul-v2.cpp":15:21 56 {*mul}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 113 [ _4 ])
            (const_int 13 [0xd]))
        (expr_list:REG_DEAD (reg:SI 147)
            (expr_list:REG_DEAD (reg:SI 113 [ _4 ])
                (nil)))))
(insn 50 49 51 7 (set (reg:SI 113 [ _4 ])
        (minus:SI (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 146))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (nil)))
(insn 51 50 52 7 (set (reg:SI 126 [ ivtmp.33 ])
        (plus:SI (reg:SI 126 [ ivtmp.33 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":15:17 7 {*arm_addsi3}
     (nil))
(insn 52 51 7 7 (set (mem:SI (reg:SI 126 [ ivtmp.33 ]) [0 MEM[(int *)_84]+0 S4 A32])
        (reg:SI 113 [ _4 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 7 52 8 7 (set (reg:SI 123 [ ivtmp.23 ])
        (reg:SI 128 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 60 7 (set (reg:SI 118 [ ivtmp.20 ])
        (reg/f:SI 129 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 60 8 75 7 (set (reg:SI 153)
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(code_label 75 60 53 8 4 (nil) [0 uses])
(note 53 75 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 53 57 8 (parallel [
            (set (reg:SI 148)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                            (sign_extend:DI (reg:SI 149)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "./understand-elf/matmul-v2.cpp":17:30 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ ivtmp.18 ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (expr_list:REG_DEAD (reg:SI 149)
            (nil))))
(insn 57 56 58 8 (set (reg:SI 150)
        (ashiftrt:SI (reg:SI 148)
            (const_int 3 [0x3]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(insn 58 57 59 8 (set (reg:SI 151)
        (ashiftrt:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
(insn 59 58 61 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 150)
            (reg:SI 151))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 150)
            (expr_list:REG_EQUAL (div:SI (reg:SI 117 [ ivtmp.18 ])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 61 59 62 8 (set (reg:SI 152)
        (mult:SI (reg:SI 153)
            (reg:SI 115 [ _9 ]))) "./understand-elf/matmul-v2.cpp":17:30 56 {*mul}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 115 [ _9 ])
            (const_int 20 [0x14]))
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
                (nil)))))
(insn 62 61 63 8 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 152))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
(insn 63 62 64 8 (set (reg:SI 118 [ ivtmp.20 ])
        (plus:SI (reg:SI 118 [ ivtmp.20 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":17:23 7 {*arm_addsi3}
     (nil))
(insn 64 63 65 8 (set (mem:SI (reg:SI 118 [ ivtmp.20 ]) [0 MEM[(int *)_56]+0 S4 A32])
        (reg:SI 115 [ _9 ])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 8 (set (reg:SI 116 [ _15 ])
        (mult:SI (reg:SI 115 [ _9 ])
            (reg:SI 113 [ _4 ]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
        (nil)))
(insn 66 65 67 8 (set (reg:SI 123 [ ivtmp.23 ])
        (plus:SI (reg:SI 123 [ ivtmp.23 ])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":18:27 7 {*arm_addsi3}
     (nil))
(insn 67 66 70 8 (set (mem:SI (reg:SI 123 [ ivtmp.23 ]) [0 MEM[(int *)_53]+0 S4 A32])
        (reg:SI 116 [ _15 ])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 70 67 71 8 (set (reg:SI 2 r2)
        (reg:SI 116 [ _15 ])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116 [ _15 ])
        (nil)))
(insn 71 70 72 8 (set (reg:SI 1 r1)
        (reg/f:SI 155)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f3dd6ddc900 *.LC0>)
        (expr_list:REG_DEAD (reg/f:SI 154)
            (nil))))
(insn 72 71 73 8 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 73 72 74 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3dd6d8f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 74 73 76 8 (set (reg:SI 117 [ ivtmp.18 ])
        (plus:SI (reg:SI 117 [ ivtmp.18 ])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:22 7 {*arm_addsi3}
     (nil))
(insn 76 74 77 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ ivtmp.18 ])
            (reg:SI 131 [ ivtmp.38 ]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 77 76 104 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 104)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 104)
      ; pc falls through to BB 9
(code_label 104 77 103 12 7 (nil) [1 uses])
(note 103 104 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
      ; pc falls through to BB 8
(note 78 103 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 81 9 (set (reg/f:SI 157)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 1 [0x1])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
        (nil)))
(insn 81 79 82 9 (set (reg:SI 1 r1)
        (reg/f:SI 157)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f3dd6ddc990 *.LC1>)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (nil))))
(insn 82 81 83 9 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 83 82 84 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3dd6d8f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 84 83 85 9 (set (reg:SI 128 [ ivtmp.35 ])
        (plus:SI (reg:SI 128 [ ivtmp.35 ])
            (const_int 400 [0x190]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn 85 84 87 9 (set (reg:SI 131 [ ivtmp.38 ])
        (plus:SI (reg:SI 131 [ ivtmp.38 ])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn 87 85 88 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 131 [ ivtmp.38 ])
            (const_int 200 [0xc8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 88 87 102 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 102)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1063004412 (nil)))
 -> 102)
      ; pc falls through to BB 10
(code_label 102 88 101 11 6 (nil) [1 uses])
(note 101 102 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
      ; pc falls through to BB 7
(note 89 101 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 10 (set (reg:SI 0 r0)
        (reg/f:SI 119 [ _30 ])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 119 [ _30 ])
        (nil)))
(call_insn 91 90 92 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f3dd6fd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 92 91 93 10 (set (reg:SI 0 r0)
        (reg/f:SI 120 [ _32 ])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 120 [ _32 ])
        (nil)))
(call_insn 93 92 94 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f3dd6fd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 94 93 98 10 (set (reg:SI 136 [ <retval> ])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (nil))
(insn 98 94 99 10 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ <retval> ])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (expr_list:REG_DEAD (reg:SI 136 [ <retval> ])
            (nil))))
(insn 99 98 0 10 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))

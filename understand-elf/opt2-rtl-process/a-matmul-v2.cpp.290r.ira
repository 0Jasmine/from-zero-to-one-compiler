
;; Function main (main, funcdef_no=30, decl_uid=6647, cgraph_uid=31, symbol_order=30) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;;
;; Loop 2
;;  header 4, latch 4
;;  depth 2, outer 1
;;  nodes: 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
Removing SCRATCH to p162 in insn #22 (nop 3)
rescanning insn with uid = 22.
Removing SCRATCH to p163 in insn #39 (nop 3)
rescanning insn with uid = 39.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)
Reg 160: local to bb 2 def dominates all uses has unique first use
Reg 121: def dominates all uses has unique first use
Reg 161 uninteresting
Reg 122: def dominates all uses has unique first use
Reg 131: def dominates all uses has unique first use
Reg 156: def dominates all uses has unique first use
Reg 138: local to bb 3 def dominates all uses has unique first use
Reg 148: def dominates all uses has unique first use
Reg 116 uninteresting
Reg 121 not local to one basic block
Reg 122 not local to one basic block
Reg 131 not local to one basic block
Ignoring reg 138 with equiv init insn
Reg 148 not local to one basic block
Reg 156 not local to one basic block
Found def insn 118 for 160 to be not moveable
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;;
;; Loop 2
;;  header 4, latch 4
;;  depth 2, outer 1
;;  nodes: 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 138: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 41 (nil))

Pass 1 for finding pseudo/allocno costs

    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r160: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r156: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r113,l2) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r122,l0) costs: GENERAL_REGS:2,2 VFP_D0_D7_REGS:60,60 VFP_LO_REGS:60,60 ALL_REGS:45,45 MEM:40,40
  a1(r121,l0) costs: GENERAL_REGS:2,2 VFP_D0_D7_REGS:60,60 VFP_LO_REGS:60,60 ALL_REGS:45,45 MEM:40,40
  a2(r127,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,15465 VFP_LO_REGS:15,15465 ALL_REGS:15,15465 MEM:10,10310
  a3(r146,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:75,14925 VFP_LO_REGS:75,14925 ALL_REGS:75,14925 MEM:50,9950
  a4(r136,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:75,225 VFP_LO_REGS:75,225 ALL_REGS:75,225 MEM:50,150
  a5(r156,l0) costs: GENERAL_REGS:0,1980 VFP_D0_D7_REGS:15,29715 VFP_LO_REGS:15,29715 ALL_REGS:15,14865 MEM:10,19810
  a6(r117,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,465 VFP_LO_REGS:15,465 ALL_REGS:15,465 MEM:10,310
  a7(r131,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,180 VFP_LO_REGS:30,180 ALL_REGS:30,180 MEM:20,120
  a8(r119,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,315 VFP_LO_REGS:15,315 ALL_REGS:15,315 MEM:10,210
  a9(r161,l0) costs: GENERAL_REGS:2,2 VFP_D0_D7_REGS:45,45 VFP_LO_REGS:45,45 ALL_REGS:30,30 MEM:30,30
  a10(r160,l0) costs: GENERAL_REGS:2,2 VFP_D0_D7_REGS:45,45 VFP_LO_REGS:45,45 ALL_REGS:30,30 MEM:30,30
  a11(r117,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:450,450 VFP_LO_REGS:450,450 ALL_REGS:450,450 MEM:300,300
  a12(r119,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a13(r121,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a14(r122,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a15(r127,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:600,15450 VFP_LO_REGS:600,15450 ALL_REGS:600,15450 MEM:400,10300
  a16(r131,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a17(r136,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a18(r146,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,14850 VFP_LO_REGS:0,14850 ALL_REGS:0,14850 MEM:0,9900
  a19(r156,l1) costs: GENERAL_REGS:0,1980 VFP_D0_D7_REGS:0,29700 VFP_LO_REGS:0,29700 ALL_REGS:0,14850 MEM:0,19800
  a20(r148,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,15000 VFP_LO_REGS:150,15000 ALL_REGS:150,15000 MEM:100,10000
  a21(r113,l1) costs: LO_REGS:0,0 HI_REGS:20,20 CALLER_SAVE_REGS:20,20 EVEN_REG:20,20 GENERAL_REGS:20,20 VFP_D0_D7_REGS:600,15450 VFP_LO_REGS:600,15450 ALL_REGS:600,15450 MEM:400,10300
  a22(r138,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a23(r129,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:450,74700 VFP_LO_REGS:450,74700 ALL_REGS:450,74700 MEM:300,49800
  a24(r135,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a25(r162,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:100,100
  a26(r123,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,29850 VFP_LO_REGS:150,29850 ALL_REGS:150,29850 MEM:100,19900
  a27(r128,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:150,29850 VFP_LO_REGS:150,29850 ALL_REGS:150,29850 MEM:100,19900
  a28(r113,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a29(r117,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a30(r119,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a31(r121,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a32(r122,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a33(r123,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:29700,29700 MEM:19800,19800
  a34(r127,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a35(r128,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:29700,29700 MEM:19800,19800
  a36(r129,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:74250,74250 VFP_LO_REGS:74250,74250 ALL_REGS:74250,74250 MEM:49500,49500
  a37(r131,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a38(r136,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r146,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a40(r148,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900
  a41(r156,l2) costs: GENERAL_REGS:1980,1980 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:14850,14850 MEM:19800,19800
  a42(r116,l2) costs: LO_REGS:1980,1980 HI_REGS:5940,5940 CALLER_SAVE_REGS:5940,5940 EVEN_REG:5940,5940 GENERAL_REGS:3960,3960 VFP_D0_D7_REGS:59400,59400 VFP_LO_REGS:59400,59400 ALL_REGS:44550,44550 MEM:39600,39600
  a43(r115,l2) costs: LO_REGS:0,0 HI_REGS:1980,1980 CALLER_SAVE_REGS:1980,1980 EVEN_REG:1980,1980 GENERAL_REGS:1980,1980 VFP_D0_D7_REGS:74250,74250 VFP_LO_REGS:74250,74250 ALL_REGS:74250,74250 MEM:49500,49500
  a44(r145,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:29700,29700 VFP_LO_REGS:29700,29700 ALL_REGS:29700,29700 MEM:19800,19800
  a45(r163,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:14850,14850 VFP_LO_REGS:14850,14850 ALL_REGS:14850,14850 MEM:9900,9900

   Insn 88(l0): point = 0
   Insn 87(l0): point = 2
   Insn 82(l0): point = 4
   Insn 81(l0): point = 6
   Insn 80(l0): point = 8
   Insn 79(l0): point = 10
   Insn 4(l0): point = 13
   Insn 125(l0): point = 15
   Insn 124(l0): point = 17
   Insn 122(l0): point = 19
   Insn 121(l0): point = 21
   Insn 57(l0): point = 23
   Insn 3(l0): point = 25
   Insn 17(l0): point = 27
   Insn 18(l0): point = 29
   Insn 15(l0): point = 31
   Insn 119(l0): point = 33
   Insn 14(l0): point = 35
   Insn 11(l0): point = 37
   Insn 13(l0): point = 39
   Insn 118(l0): point = 41
   Insn 10(l0): point = 43
   Insn 9(l0): point = 45
   Insn 41(l1): point = 48
   Insn 36(l1): point = 50
   Insn 26(l1): point = 52
   Insn 23(l1): point = 54
   Insn 22(l1): point = 56
   Insn 6(l1): point = 58
   Insn 5(l1): point = 60
   Insn 24(l1): point = 62
   Insn 20(l1): point = 64
   Insn 77(l1): point = 67
   Insn 76(l1): point = 69
   Insn 73(l1): point = 71
   Insn 72(l1): point = 73
   Insn 74(l1): point = 75
   Insn 71(l1): point = 77
   Insn 70(l1): point = 79
   Insn 66(l2): point = 82
   Insn 65(l2): point = 84
   Insn 62(l2): point = 86
   Insn 61(l2): point = 88
   Insn 60(l2): point = 90
   Insn 59(l2): point = 92
   Insn 56(l2): point = 94
   Insn 54(l2): point = 96
   Insn 53(l2): point = 98
   Insn 63(l2): point = 100
   Insn 43(l2): point = 102
   Insn 40(l2): point = 104
   Insn 39(l2): point = 106
 a0(r122): [7..31]
 a1(r121): [11..37]
 a2(r127): [13..13]
 a3(r146): [13..17]
 a4(r136): [13..21]
 a5(r156): [13..23]
 a6(r117): [13..25]
 a7(r131): [13..29]
 a8(r119): [13..27]
 a9(r161): [32..33]
 a10(r160): [38..41]
 a11(r117): [48..81]
 a12(r119): [48..81]
 a13(r121): [48..81]
 a14(r122): [48..81]
 a15(r127): [48..81]
 a16(r131): [48..81]
 a17(r136): [48..81]
 a18(r146): [48..81]
 a19(r156): [48..81]
 a20(r148): [48..48]
 a21(r113): [48..54]
 a22(r138): [53..62]
 a23(r129): [48..64]
 a24(r135): [55..56]
 a25(r162): [56..56]
 a26(r123): [48..58]
 a27(r128): [48..60]
 a28(r113): [82..108]
 a29(r117): [82..108]
 a30(r119): [82..108]
 a31(r121): [82..108]
 a32(r122): [82..108]
 a33(r123): [82..108]
 a34(r127): [82..108]
 a35(r128): [82..108]
 a36(r129): [82..108]
 a37(r131): [82..108]
 a38(r136): [82..108]
 a39(r146): [82..108]
 a40(r148): [82..108]
 a41(r156): [82..108]
 a42(r116): [93..96]
 a43(r115): [97..104]
 a44(r145): [105..106]
 a45(r163): [106..106]
Compressing live ranges: from 109 to 20 - 18%
Ranges after the compression:
 a0(r122): [0..2]
 a1(r121): [0..4]
 a2(r127): [1..1]
 a3(r146): [1..2]
 a4(r136): [1..2]
 a5(r156): [1..2]
 a6(r117): [1..2]
 a7(r131): [1..2]
 a8(r119): [1..2]
 a9(r161): [3..4]
 a10(r160): [5..6]
 a11(r117): [7..12]
 a12(r119): [7..12]
 a13(r121): [7..12]
 a14(r122): [7..12]
 a15(r127): [7..12]
 a16(r131): [7..12]
 a17(r136): [7..12]
 a18(r146): [7..12]
 a19(r156): [7..12]
 a20(r148): [7..7]
 a21(r113): [7..9]
 a22(r138): [8..12]
 a23(r129): [7..12]
 a24(r135): [10..11]
 a25(r162): [11..11]
 a26(r123): [7..12]
 a27(r128): [7..12]
 a28(r113): [13..19]
 a29(r117): [13..19]
 a30(r119): [13..19]
 a31(r121): [13..19]
 a32(r122): [13..19]
 a33(r123): [13..19]
 a34(r127): [13..19]
 a35(r128): [13..19]
 a36(r129): [13..19]
 a37(r131): [13..19]
 a38(r136): [13..19]
 a39(r146): [13..19]
 a40(r148): [13..19]
 a41(r156): [13..19]
 a42(r116): [13..14]
 a43(r115): [15..16]
 a44(r145): [17..18]
 a45(r163): [18..18]
    Creating cap  a46(r148,l0: a20(r148,l1))
    Creating cap  a47(r113,l0: a21(r113,l1))
    Creating cap  a48(r138,l0: a22(r138,l1))
    Creating cap  a49(r129,l0: a23(r129,l1))
    Creating cap  a50(r135,l0: a24(r135,l1))
    Creating cap  a51(r162,l0: a25(r162,l1))
    Creating cap  a52(r123,l0: a26(r123,l1))
    Creating cap  a53(r128,l0: a27(r128,l1))
    Creating cap  a54(r116,l1: a42(r116,l2))
    Creating cap  a55(r115,l1: a43(r115,l2))
    Creating cap  a56(r145,l1: a44(r145,l2))
    Creating cap  a57(r163,l1: a45(r163,l2))
    Creating cap  a58(r116,l0: a54(r116,l1: a42(r116,l2)))
    Creating cap  a59(r115,l0: a55(r115,l1: a43(r115,l2)))
    Creating cap  a60(r145,l0: a56(r145,l1: a44(r145,l2)))
    Creating cap  a61(r163,l0: a57(r163,l1: a45(r163,l2)))
+++Allocating 496 bytes for conflict table (uncompressed size 496)
;; a0(r122,l0) conflicts: a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0 12 14

;; a1(r121,l0) conflicts: a0(r122,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a9(r161,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0 12 14

;; a2(r127,l0) conflicts: a0(r122,l0) a1(r121,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a3(r146,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a4(r136,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a5(r156,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a6(r117,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a7(r131,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a8(r119,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a9(r161,l0) conflicts: a1(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r160,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a11(r117,l1) conflicts: a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a12(r119,l1) conflicts: a11(r117,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a13(r121,l1) conflicts: a11(r117,l1) a12(r119,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a14(r122,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a15(r127,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a16(r131,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a17(r136,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a18(r146,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a19(r156,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-1 12 14

;; a20(r148,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a21(r113,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a22(r138,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a24(r135,l1) a25(r162,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r129,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a24(r135,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a25(r162,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r162,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r123,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a27(r128,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a27(r128,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a22(r138,l1) a24(r135,l1) a25(r162,l1) a54(r116,l1) a55(r115,l1) a56(r145,l1) a57(r163,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a28(r113,l2) conflicts: a42(r116,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a29(r117,l2) conflicts: a42(r116,l2) a28(r113,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a30(r119,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a31(r121,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a32(r122,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a33(r123,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a34(r127,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a35(r128,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a36(r129,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a37(r131,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a38(r136,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a39(r146,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a40(r148,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a40(r148,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a41(r156,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a41(r156,l2) conflicts: a42(r116,l2) a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a43(r115,l2) a44(r145,l2) a45(r163,l2)
;;     total conflict hard regs: 0 2 12 14
;;     conflict hard regs: 0 2 12 14

;; a42(r116,l2) conflicts: a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r115,l2) conflicts: a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r145,l2) conflicts: a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a45(r163,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r163,l2) conflicts: a28(r113,l2) a29(r117,l2) a30(r119,l2) a31(r121,l2) a32(r122,l2) a33(r123,l2) a34(r127,l2) a35(r128,l2) a36(r129,l2) a37(r131,l2) a38(r136,l2) a39(r146,l2) a40(r148,l2) a41(r156,l2) a44(r145,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r148,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a47(r113,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a48(r138,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a50(r135,l0) a51(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r129,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a50(r135,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a51(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r162,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r123,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a53(r128,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a53(r128,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a48(r138,l0) a50(r135,l0) a51(r162,l0) a58(r116,l0) a59(r115,l0) a60(r145,l0) a61(r163,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a54(r116,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r115,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r145,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a57(r163,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r163,l1) conflicts: a11(r117,l1) a12(r119,l1) a13(r121,l1) a14(r122,l1) a15(r127,l1) a16(r131,l1) a17(r136,l1) a18(r146,l1) a19(r156,l1) a20(r148,l1) a21(r113,l1) a23(r129,l1) a26(r123,l1) a27(r128,l1) a56(r145,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r116,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r115,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r145,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a61(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r163,l0) conflicts: a0(r122,l0) a1(r121,l0) a2(r127,l0) a3(r146,l0) a4(r136,l0) a5(r156,l0) a6(r117,l0) a7(r131,l0) a8(r119,l0) a46(r148,l0) a47(r113,l0) a49(r129,l0) a52(r123,l0) a53(r128,l0) a60(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r121)<->a10(r160)@1:move
  cp1:a0(r122)<->a9(r161)@1:move
  cp2:a21(r113)<->a24(r135)@1:shuffle
  cp3:a43(r115)<->a44(r145)@123:shuffle
  cp4:a42(r116)<->a43(r115)@123:shuffle
  cp5:a47(r113)<->a50(r135)@1:shuffle
  cp6:a55(r115)<->a56(r145)@123:shuffle
  cp7:a54(r116)<->a55(r115)@123:shuffle
  cp8:a59(r115)<->a60(r145)@123:shuffle
  cp9:a58(r116)<->a59(r115)@123:shuffle
  pref0:a1(r121)<-hr0@2
  pref1:a0(r122)<-hr0@2
  pref2:a10(r160)<-hr0@2
  pref3:a9(r161)<-hr0@2
  pref4:a42(r116)<-hr2@1980
  pref5:a41(r156)<-hr1@990
  pref6:a19(r156)<-hr1@990
  pref7:a5(r156)<-hr1@990
  pref8:a54(r116)<-hr2@990
  pref9:a58(r116)<-hr2@990
  regions=3, blocks=7, points=20
    allocnos=62 (big 0), copies=10, conflicts=0, ranges=46

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 2(->3:l1)
    all: 0r122 1r121 2r127 3r146 4r136 5r156 6r117 7r131 8r119 9r161 10r160 46r148 47r113 48r138 49r129 50r135 51r162 52r123 53r128 58r116 59r115 60r145 61r163
    modified regnos: 113 115 116 117 119 121 122 123 127 128 129 131 135 136 138 145 146 148 156 160 161 162 163
    border:
    Pressure: GENERAL_REGS=19
 Removing pref1:hr0@2
 Removing pref0:hr0@2
 Removing pref7:hr1@990
 Removing pref2:hr0@2
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14)@242676
          2:( 1-12 14)@116
            3:( 3-11)@179200
              4:( 4-11)@118528
      Allocno a0r122 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a1r121 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a2r127 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a3r146 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a4r136 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a5r156 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-15 48-106)
      Allocno a6r117 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a7r131 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a8r119 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a9r161 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a10r160 of ALL_REGS(46) has 13 avail. regs  1-12 14, node:  1-12 14 (confl regs =  0 13 15 48-106)
      Allocno a46r148 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a47r113 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a48r138 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a49r129 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a50r135 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a51r162 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a52r123 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a53r128 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a58r116 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a59r115 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a60r145 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a61r163 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
        Forming thread by copy 8:a59r115-a60r145 (freq=123):
          Result (freq=6930): a59r115(4950) a60r145(1980)
        Forming thread by copy 9:a58r116-a59r115 (freq=123):
          Result (freq=9900): a58r116(2970) a59r115(4950) a60r145(1980)
      Pushing a10(r160,l0)(cost 0)
      Pushing a9(r161,l0)(cost 0)
      Pushing a51(r162,l0: a25(r162,l1))(cost 0)
      Pushing a50(r135,l0: a24(r135,l1))(cost 0)
      Pushing a48(r138,l0: a22(r138,l1))(cost 0)
      Pushing a61(r163,l0: a57(r163,l1: a45(r163,l2)))(cost 0)
      Pushing a60(r145,l0: a56(r145,l1: a44(r145,l2)))(cost 0)
      Pushing a58(r116,l0: a54(r116,l1: a42(r116,l2)))(cost 0)
      Pushing a59(r115,l0: a55(r115,l1: a43(r115,l2)))(cost 0)
      Pushing a0(r122,l0)(potential spill: pri=1, cost=42)
      Forming thread from colorable bucket:
      Pushing a1(r121,l0)(potential spill: pri=1, cost=42)
      Forming thread from colorable bucket:
      Pushing a7(r131,l0)(potential spill: pri=5, cost=120)
      Forming thread from colorable bucket:
      Pushing a4(r136,l0)(potential spill: pri=6, cost=150)
      Forming thread from colorable bucket:
      Pushing a8(r119,l0)(potential spill: pri=9, cost=210)
      Forming thread from allocno a49r129:
        Making a49(r129,l0: a23(r129,l1)) colorable
      Forming thread from allocno a52r123:
        Making a52(r123,l0: a26(r123,l1)) colorable
      Forming thread from allocno a53r128:
        Making a53(r128,l0: a27(r128,l1)) colorable
      Forming thread from colorable bucket:
      Pushing a53(r128,l0: a27(r128,l1))(cost 19900)
      Forming thread from allocno a2r127:
        Making a2(r127,l0) colorable
      Forming thread from allocno a3r146:
        Making a3(r146,l0) colorable
      Forming thread from allocno a5r156:
        Making a5(r156,l0) colorable
      Forming thread from allocno a6r117:
        Making a6(r117,l0) colorable
      Forming thread from allocno a46r148:
        Making a46(r148,l0: a20(r148,l1)) colorable
      Forming thread from allocno a47r113:
        Forming thread by copy 5:a47r113-a50r135 (freq=1):
          Result (freq=1050): a47r113(1030) a50r135(20)
        Making a47(r113,l0: a21(r113,l1)) colorable
      Pushing a6(r117,l0)(cost 310)
      Pushing a5(r156,l0)(cost 17830)
      Pushing a3(r146,l0)(cost 9950)
      Pushing a46(r148,l0: a20(r148,l1))(cost 10000)
      Pushing a2(r127,l0)(cost 10310)
      Pushing a47(r113,l0: a21(r113,l1))(cost 10300)
      Pushing a52(r123,l0: a26(r123,l1))(cost 19900)
      Pushing a49(r129,l0: a23(r129,l1))(cost 49800)
      Popping a49(r129,l0: a23(r129,l1))  --         assign reg 4
      Popping a52(r123,l0: a26(r123,l1))  --         assign reg 5
      Popping a47(r113,l0: a21(r113,l1))  --         assign reg 6
      Popping a2(r127,l0)  --         assign reg 7
      Popping a46(r148,l0: a20(r148,l1))  --         assign reg 8
      Popping a3(r146,l0)  --         assign reg 9
      Popping a5(r156,l0)  --         assign reg 10
      Popping a6(r117,l0)  --         assign reg 11
      Popping a53(r128,l0: a27(r128,l1))  --         assign reg 3
      Popping a8(r119,l0)  -- spill
      Popping a4(r136,l0)  -- spill
      Popping a7(r131,l0)  -- spill
      Popping a1(r121,l0)  -- spill
      Popping a0(r122,l0)  -- spill
      Popping a59(r115,l0: a55(r115,l1: a43(r115,l2)))  --         assign reg 2
      Popping a58(r116,l0: a54(r116,l1: a42(r116,l2)))  --         assign reg 2
      Popping a60(r145,l0: a56(r145,l1: a44(r145,l2)))  --         assign reg 2
      Popping a61(r163,l0: a57(r163,l1: a45(r163,l2)))  --         assign reg 1
      Popping a48(r138,l0: a22(r138,l1))  --         assign reg 2
      Popping a50(r135,l0: a24(r135,l1))  --         assign reg 6
      Popping a51(r162,l0: a25(r162,l1))  --         assign reg 1
      Popping a9(r161,l0)  --         assign reg 0
      Popping a10(r160,l0)  --         assign reg 3
Spilling a6r117 for a53r128
Assigning 11 to a53r128
       a6(r117,l0)  -- assign memory

  Loop 1 (parent 0, header bb3, depth 1)
    bbs: 5(->6:l0) 3(->4:l2)
    all: 11r117 12r119 13r121 14r122 15r127 16r131 17r136 18r146 19r156 20r148 21r113 22r138 23r129 24r135 25r162 26r123 27r128 54r116 55r115 56r145 57r163
    modified regnos: 113 115 116 117 119 123 127 128 129 135 138 145 148 162 163
    border: 11r117 12r119 13r121 14r122 15r127 16r131 17r136 18r146 19r156
    Pressure: GENERAL_REGS=19
 Removing pref6:hr1@990
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14)@242560
          2:( 3-11)@179200
            3:( 4-11)@118040
      Spill a13(r121,l1)
      Spill a14(r122,l1)
      Allocno a11r117 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a12r119 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a15r127 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a16r131 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a17r136 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a18r146 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a19r156 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-15 48-106)
      Allocno a20r148 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a21r113 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a22r138 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a23r129 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a24r135 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a25r162 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a26r123 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a27r128 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a54r116 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a55r115 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a56r145 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a57r163 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
        Forming thread by copy 6:a55r115-a56r145 (freq=123):
          Result (freq=6930): a55r115(4950) a56r145(1980)
        Forming thread by copy 7:a54r116-a55r115 (freq=123):
          Result (freq=9900): a54r116(2970) a55r115(4950) a56r145(1980)
      Pushing a25(r162,l1)(cost 0)
      Pushing a24(r135,l1)(cost 0)
      Pushing a22(r138,l1)(cost 0)
      Pushing a57(r163,l1: a45(r163,l2))(cost 0)
      Pushing a56(r145,l1: a44(r145,l2))(cost 0)
      Pushing a54(r116,l1: a42(r116,l2))(cost 0)
      Pushing a55(r115,l1: a43(r115,l2))(cost 0)
      Pushing a16(r131,l1)(potential spill: pri=2, cost=60)
      Forming thread from colorable bucket:
      Pushing a17(r136,l1)(potential spill: pri=2, cost=60)
      Forming thread from colorable bucket:
      Pushing a12(r119,l1)(potential spill: pri=6, cost=160)
      Forming thread from allocno a23r129:
        Making a23(r129,l1) colorable
      Forming thread from allocno a26r123:
        Making a26(r123,l1) colorable
      Forming thread from allocno a27r128:
        Making a27(r128,l1) colorable
      Forming thread from colorable bucket:
      Pushing a27(r128,l1)(cost 19900)
      Forming thread from allocno a11r117:
        Making a11(r117,l1) colorable
      Forming thread from allocno a15r127:
        Making a15(r127,l1) colorable
      Forming thread from allocno a18r146:
        Making a18(r146,l1) colorable
      Forming thread from allocno a19r156:
        Making a19(r156,l1) colorable
      Forming thread from allocno a20r148:
        Making a20(r148,l1) colorable
      Forming thread from allocno a21r113:
        Forming thread by copy 2:a21r113-a24r135 (freq=1):
          Result (freq=1050): a21r113(1030) a24r135(20)
        Making a21(r113,l1) colorable
      Pushing a11(r117,l1)(cost 260)
      Pushing a19(r156,l1)(cost 17860)
      Pushing a18(r146,l1)(cost 9940)
      Pushing a20(r148,l1)(cost 10000)
      Pushing a15(r127,l1)(cost 10340)
      Pushing a21(r113,l1)(cost 10300)
      Pushing a26(r123,l1)(cost 19900)
      Pushing a23(r129,l1)(cost 49800)
      Popping a23(r129,l1)  --         assign reg 4
      Popping a26(r123,l1)  --         assign reg 5
      Popping a21(r113,l1)  --         assign reg 6
      Popping a15(r127,l1)  --         assign reg 7
      Popping a20(r148,l1)  --         assign reg 8
      Popping a18(r146,l1)  --         assign reg 9
      Popping a19(r156,l1)  --         assign reg 10
      Popping a11(r117,l1)  --         assign reg 11
      Popping a27(r128,l1)  --         assign reg 3
      Popping a12(r119,l1)  -- spill
      Popping a17(r136,l1)  -- spill
      Popping a16(r131,l1)  -- spill
      Popping a55(r115,l1: a43(r115,l2))  --         assign reg 2
      Popping a54(r116,l1: a42(r116,l2))  --         assign reg 2
      Popping a56(r145,l1: a44(r145,l2))  --         assign reg 2
      Popping a57(r163,l1: a45(r163,l2))  --         assign reg 1
      Popping a22(r138,l1)  --         assign reg 2
      Popping a24(r135,l1)  --         assign reg 6
      Popping a25(r162,l1)  --         assign reg 1
Spilling a11r117 for a27r128
Assigning 11 to a27r128
       a11(r117,l1)  -- assign memory

  Loop 2 (parent 1, header bb4, depth 2)
    bbs: 4(->5:l1)
    all: 28r113 29r117 30r119 31r121 32r122 33r123 34r127 35r128 36r129 37r131 38r136 39r146 40r148 41r156 42r116 43r115 44r145 45r163
    modified regnos: 115 116 123 128 129 145 163
    border: 28r113 29r117 30r119 31r121 32r122 33r123 34r127 35r128 36r129 37r131 38r136 39r146 40r148 41r156
    Pressure: GENERAL_REGS=19
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-7 9-12 14)@241560
          2:( 3-7 9-11)@178200
            3:( 4-7 9-11)@77220
      Spill a29(r117,l2)
      Spill a30(r119,l2)
      Spill a31(r121,l2)
      Spill a32(r122,l2)
      Spill a37(r131,l2)
      Spill a38(r136,l2)
      Allocno a28r113 of GENERAL_REGS(14) has 7 avail. regs  4-7 9-11, node:  4-7 9-11 (confl regs =  0-2 12-106)
      Allocno a33r123 of GENERAL_REGS(14) has 8 avail. regs  3-7 9-11, node:  3-7 9-11 (confl regs =  0-2 12-106)
      Allocno a34r127 of GENERAL_REGS(14) has 7 avail. regs  4-7 9-11, node:  4-7 9-11 (confl regs =  0-2 12-106)
      Allocno a35r128 of GENERAL_REGS(14) has 8 avail. regs  3-7 9-11, node:  3-7 9-11 (confl regs =  0-2 12-106)
      Allocno a36r129 of GENERAL_REGS(14) has 8 avail. regs  3-7 9-11, node:  3-7 9-11 (confl regs =  0-2 12-106)
      Allocno a39r146 of GENERAL_REGS(14) has 7 avail. regs  4-7 9-11, node:  4-7 9-11 (confl regs =  0-2 12-106)
      Allocno a41r156 of ALL_REGS(46) has 8 avail. regs  1 4-7 9-11, ^node:  0-7 9-12 14 (confl regs =  0 2 12-15 48-106)
      Allocno a42r116 of GENERAL_REGS(14) has 13 avail. regs  0-7 9-12 14, node:  0-7 9-12 14 (confl regs =  13 15-106)
      Allocno a43r115 of GENERAL_REGS(14) has 13 avail. regs  0-7 9-12 14, node:  0-7 9-12 14 (confl regs =  13 15-106)
      Allocno a44r145 of GENERAL_REGS(14) has 13 avail. regs  0-7 9-12 14, node:  0-7 9-12 14 (confl regs =  13 15-106)
      Allocno a45r163 of GENERAL_REGS(14) has 13 avail. regs  0-7 9-12 14, node:  0-7 9-12 14 (confl regs =  13 15-106)
      Forming thread from colorable bucket:
        Forming thread by copy 3:a43r115-a44r145 (freq=123):
          Result (freq=6930): a43r115(4950) a44r145(1980)
        Forming thread by copy 4:a42r116-a43r115 (freq=123):
          Result (freq=9900): a42r116(2970) a43r115(4950) a44r145(1980)
      Pushing a45(r163,l2)(cost 0)
      Pushing a44(r145,l2)(cost 0)
      Pushing a42(r116,l2)(cost 0)
      Forming thread from allocno a33r123:
        Making a33(r123,l2) colorable
      Forming thread from allocno a35r128:
        Making a35(r128,l2) colorable
      Forming thread from allocno a36r129:
        Making a36(r129,l2) colorable
      Forming thread from allocno a41r156:
        Making a41(r156,l2) colorable
      Pushing a41(r156,l2)(cost 18220)
      Forming thread from allocno a28r113:
        Making a28(r113,l2) colorable
      Forming thread from allocno a34r127:
        Making a34(r127,l2) colorable
      Forming thread from allocno a39r146:
        Making a39(r146,l2) colorable
      Pushing a39(r146,l2)(cost 10300)
      Pushing a34(r127,l2)(cost 10300)
      Pushing a28(r113,l2)(cost 10120)
      Pushing a35(r128,l2)(cost 20020)
      Pushing a33(r123,l2)(cost 20020)
      Pushing a36(r129,l2)(cost 49720)
      Pushing a43(r115,l2)(cost 0)
      Popping a43(r115,l2)  --         assign reg 2
      Popping a36(r129,l2)  --         assign reg 4
      Popping a33(r123,l2)  --         assign reg 5
      Popping a35(r128,l2)  --         assign reg 11
      Popping a28(r113,l2)  --         assign reg 6
      Popping a34(r127,l2)  --         assign reg 7
      Popping a39(r146,l2)  --         assign reg 9
      Popping a41(r156,l2)  --         assign reg 10
      Popping a42(r116,l2)  --         assign reg 2
      Popping a44(r145,l2)  --         assign reg 2
      Popping a45(r163,l2)  --         assign reg 3
Disposition:
   28:r113 l2     6   21:r113 l1     6   43:r115 l2     2   42:r116 l2     2
   29:r117 l2   mem   11:r117 l1   mem    6:r117 l0   mem   30:r119 l2   mem
   12:r119 l1   mem    8:r119 l0   mem   31:r121 l2   mem   13:r121 l1   mem
    1:r121 l0   mem   32:r122 l2   mem   14:r122 l1   mem    0:r122 l0   mem
   33:r123 l2     5   26:r123 l1     5   34:r127 l2     7   15:r127 l1     7
    2:r127 l0     7   35:r128 l2    11   27:r128 l1    11   36:r129 l2     4
   23:r129 l1     4   37:r131 l2   mem   16:r131 l1   mem    7:r131 l0   mem
   24:r135 l1     6   38:r136 l2   mem   17:r136 l1   mem    4:r136 l0   mem
   22:r138 l1     2   44:r145 l2     2   39:r146 l2     9   18:r146 l1     9
    3:r146 l0     9   40:r148 l2     8   20:r148 l1     8   41:r156 l2    10
   19:r156 l1    10    5:r156 l0    10   10:r160 l0     3    9:r161 l0     0
   25:r162 l1     1   45:r163 l2     3
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb3)
  7 vs parent 7:      Creating newreg=164 from oldreg=127
  9 vs parent 9:      Creating newreg=165 from oldreg=146
  10 vs parent 10:      Creating newreg=166 from oldreg=156
rescanning insn with uid = 74.
rescanning insn with uid = 76.
rescanning insn with uid = 20.
      Changing RTL for loop 2 (header bb4)
  6 vs parent 6:      Creating newreg=167 from oldreg=113
  5 vs parent 5:      Creating newreg=168 from oldreg=123
  7 vs parent 7:      Creating newreg=169 from oldreg=164
  11 vs parent 11:      Creating newreg=170 from oldreg=128
  4 vs parent 4:      Creating newreg=171 from oldreg=129
  9 vs parent 9:      Creating newreg=172 from oldreg=165
  10 vs parent 10:      Creating newreg=173 from oldreg=166
rescanning insn with uid = 39.
rescanning insn with uid = 40.
rescanning insn with uid = 43.
rescanning insn with uid = 63.
rescanning insn with uid = 53.
rescanning insn with uid = 54.
rescanning insn with uid = 56.
rescanning insn with uid = 60.
rescanning insn with uid = 65.
scanning new insn with uid = 128.
scanning new insn with uid = 129.
scanning new insn with uid = 130.
scanning new insn with uid = 131.
scanning new insn with uid = 132.
scanning new insn with uid = 133.
scanning new insn with uid = 134.
scanning new insn with uid = 135.
scanning new insn with uid = 136.
scanning new insn with uid = 137.
scanning new insn with uid = 138.
scanning new insn with uid = 139.
scanning new insn with uid = 140.
    Adding cp10:a2r127-a15r164
    Adding range [21..21] to allocno a2r127
    Adding cp11:a3r146-a18r165
    Adding range [21..23] to allocno a3r146
    Adding cp12:a5r156-a19r166
    Adding range [21..25] to allocno a5r156
    Adding range [22..26] to allocno a15r164
    Adding range [24..26] to allocno a18r165
    Adding range [26..26] to allocno a19r166
    Adding range [21..26] to live through  allocno a6r117
    Adding range [21..26] to live through  allocno a8r119
    Adding range [21..26] to live through  allocno a1r121
    Adding range [21..26] to live through  allocno a0r122
    Adding range [21..26] to live through  allocno a7r131
    Adding range [21..26] to live through  allocno a4r136
    Adding cp13:a21r113-a28r167
    Adding range [28..28] to allocno a21r113
    Adding cp14:a26r123-a33r168
    Adding range [28..30] to allocno a26r123
    Adding cp15:a15r164-a34r169
    Adding range [28..32] to allocno a15r164
    Adding cp16:a27r128-a35r170
    Adding range [28..34] to allocno a27r128
    Adding cp17:a23r129-a36r171
    Adding range [28..36] to allocno a23r129
    Adding cp18:a18r165-a39r172
    Adding range [28..38] to allocno a18r165
    Adding cp19:a19r166-a41r173
    Adding range [28..40] to allocno a19r166
    Adding range [29..41] to allocno a28r167
    Adding range [31..41] to allocno a33r168
    Adding range [33..41] to allocno a34r169
    Adding range [35..41] to allocno a35r170
    Adding range [37..41] to allocno a36r171
    Adding range [39..41] to allocno a39r172
    Adding range [41..41] to allocno a41r173
    Adding range [28..41] to live through  allocno a11r117
    Adding range [28..41] to live through  allocno a12r119
    Adding range [28..41] to live through  allocno a13r121
    Adding range [28..41] to live through  allocno a14r122
    Adding range [28..41] to live through  allocno a16r131
    Adding range [28..41] to live through  allocno a17r136
    Adding range [28..41] to live through  allocno a20r148
    Adding cp20:a15r164-a34r169
    Adding range [43..43] to allocno a34r169
    Adding cp21:a18r165-a39r172
    Adding range [43..45] to allocno a39r172
    Adding cp22:a19r166-a41r173
    Adding range [43..47] to allocno a41r173
    Adding range [44..48] to allocno a15r164
    Adding range [46..48] to allocno a18r165
    Adding range [48..48] to allocno a19r166
    Adding range [43..48] to live through  allocno a11r117
    Adding range [43..48] to live through  allocno a12r119
    Adding range [43..48] to live through  allocno a13r121
    Adding range [43..48] to live through  allocno a14r122
    Adding range [43..48] to live through  allocno a16r131
    Adding range [43..48] to live through  allocno a17r136
    New r164: setting preferred GENERAL_REGS, alternative NO_REGS
    New r165: setting preferred GENERAL_REGS, alternative NO_REGS
    New r166: setting preferred GENERAL_REGS, alternative ALL_REGS
    New r167: setting preferred LO_REGS, alternative GENERAL_REGS
    New r168: setting preferred GENERAL_REGS, alternative NO_REGS
    New r169: setting preferred GENERAL_REGS, alternative NO_REGS
    New r170: setting preferred GENERAL_REGS, alternative NO_REGS
    New r171: setting preferred GENERAL_REGS, alternative NO_REGS
    New r172: setting preferred GENERAL_REGS, alternative NO_REGS
    New r173: setting preferred GENERAL_REGS, alternative ALL_REGS
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;;
;; Loop 2
;;  header 4, latch 4
;;  depth 2, outer 1
;;  nodes: 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
+++Costs: overall 1544, reg -26, mem 1570, ld 0, st 0, move 479
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={9d,2u} r2={8d,1u} r3={7d} r7={1d,6u} r12={12d} r13={1d,12u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={8d,2u} r101={6d} r102={1d,6u} r103={1d,5u} r104={6d} r105={6d} r106={6d} r113={2d,3u} r115={2d,3u} r116={1d,2u} r117={2d,2u} r119={2d,1u} r121={1d,2u} r122={1d,2u} r123={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,3u,2e} r131={1d,2u} r135={1d,1u} r136={2d,2u} r138={1d,1u} r145={1d,1u} r146={2d,2u} r148={1d,1u} r156={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d} r163={1d} r164={3d,4u} r165={2d,1u} r166={2d,1u} r167={1d,1u} r168={2d,1u} r169={1d,2u} r170={2d,1u} r171={2d,4u,2e} r172={1d,2u} r173={1d,2u} 
;;    total ref usage 670{569d,97u,4e} in 65{59 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg:SI 0 r0)
        (const_int 40000 [0x9c40])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 118 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f646d7d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f646d7d3200 operator new []>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 118 10 13 2 (set (reg:SI 160)
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 13 118 11 2 (set (reg:SI 0 r0)
        (const_int 400 [0x190])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 11 13 14 2 (set (reg/f:SI 121 [ _28 ])
        (reg:SI 160)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_NOALIAS (reg/f:SI 133)
            (nil))))
(call_insn 14 11 119 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f646d7d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:28 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f646d7d3200 operator new []>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 119 14 15 2 (set (reg:SI 161)
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 15 119 18 2 (set (reg/f:SI 122 [ _30 ])
        (reg:SI 161)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_NOALIAS (reg/f:SI 134)
            (nil))))
(insn 18 15 17 2 (set (reg/f:SI 131 [ ivtmp.32 ])
        (plus:SI (reg/f:SI 121 [ _28 ])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 17 18 3 2 (set (reg:SI 119 [ ivtmp.30 ])
        (plus:SI (reg/f:SI 122 [ _30 ])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 3 17 57 2 (set (reg:SI 117 [ ivtmp.32 ])
        (reg/f:SI 131 [ ivtmp.32 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 57 3 121 2 (set (reg/f:SI 156)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f646d5d9c60 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f646d5d9c60 *.LC0>)
        (nil)))
(insn 121 57 122 2 (set (reg:SI 136)
        (const_int 60495 [0xec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 60495 [0xec4f])
        (nil)))
(insn 122 121 124 2 (set (zero_extract:SI (reg:SI 136)
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20164 [0x4ec4])) "./understand-elf/matmul-v2.cpp":15:21 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1321528399 [0x4ec4ec4f])
        (nil)))
(insn 124 122 125 2 (set (reg:SI 146)
        (const_int 52429 [0xcccd])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 52429 [0xcccd])
        (nil)))
(insn 125 124 4 2 (set (zero_extract:SI (reg:SI 146)
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 52428 [0xcccc])) "./understand-elf/matmul-v2.cpp":17:30 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int -858993459 [0xffffffffcccccccd])
        (nil)))
(insn 4 125 128 2 (set (reg:SI 127 [ ivtmp.35 ])
        (const_int 100 [0x64])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 100 [0x64])
        (nil)))
(insn 128 4 129 2 (set (reg:SI 164 [orig:127 ivtmp.35 ] [127])
        (reg:SI 127 [ ivtmp.35 ])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 127 [ ivtmp.35 ])
        (nil)))
(insn 129 128 130 2 (set (reg:SI 165 [146])
        (reg:SI 146)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 146)
        (nil)))
(insn 130 129 75 2 (set (reg/f:SI 166 [156])
        (reg/f:SI 156)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 156)
        (nil)))
(code_label 75 130 19 3 3 (nil) [1 uses])
(note 19 75 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 25 19 20 3 NOTE_INSN_DELETED)
(insn 20 25 24 3 (set (reg:SI 129 [ ivtmp.15 ])
        (plus:SI (reg:SI 164 [orig:127 ivtmp.35 ] [127])
            (const_int -100 [0xffffffffffffff9c]))) 7 {*arm_addsi3}
     (nil))
(insn 24 20 5 3 (set (reg:SI 138)
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 13 [0xd])
        (nil)))
(insn 5 24 6 3 (set (reg:SI 128 [ ivtmp.20 ])
        (reg:SI 117 [ ivtmp.32 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 22 3 (set (reg:SI 123 [ ivtmp.17 ])
        (reg/f:SI 131 [ ivtmp.32 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 22 6 23 3 (parallel [
            (set (reg:SI 135)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 129 [ ivtmp.15 ]))
                            (zero_extend:DI (reg:SI 136)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 162))
        ]) "./understand-elf/matmul-v2.cpp":15:21 72 {*umull_high}
     (expr_list:REG_UNUSED (reg:SI 162)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 129 [ ivtmp.15 ]))
                        (const_int 1321528399 [0x4ec4ec4f]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 23 22 26 3 (set (reg:SI 113 [ _4 ])
        (lshiftrt:SI (reg:SI 135)
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_EQUAL (udiv:SI (reg:SI 129 [ ivtmp.15 ])
                (const_int 13 [0xd]))
            (nil))))
(insn 26 23 36 3 (set (reg:SI 113 [ _4 ])
        (minus:SI (reg:SI 129 [ ivtmp.15 ])
            (mult:SI (reg:SI 138)
                (reg:SI 113 [ _4 ])))) "./understand-elf/matmul-v2.cpp":15:21 58 {*mls}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
(insn 36 26 41 3 (set (mem:SI (pre_inc:SI (reg:SI 119 [ ivtmp.30 ])) [1 MEM[(int *)_46]+0 S4 A32])
        (reg:SI 113 [ _4 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 119 [ ivtmp.30 ])
        (nil)))
(insn 41 36 131 3 (set (reg:SI 148)
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 20 [0x14])
        (nil)))
(insn 131 41 132 3 (set (reg:SI 167 [orig:113 _4 ] [113])
        (reg:SI 113 [ _4 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 113 [ _4 ])
        (nil)))
(insn 132 131 133 3 (set (reg:SI 168 [orig:123 ivtmp.17 ] [123])
        (reg:SI 123 [ ivtmp.17 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 123 [ ivtmp.17 ])
        (nil)))
(insn 133 132 134 3 (set (reg:SI 169 [orig:127 ivtmp.35 ] [127])
        (reg:SI 164 [orig:127 ivtmp.35 ] [127])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 164 [orig:127 ivtmp.35 ] [127])
        (nil)))
(insn 134 133 135 3 (set (reg:SI 170 [orig:128 ivtmp.20 ] [128])
        (reg:SI 128 [ ivtmp.20 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 128 [ ivtmp.20 ])
        (nil)))
(insn 135 134 136 3 (set (reg:SI 171 [orig:129 ivtmp.15 ] [129])
        (reg:SI 129 [ ivtmp.15 ])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 129 [ ivtmp.15 ])
        (nil)))
(insn 136 135 137 3 (set (reg:SI 172 [146])
        (reg:SI 165 [146])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 165 [146])
        (nil)))
(insn 137 136 64 3 (set (reg/f:SI 173 [156])
        (reg/f:SI 166 [156])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 166 [156])
        (nil)))
(code_label 64 137 37 4 2 (nil) [1 uses])
(note 37 64 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 42 37 39 4 NOTE_INSN_DELETED)
(insn 39 42 40 4 (parallel [
            (set (reg:SI 145)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 171 [orig:129 ivtmp.15 ] [129]))
                            (zero_extend:DI (reg:SI 172 [146])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 163))
        ]) "./understand-elf/matmul-v2.cpp":17:30 72 {*umull_high}
     (expr_list:REG_UNUSED (reg:SI 163)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 171 [orig:129 ivtmp.15 ] [129]))
                        (const_int 3435973837 [0xcccccccd]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 40 39 43 4 (set (reg:SI 115 [ _9 ])
        (lshiftrt:SI (reg:SI 145)
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (udiv:SI (reg:SI 171 [orig:129 ivtmp.15 ] [129])
                (const_int 20 [0x14]))
            (nil))))
(insn 43 40 63 4 (set (reg:SI 115 [ _9 ])
        (minus:SI (reg:SI 171 [orig:129 ivtmp.15 ] [129])
            (mult:SI (reg:SI 148)
                (reg:SI 115 [ _9 ])))) "./understand-elf/matmul-v2.cpp":17:30 58 {*mls}
     (nil))
(insn 63 43 53 4 (set (reg:SI 171 [orig:129 ivtmp.15 ] [129])
        (plus:SI (reg:SI 171 [orig:129 ivtmp.15 ] [129])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:22 7 {*arm_addsi3}
     (nil))
(insn 53 63 54 4 (set (mem:SI (pre_inc:SI (reg:SI 168 [orig:123 ivtmp.17 ] [123])) [1 MEM[(int *)_43]+0 S4 A32])
        (reg:SI 115 [ _9 ])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 168 [orig:123 ivtmp.17 ] [123])
        (nil)))
(insn 54 53 56 4 (set (reg:SI 116 [ _15 ])
        (mult:SI (reg:SI 115 [ _9 ])
            (reg:SI 167 [orig:113 _4 ] [113]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 115 [ _9 ])
        (nil)))
(insn 56 54 59 4 (set (mem:SI (pre_inc:SI (reg:SI 170 [orig:128 ivtmp.20 ] [128])) [1 MEM[(int *)_25]+0 S4 A32])
        (reg:SI 116 [ _15 ])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 170 [orig:128 ivtmp.20 ] [128])
        (nil)))
(insn 59 56 60 4 (set (reg:SI 2 r2)
        (reg:SI 116 [ _15 ])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116 [ _15 ])
        (nil)))
(insn 60 59 61 4 (set (reg:SI 1 r1)
        (reg/f:SI 173 [156])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f646d5d9c60 *.LC0>)
        (nil)))
(insn 61 60 62 4 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 62 61 65 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f646d58f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f646d58f100 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 65 62 66 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 169 [orig:127 ivtmp.35 ] [127])
            (reg:SI 171 [orig:129 ivtmp.15 ] [129]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 66 65 67 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 64)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1062895956 (nil)))
 -> 64)
(note 67 66 138 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 138 67 139 5 (set (reg:SI 164 [orig:127 ivtmp.35 ] [127])
        (reg:SI 169 [orig:127 ivtmp.35 ] [127])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 169 [orig:127 ivtmp.35 ] [127])
        (nil)))
(insn 139 138 140 5 (set (reg:SI 165 [146])
        (reg:SI 172 [146])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 172 [146])
        (nil)))
(insn 140 139 68 5 (set (reg/f:SI 166 [156])
        (reg/f:SI 173 [156])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 173 [156])
        (nil)))
(note 68 140 70 5 NOTE_INSN_DELETED)
(insn 70 68 71 5 (set (reg:SI 1 r1)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f646d5d9cf0 *.LC1>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 1 [0x1])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f646d5d9cf0 *.LC1>)
        (nil)))
(insn 71 70 74 5 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 74 71 72 5 (set (reg:SI 164 [orig:127 ivtmp.35 ] [127])
        (plus:SI (reg:SI 164 [orig:127 ivtmp.35 ] [127])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(call_insn 72 74 73 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f646d58f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f646d58f100 __printf_chk>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 73 72 76 5 (set (reg:SI 117 [ ivtmp.32 ])
        (plus:SI (reg:SI 117 [ ivtmp.32 ])
            (const_int 400 [0x190]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn 76 73 77 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 164 [orig:127 ivtmp.35 ] [127])
            (const_int 200 [0xc8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 77 76 78 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 75)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1062895924 (nil)))
 -> 75)
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 6 (set (reg:SI 0 r0)
        (reg/f:SI 121 [ _28 ])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 121 [ _28 ])
        (nil)))
(call_insn 80 79 81 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f646d7d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f646d7d3400 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 81 80 82 6 (set (reg:SI 0 r0)
        (reg/f:SI 122 [ _30 ])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 122 [ _30 ])
        (nil)))
(call_insn 82 81 87 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f646d7d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f646d7d3400 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 87 82 88 6 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (nil))
(insn 88 87 127 6 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))
(note 127 88 0 NOTE_INSN_DELETED)

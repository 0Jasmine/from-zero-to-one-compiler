
;; Function main (main, funcdef_no=0, decl_uid=6383, cgraph_uid=1, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5 4 3
;;
;; Loop 2
;;  header 5, latch 4
;;  depth 2, outer 1
;;  nodes: 5 4
;; 2 succs { 7 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Removing SCRATCH to p189 in insn #32 (nop 3)
rescanning insn with uid = 32.
Removing SCRATCH to p190 in insn #54 (nop 3)
rescanning insn with uid = 54.
Building IRA IR
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 136.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)

Pass 0 for finding pseudo/allocno costs

    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a2 (r187,l0) best LO_REGS, allocno LO_REGS
    r186: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a3 (r186,l0) best LO_REGS, allocno LO_REGS
    r185: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a4 (r185,l0) best LO_REGS, allocno LO_REGS
    r184: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a6 (r184,l0) best LO_REGS, allocno LO_REGS
    r183: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a5 (r183,l0) best LO_REGS, allocno LO_REGS
    r182: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a7 (r182,l0) best LO_REGS, allocno LO_REGS
    r181: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a9 (r181,l0) best LO_REGS, allocno LO_REGS
    r180: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a8 (r180,l0) best LO_REGS, allocno LO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a14 (r178,l0) best LO_REGS, allocno LO_REGS
    r177: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a17 (r177,l0) best LO_REGS, allocno LO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a19 (r175,l0) best LO_REGS, allocno LO_REGS
    r174: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a26 (r174,l0) best LO_REGS, allocno LO_REGS
    r173: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a29 (r173,l0) best LO_REGS, allocno LO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a31 (r171,l0) best LO_REGS, allocno LO_REGS
    r170: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a35 (r170,l0) best LO_REGS, allocno LO_REGS
    r169: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a39 (r169,l0) best LO_REGS, allocno LO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a52 (r162,l0) best LO_REGS, allocno LO_REGS
    r161: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a54 (r161,l0) best LO_REGS, allocno LO_REGS
    r160: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a55 (r160,l0) best LO_REGS, allocno LO_REGS
    r159: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a56 (r159,l0) best LO_REGS, allocno LO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a60 (r152,l0) best LO_REGS, allocno LO_REGS
    r151: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a68 (r151,l0) best LO_REGS, allocno LO_REGS
    r150: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a70 (r150,l0) best LO_REGS, allocno LO_REGS
    r149: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a72 (r149,l0) best LO_REGS, allocno LO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a75 (r147,l0) best LO_REGS, allocno LO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a71 (r143,l0) best LO_REGS, allocno LO_REGS
    r142: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a74 (r142,l0) best LO_REGS, allocno LO_REGS
    r141: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a11 (r141,l0) best LO_REGS, allocno LO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a22 (r135,l0) best LO_REGS, allocno LO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a24 (r129,l0) best LO_REGS, allocno LO_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a36 (r126,l0) best LO_REGS, allocno LO_REGS
    r125: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a23 (r125,l0) best LO_REGS, allocno LO_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a40 (r122,l0) best LO_REGS, allocno LO_REGS
    r121: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a42 (r121,l0) best LO_REGS, allocno LO_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a53 (r118,l0) best LO_REGS, allocno LO_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a58 (r116,l0) best LO_REGS, allocno LO_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a69 (r113,l0) best LO_REGS, allocno LO_REGS

  a0(r145,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:25000 VFP_LO_REGS:25000 ALL_REGS:25000 MEM:11000
  a1(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:24000 VFP_LO_REGS:24000 ALL_REGS:24000 MEM:6000
  a2(r187,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a3(r186,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a4(r185,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a5(r183,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a6(r184,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a7(r182,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a8(r180,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a9(r181,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a10(r179,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a11(r141,l0) costs: LO_REGS:2000 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a12(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a13(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a14(r178,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a15(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:25000 VFP_LO_REGS:25000 ALL_REGS:25000 MEM:11000
  a16(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:25000 VFP_LO_REGS:25000 ALL_REGS:25000 MEM:11000
  a17(r177,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a18(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a19(r175,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a20(r176,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:29000 VFP_LO_REGS:29000 ALL_REGS:29000 MEM:15000
  a21(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a22(r135,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a23(r125,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a24(r129,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a25(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a26(r174,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a27(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:25000 VFP_LO_REGS:25000 ALL_REGS:25000 MEM:11000
  a28(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:25000 VFP_LO_REGS:25000 ALL_REGS:25000 MEM:11000
  a29(r173,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a30(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a31(r171,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a32(r172,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:29000 VFP_LO_REGS:29000 ALL_REGS:29000 MEM:15000
  a33(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a34(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a35(r170,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a36(r126,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a37(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a38(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a39(r169,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a40(r122,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a41(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a42(r121,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:60000 VFP_LO_REGS:60000 ALL_REGS:60000 MEM:40000
  a43(r167,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a44(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:60000 VFP_LO_REGS:60000 ALL_REGS:60000 MEM:40000
  a45(r168,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:29000 VFP_LO_REGS:29000 ALL_REGS:29000 MEM:15000
  a46(r166,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a47(r165,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a48(r163,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a49(r164,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:89000 VFP_LO_REGS:89000 ALL_REGS:89000 MEM:55000
  a50(r190,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:15000 VFP_LO_REGS:15000 ALL_REGS:15000 MEM:10000
  a51(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a52(r162,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a53(r118,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a54(r161,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a55(r160,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a56(r159,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:29000 VFP_LO_REGS:29000 ALL_REGS:29000 MEM:15000
  a57(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a58(r116,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:60000 VFP_LO_REGS:60000 ALL_REGS:60000 MEM:40000
  a59(r157,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a60(r152,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:60000 VFP_LO_REGS:60000 ALL_REGS:60000 MEM:40000
  a61(r158,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:29000 VFP_LO_REGS:29000 ALL_REGS:29000 MEM:15000
  a62(r156,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a63(r155,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a64(r153,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a65(r154,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:89000 VFP_LO_REGS:89000 ALL_REGS:89000 MEM:55000
  a66(r189,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:15000 VFP_LO_REGS:15000 ALL_REGS:15000 MEM:10000
  a67(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a68(r151,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a69(r113,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:30000 VFP_LO_REGS:30000 ALL_REGS:30000 MEM:20000
  a70(r150,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:29000 VFP_LO_REGS:29000 ALL_REGS:29000 MEM:15000
  a71(r143,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:40000 VFP_LO_REGS:40000 ALL_REGS:40000 MEM:21000
  a72(r149,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:29000 VFP_LO_REGS:29000 ALL_REGS:29000 MEM:15000
  a73(r148,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:25000 VFP_LO_REGS:25000 ALL_REGS:25000 MEM:11000
  a74(r142,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:40000 VFP_LO_REGS:40000 ALL_REGS:40000 MEM:21000
  a75(r147,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:89000 VFP_LO_REGS:89000 ALL_REGS:89000 MEM:55000
  a76(r146,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 VFP_D0_D7_REGS:25000 VFP_LO_REGS:25000 ALL_REGS:25000 MEM:11000

   Insn 147(l0): point = 0
   Insn 146(l0): point = 2
   Insn 142(l0): point = 4
   Insn 139(l0): point = 6
   Insn 136(l0): point = 9
   Insn 135(l0): point = 11
   Insn 133(l0): point = 14
   Insn 132(l0): point = 16
   Insn 131(l0): point = 18
   Insn 128(l0): point = 21
   Insn 127(l0): point = 23
   Insn 125(l0): point = 26
   Insn 124(l0): point = 28
   Insn 123(l0): point = 30
   Insn 151(l0): point = 33
   Insn 41(l0): point = 35
   Insn 40(l0): point = 37
   Insn 39(l0): point = 39
   Insn 38(l0): point = 41
   Insn 37(l0): point = 43
   Insn 36(l0): point = 45
   Insn 35(l0): point = 47
   Insn 34(l0): point = 49
   Insn 33(l0): point = 51
   Insn 32(l0): point = 53
   Insn 31(l0): point = 55
   Insn 30(l0): point = 57
   Insn 29(l0): point = 59
   Insn 28(l0): point = 61
   Insn 27(l0): point = 63
   Insn 26(l0): point = 65
   Insn 25(l0): point = 67
   Insn 121(l0): point = 70
   Insn 120(l0): point = 72
   Insn 119(l0): point = 74
   Insn 113(l0): point = 77
   Insn 112(l0): point = 79
   Insn 111(l0): point = 81
   Insn 110(l0): point = 83
   Insn 109(l0): point = 85
   Insn 107(l0): point = 88
   Insn 106(l0): point = 90
   Insn 105(l0): point = 92
   Insn 99(l0): point = 95
   Insn 98(l0): point = 97
   Insn 97(l0): point = 99
   Insn 96(l0): point = 101
   Insn 95(l0): point = 103
   Insn 94(l0): point = 105
   Insn 93(l0): point = 107
   Insn 92(l0): point = 109
   Insn 91(l0): point = 111
   Insn 90(l0): point = 113
   Insn 89(l0): point = 115
   Insn 88(l0): point = 117
   Insn 87(l0): point = 119
   Insn 86(l0): point = 121
   Insn 85(l0): point = 123
   Insn 84(l0): point = 125
   Insn 83(l0): point = 127
   Insn 82(l0): point = 129
   Insn 81(l0): point = 131
   Insn 80(l0): point = 133
   Insn 79(l0): point = 135
   Insn 78(l0): point = 137
   Insn 77(l0): point = 139
   Insn 76(l0): point = 141
   Insn 75(l0): point = 143
   Insn 74(l0): point = 145
   Insn 73(l0): point = 147
   Insn 72(l0): point = 149
   Insn 71(l0): point = 151
   Insn 70(l0): point = 153
   Insn 69(l0): point = 155
   Insn 68(l0): point = 157
   Insn 67(l0): point = 159
   Insn 66(l0): point = 161
   Insn 65(l0): point = 163
   Insn 64(l0): point = 165
   Insn 63(l0): point = 167
   Insn 62(l0): point = 169
   Insn 61(l0): point = 171
   Insn 60(l0): point = 173
   Insn 59(l0): point = 175
   Insn 58(l0): point = 177
   Insn 57(l0): point = 179
   Insn 56(l0): point = 181
   Insn 55(l0): point = 183
   Insn 54(l0): point = 185
   Insn 53(l0): point = 187
   Insn 52(l0): point = 189
   Insn 51(l0): point = 191
   Insn 50(l0): point = 193
   Insn 49(l0): point = 195
   Insn 48(l0): point = 197
   Insn 47(l0): point = 199
   Insn 46(l0): point = 201
   Insn 45(l0): point = 203
   Insn 149(l0): point = 206
   Insn 21(l0): point = 208
   Insn 20(l0): point = 210
   Insn 19(l0): point = 212
   Insn 18(l0): point = 214
   Insn 17(l0): point = 216
   Insn 16(l0): point = 218
   Insn 15(l0): point = 220
   Insn 14(l0): point = 222
   Insn 13(l0): point = 224
   Insn 12(l0): point = 226
   Insn 11(l0): point = 228
   Insn 10(l0): point = 230
   Insn 9(l0): point = 232
   Insn 8(l0): point = 234
   Insn 7(l0): point = 236
   Insn 6(l0): point = 238
   Insn 5(l0): point = 240
 a0(r145): [3..4]
 a1(r144): [5..6]
 a2(r187): [17..18]
 a3(r186): [29..30]
 a4(r185): [73..74]
 a5(r183): [78..79]
 a6(r184): [80..81]
 a7(r182): [91..92]
 a8(r180): [96..97]
 a9(r181): [98..99]
 a10(r179): [104..105]
 a11(r141): [108..109]
 a12(r140): [110..111]
 a13(r139): [112..115]
 a14(r178): [112..113]
 a15(r138): [116..117]
 a16(r137): [118..119]
 a17(r177): [120..121]
 a18(r136): [120..123]
 a19(r175): [124..127]
 a20(r176): [124..125]
 a21(r134): [130..133]
 a22(r135): [130..131]
 a23(r125): [132..161]
 a24(r129): [132..151]
 a25(r133): [134..137]
 a26(r174): [134..135]
 a27(r132): [138..139]
 a28(r131): [140..141]
 a29(r173): [142..143]
 a30(r130): [142..145]
 a31(r171): [146..149]
 a32(r172): [146..147]
 a33(r128): [152..153]
 a34(r127): [154..157]
 a35(r170): [154..155]
 a36(r126): [158..159]
 a37(r124): [162..163]
 a38(r123): [164..167]
 a39(r169): [164..165]
 a40(r122): [168..169]
 a41(r120): [172..191]
 a42(r121): [176..179] [172..173]
 a43(r167): [174..175]
 a44(r117): [174..199]
 a45(r168): [176..177]
 a46(r166): [180..181]
 a47(r165): [180..183]
 a48(r163): [184..185]
 a49(r164): [186..189]
 a50(r190): [185..185]
 a51(r119): [192..195]
 a52(r162): [192..193]
 a53(r118): [196..197]
 a54(r161): [200..201]
 a55(r160): [200..203]
 a56(r159): [36..37]
 a57(r115): [40..61]
 a58(r116): [44..47] [40..41]
 a59(r157): [42..43]
 a60(r152): [42..59]
 a61(r158): [44..45]
 a62(r156): [48..49]
 a63(r155): [48..51]
 a64(r153): [52..53]
 a65(r154): [54..57]
 a66(r189): [53..53]
 a67(r114): [62..65]
 a68(r151): [62..63]
 a69(r113): [66..67]
 a70(r150): [209..210]
 a71(r143): [213..218]
 a72(r149): [215..216]
 a73(r148): [219..220]
 a74(r142): [227..234]
 a75(r147): [229..232]
 a76(r146): [235..236]
Compressing live ranges: from 243 to 108 - 44%
Ranges after the compression:
 a0(r145): [0..1]
 a1(r144): [2..3]
 a2(r187): [4..5]
 a3(r186): [6..7]
 a4(r185): [26..27]
 a5(r183): [28..29]
 a6(r184): [30..31]
 a7(r182): [32..33]
 a8(r180): [34..35]
 a9(r181): [36..37]
 a10(r179): [38..39]
 a11(r141): [40..41]
 a12(r140): [42..43]
 a13(r139): [44..45]
 a14(r178): [44..45]
 a15(r138): [46..47]
 a16(r137): [48..49]
 a17(r177): [50..51]
 a18(r136): [50..51]
 a19(r175): [52..53]
 a20(r176): [52..53]
 a21(r134): [54..57]
 a22(r135): [54..55]
 a23(r125): [56..73]
 a24(r129): [56..67]
 a25(r133): [58..59]
 a26(r174): [58..59]
 a27(r132): [60..61]
 a28(r131): [62..63]
 a29(r173): [64..65]
 a30(r130): [64..65]
 a31(r171): [66..67]
 a32(r172): [66..67]
 a33(r128): [68..69]
 a34(r127): [70..71]
 a35(r170): [70..71]
 a36(r126): [72..73]
 a37(r124): [74..75]
 a38(r123): [76..77]
 a39(r169): [76..77]
 a40(r122): [78..79]
 a41(r120): [80..91]
 a42(r121): [84..85] [80..81]
 a43(r167): [82..83]
 a44(r117): [82..95]
 a45(r168): [84..85]
 a46(r166): [86..87]
 a47(r165): [86..87]
 a48(r163): [88..89]
 a49(r164): [90..91]
 a50(r190): [89..89]
 a51(r119): [92..93]
 a52(r162): [92..93]
 a53(r118): [94..95]
 a54(r161): [96..97]
 a55(r160): [96..97]
 a56(r159): [8..9]
 a57(r115): [10..21]
 a58(r116): [14..15] [10..11]
 a59(r157): [12..13]
 a60(r152): [12..21]
 a61(r158): [14..15]
 a62(r156): [16..17]
 a63(r155): [16..17]
 a64(r153): [18..19]
 a65(r154): [20..21]
 a66(r189): [19..19]
 a67(r114): [22..23]
 a68(r151): [22..23]
 a69(r113): [24..25]
 a70(r150): [98..99]
 a71(r143): [100..101]
 a72(r149): [100..101]
 a73(r148): [102..103]
 a74(r142): [104..105]
 a75(r147): [104..105]
 a76(r146): [106..107]
  regions=1, blocks=13, points=108
    allocnos=77 (big 0), copies=0, conflicts=0, ranges=79
Disposition:
   69:r113 l0     3   67:r114 l0     3   57:r115 l0     1   58:r116 l0     3
   44:r117 l0     2   53:r118 l0     3   51:r119 l0     3   41:r120 l0     1
   42:r121 l0     3   40:r122 l0     3   38:r123 l0     3   37:r124 l0     3
   23:r125 l0     2   36:r126 l0     3   34:r127 l0     3   33:r128 l0     3
   24:r129 l0     1   30:r130 l0     0   28:r131 l0     3   27:r132 l0     3
   25:r133 l0     3   21:r134 l0     3   22:r135 l0     2   18:r136 l0     2
   16:r137 l0     3   15:r138 l0     3   13:r139 l0     3   12:r140 l0     3
   11:r141 l0     3   74:r142 l0     2   71:r143 l0     3    1:r144 l0     3
    0:r145 l0     3   76:r146 l0     3   75:r147 l0     3   73:r148 l0     3
   72:r149 l0     2   70:r150 l0     3   68:r151 l0     2   60:r152 l0     2
   64:r153 l0     3   65:r154 l0     3   63:r155 l0     0   62:r156 l0     3
   59:r157 l0     3   61:r158 l0     0   56:r159 l0     3   55:r160 l0     2
   54:r161 l0     3   52:r162 l0     1   48:r163 l0     3   49:r164 l0     3
   47:r165 l0     0   46:r166 l0     3   43:r167 l0     3   45:r168 l0     0
   39:r169 l0     2   35:r170 l0     1   31:r171 l0     3   32:r172 l0     0
   29:r173 l0     3   26:r174 l0     0   19:r175 l0     3   20:r176 l0     2
   17:r177 l0     3   14:r178 l0     2   10:r179 l0     3    8:r180 l0     3
    9:r181 l0     3    7:r182 l0     3    5:r183 l0     3    6:r184 l0     3
    4:r185 l0     3    3:r186 l0     3    2:r187 l0     3   66:r189 l0     0
   50:r190 l0     0
+++Costs: overall 10000, reg 10000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={8d,1u} r2={7d} r3={7d} r7={1d,12u} r12={12d} r13={1d,18u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,43u} r103={1d,11u} r104={6d} r105={6d} r106={6d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={2d,2u} r117={1d,3u,1e} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={2d,2u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={2d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,3u,1e} r153={1d,1u} r154={2d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={2d,2u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r189={1d} r190={1d} 
;;    total ref usage 792{605d,185u,2e} in 116{110 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znwj") [flags 0x41]  <function_decl 0x7f6da3dd3100 operator new>) [0 operator new S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:31 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg/f:SI 146)
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NOALIAS (reg/f:SI 146)
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 142 [ _38 ])
        (reg/f:SI 146)) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 146)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 147)
        (const_int 16960 [0x4240])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (zero_extract:SI (reg:SI 147)
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 15 [0xf])) "./understand-elf/matmul-v2.cpp":12:31 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1000000 [0xf4240])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 142 [ _38 ]) [2 MEM[(int *)_39]+0 S4 A32])
        (reg:SI 147)) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 147)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 matrix+0 S4 A64])
        (reg/f:SI 142 [ _38 ])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 142 [ _38 ])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 14 13 15 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znwj") [flags 0x41]  <function_decl 0x7f6da3dd3100 operator new>) [0 operator new S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:26 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 15 14 16 2 (set (reg/f:SI 148)
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NOALIAS (reg/f:SI 148)
            (nil))))
(insn 16 15 17 2 (set (reg/f:SI 143 [ _43 ])
        (reg/f:SI 148)) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 149)
        (const_int 1000 [0x3e8])) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 2 (set (mem:SI (reg/f:SI 143 [ _43 ]) [2 MEM[(int *)_44]+0 S4 A32])
        (reg:SI 149)) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 149)
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 vect+0 S4 A32])
        (reg/f:SI 143 [ _43 ])) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 143 [ _43 ])
        (nil)))
(insn 20 19 21 2 (set (reg:SI 150)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":14:13 740 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 149 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
        (reg:SI 150)) "./understand-elf/matmul-v2.cpp":14:13 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))
(jump_insn 149 21 150 2 (set (pc)
        (label_ref 114)) "./understand-elf/matmul-v2.cpp":14:5 284 {*arm_jump}
     (nil)
 -> 114)
(barrier 150 149 116)
(code_label 116 150 24 3 5 (nil) [1 uses])
(note 24 116 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:SI 113 [ i.0_1 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":15:14 740 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 3 (set (reg:SI 114 [ _2 ])
        (ashift:SI (reg:SI 113 [ i.0_1 ])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:15 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 113 [ i.0_1 ])
        (nil)))
(insn 27 26 28 3 (set (reg:SI 151)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":15:15 740 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 3 (set (reg/f:SI 115 [ _3 ])
        (plus:SI (reg:SI 151)
            (reg:SI 114 [ _2 ]))) "./understand-elf/matmul-v2.cpp":15:15 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
            (nil))))
(insn 29 28 30 3 (set (reg:SI 152)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 3 (set (reg:SI 154)
        (const_int 60495 [0xec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 3 (set (zero_extract:SI (reg:SI 154)
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20164 [0x4ec4])) "./understand-elf/matmul-v2.cpp":15:21 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1321528399 [0x4ec4ec4f])
        (nil)))
(insn 32 31 33 3 (parallel [
            (set (reg:SI 153)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 152))
                            (sign_extend:DI (reg:SI 154)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 189))
        ]) "./understand-elf/matmul-v2.cpp":15:21 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_UNUSED (reg:SI 189)
            (nil))))
(insn 33 32 34 3 (set (reg:SI 155)
        (ashiftrt:SI (reg:SI 153)
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 34 33 35 3 (set (reg:SI 156)
        (ashiftrt:SI (reg:SI 152)
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
(insn 35 34 36 3 (set (reg:SI 116 [ _4 ])
        (minus:SI (reg:SI 155)
            (reg:SI 156))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_DEAD (reg:SI 155)
            (expr_list:REG_EQUAL (div:SI (reg:SI 152)
                    (const_int 13 [0xd]))
                (nil)))))
(insn 36 35 37 3 (set (reg:SI 158)
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 3 (set (reg:SI 157)
        (mult:SI (reg:SI 158)
            (reg:SI 116 [ _4 ]))) "./understand-elf/matmul-v2.cpp":15:21 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 116 [ _4 ])
            (nil))))
(insn 38 37 39 3 (set (reg:SI 116 [ _4 ])
        (minus:SI (reg:SI 152)
            (reg:SI 157))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 152)
            (nil))))
(insn 39 38 40 3 (set (mem:SI (reg/f:SI 115 [ _3 ]) [2 *_3+0 S4 A32])
        (reg:SI 116 [ _4 ])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116 [ _4 ])
        (expr_list:REG_DEAD (reg/f:SI 115 [ _3 ])
            (nil))))
(insn 40 39 41 3 (set (reg:SI 159)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":16:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 151 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
        (reg:SI 159)) "./understand-elf/matmul-v2.cpp":16:17 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 159)
        (nil)))
(jump_insn 151 41 152 3 (set (pc)
        (label_ref 100)) "./understand-elf/matmul-v2.cpp":16:9 284 {*arm_jump}
     (nil)
 -> 100)
(barrier 152 151 102)
(code_label 102 152 44 4 4 (nil) [1 uses])
(note 44 102 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 4 (set (reg:SI 160)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":17:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 4 (set (reg:SI 161)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":17:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 4 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 160)
            (reg:SI 161))) "./understand-elf/matmul-v2.cpp":17:27 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_DEAD (reg:SI 160)
            (nil))))
(insn 48 47 49 4 (set (reg:SI 118 [ j.1_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":17:20 740 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 4 (set (reg:SI 119 [ _7 ])
        (ashift:SI (reg:SI 118 [ j.1_6 ])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":17:21 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 118 [ j.1_6 ])
        (nil)))
(insn 50 49 51 4 (set (reg:SI 162)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":17:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 4 (set (reg/f:SI 120 [ _8 ])
        (plus:SI (reg:SI 162)
            (reg:SI 119 [ _7 ]))) "./understand-elf/matmul-v2.cpp":17:21 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
            (nil))))
(insn 52 51 53 4 (set (reg:SI 164)
        (const_int 26215 [0x6667])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 4 (set (zero_extract:SI (reg:SI 164)
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 26214 [0x6666])) "./understand-elf/matmul-v2.cpp":17:30 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1717986919 [0x66666667])
        (nil)))
(insn 54 53 55 4 (parallel [
            (set (reg:SI 163)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 117 [ _5 ]))
                            (sign_extend:DI (reg:SI 164)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 190))
        ]) "./understand-elf/matmul-v2.cpp":17:30 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_UNUSED (reg:SI 190)
            (nil))))
(insn 55 54 56 4 (set (reg:SI 165)
        (ashiftrt:SI (reg:SI 163)
            (const_int 3 [0x3]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))
(insn 56 55 57 4 (set (reg:SI 166)
        (ashiftrt:SI (reg:SI 117 [ _5 ])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
(insn 57 56 58 4 (set (reg:SI 121 [ _9 ])
        (minus:SI (reg:SI 165)
            (reg:SI 166))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 165)
            (expr_list:REG_EQUAL (div:SI (reg:SI 117 [ _5 ])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 58 57 59 4 (set (reg:SI 168)
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 4 (set (reg:SI 167)
        (mult:SI (reg:SI 168)
            (reg:SI 121 [ _9 ]))) "./understand-elf/matmul-v2.cpp":17:30 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg:SI 121 [ _9 ])
            (nil))))
(insn 60 59 61 4 (set (reg:SI 121 [ _9 ])
        (minus:SI (reg:SI 117 [ _5 ])
            (reg:SI 167))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_DEAD (reg:SI 117 [ _5 ])
            (nil))))
(insn 61 60 62 4 (set (mem:SI (reg/f:SI 120 [ _8 ]) [2 *_8+0 S4 A32])
        (reg:SI 121 [ _9 ])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 121 [ _9 ])
        (expr_list:REG_DEAD (reg/f:SI 120 [ _8 ])
            (nil))))
(insn 62 61 63 4 (set (reg:SI 122 [ i.2_10 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 4 (set (reg:SI 123 [ _11 ])
        (ashift:SI (reg:SI 122 [ i.2_10 ])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:35 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 122 [ i.2_10 ])
        (nil)))
(insn 64 63 65 4 (set (reg:SI 169)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:35 740 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 4 (set (reg/f:SI 124 [ _12 ])
        (plus:SI (reg:SI 169)
            (reg:SI 123 [ _11 ]))) "./understand-elf/matmul-v2.cpp":18:35 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg:SI 123 [ _11 ])
            (nil))))
(insn 66 65 67 4 (set (reg:SI 125 [ _13 ])
        (mem:SI (reg/f:SI 124 [ _12 ]) [2 *_12+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:35 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 124 [ _12 ])
        (nil)))
(insn 67 66 68 4 (set (reg:SI 126 [ j.3_14 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:44 740 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 4 (set (reg:SI 127 [ _15 ])
        (ashift:SI (reg:SI 126 [ j.3_14 ])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:45 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 126 [ j.3_14 ])
        (nil)))
(insn 69 68 70 4 (set (reg:SI 170)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:45 740 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 4 (set (reg/f:SI 128 [ _16 ])
        (plus:SI (reg:SI 170)
            (reg:SI 127 [ _15 ]))) "./understand-elf/matmul-v2.cpp":18:45 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:SI 127 [ _15 ])
            (nil))))
(insn 71 70 72 4 (set (reg:SI 129 [ _17 ])
        (mem:SI (reg/f:SI 128 [ _16 ]) [2 *_16+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:45 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 128 [ _16 ])
        (nil)))
(insn 72 71 73 4 (set (reg:SI 171)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 4 (set (reg:SI 172)
        (const_int 1000 [0x3e8])) "./understand-elf/matmul-v2.cpp":18:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 75 4 (set (reg:SI 130 [ _18 ])
        (mult:SI (reg:SI 172)
            (reg:SI 171))) "./understand-elf/matmul-v2.cpp":18:21 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 171)
            (nil))))
(insn 75 74 76 4 (set (reg:SI 173)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 4 (set (reg:SI 131 [ _19 ])
        (plus:SI (reg:SI 130 [ _18 ])
            (reg:SI 173))) "./understand-elf/matmul-v2.cpp":18:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg:SI 130 [ _18 ])
            (nil))))
(insn 77 76 78 4 (set (reg:SI 132 [ _20 ])
        (reg:SI 131 [ _19 ])) "./understand-elf/matmul-v2.cpp":18:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 131 [ _19 ])
        (nil)))
(insn 78 77 79 4 (set (reg:SI 133 [ _21 ])
        (ashift:SI (reg:SI 132 [ _20 ])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:25 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 132 [ _20 ])
        (nil)))
(insn 79 78 80 4 (set (reg:SI 174)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:25 740 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 4 (set (reg/f:SI 134 [ _22 ])
        (plus:SI (reg:SI 174)
            (reg:SI 133 [ _21 ]))) "./understand-elf/matmul-v2.cpp":18:25 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg:SI 133 [ _21 ])
            (nil))))
(insn 81 80 82 4 (set (reg:SI 135 [ _23 ])
        (mult:SI (reg:SI 129 [ _17 ])
            (reg:SI 125 [ _13 ]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 129 [ _17 ])
        (expr_list:REG_DEAD (reg:SI 125 [ _13 ])
            (nil))))
(insn 82 81 83 4 (set (mem:SI (reg/f:SI 134 [ _22 ]) [2 *_22+0 S4 A32])
        (reg:SI 135 [ _23 ])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 135 [ _23 ])
        (expr_list:REG_DEAD (reg/f:SI 134 [ _22 ])
            (nil))))
(insn 83 82 84 4 (set (reg:SI 175)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":19:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 4 (set (reg:SI 176)
        (const_int 1000 [0x3e8])) "./understand-elf/matmul-v2.cpp":19:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 86 4 (set (reg:SI 136 [ _24 ])
        (mult:SI (reg:SI 176)
            (reg:SI 175))) "./understand-elf/matmul-v2.cpp":19:34 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg:SI 175)
            (nil))))
(insn 86 85 87 4 (set (reg:SI 177)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":19:36 740 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 88 4 (set (reg:SI 137 [ _25 ])
        (plus:SI (reg:SI 136 [ _24 ])
            (reg:SI 177))) "./understand-elf/matmul-v2.cpp":19:36 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_DEAD (reg:SI 136 [ _24 ])
            (nil))))
(insn 88 87 89 4 (set (reg:SI 138 [ _26 ])
        (reg:SI 137 [ _25 ])) "./understand-elf/matmul-v2.cpp":19:36 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 137 [ _25 ])
        (nil)))
(insn 89 88 90 4 (set (reg:SI 139 [ _27 ])
        (ashift:SI (reg:SI 138 [ _26 ])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":19:38 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 138 [ _26 ])
        (nil)))
(insn 90 89 91 4 (set (reg:SI 178)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":19:38 740 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 4 (set (reg/f:SI 140 [ _28 ])
        (plus:SI (reg:SI 178)
            (reg:SI 139 [ _27 ]))) "./understand-elf/matmul-v2.cpp":19:38 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 139 [ _27 ])
            (nil))))
(insn 92 91 93 4 (set (reg:SI 141 [ _29 ])
        (mem:SI (reg/f:SI 140 [ _28 ]) [2 *_28+0 S4 A32])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 140 [ _28 ])
        (nil)))
(insn 93 92 94 4 (set (reg:SI 1 r1)
        (reg:SI 141 [ _29 ])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 141 [ _29 ])
        (nil)))
(insn 94 93 95 4 (set (reg:SI 179)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f6da3b757e0 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "./understand-elf/matmul-v2.cpp":19:19 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f6da3b757e0 *.LC0>)
        (nil)))
(insn 95 94 96 4 (set (reg:SI 0 r0)
        (reg:SI 179)) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f6da3b757e0 *.LC0>)
            (nil))))
(call_insn 96 95 97 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x7f6da3cbdc00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":19:19 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 97 96 98 4 (set (reg:SI 181)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":16:9 740 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 4 (set (reg:SI 180)
        (plus:SI (reg:SI 181)
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:9 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 181)
        (nil)))
(insn 99 98 100 4 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
        (reg:SI 180)) "./understand-elf/matmul-v2.cpp":16:9 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 180)
        (nil)))
(code_label 100 99 101 5 3 (nil) [1 uses])
(note 101 100 105 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 105 101 106 5 (set (reg:SI 182)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":16:22 740 {*thumb2_movsi_vfp}
     (nil))
(insn 106 105 107 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 182)
            (const_int 1000 [0x3e8]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 182)
        (nil)))
(jump_insn 107 106 108 5 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 102)
(note 108 107 109 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 6 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) "./understand-elf/matmul-v2.cpp":21:15 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 110 109 111 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("putchar") [flags 0x41]  <function_decl 0x7f6da3cbdf00 __builtin_putchar>) [0 __builtin_putchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":21:15 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 111 110 112 6 (set (reg:SI 184)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":14:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 112 111 113 6 (set (reg:SI 183)
        (plus:SI (reg:SI 184)
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:5 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 184)
        (nil)))
(insn 113 112 114 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
        (reg:SI 183)) "./understand-elf/matmul-v2.cpp":14:5 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 183)
        (nil)))
(code_label 114 113 115 7 2 (nil) [1 uses])
(note 115 114 119 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 119 115 120 7 (set (reg:SI 185)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":14:18 740 {*thumb2_movsi_vfp}
     (nil))
(insn 120 119 121 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 185)
            (const_int 1000 [0x3e8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
(jump_insn 121 120 122 7 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 116)
(note 122 121 123 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 8 (set (reg:SI 186)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":23:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 125 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":23:5 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 186)
        (nil)))
(jump_insn 125 124 126 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "./understand-elf/matmul-v2.cpp":23:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 129)
(note 126 125 127 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 9 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 128 127 129 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f6da3dd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(code_label 129 128 130 10 6 (nil) [1 uses])
(note 130 129 131 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 10 (set (reg:SI 187)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":24:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 132 131 133 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 187)
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":24:5 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 187)
        (nil)))
(jump_insn 133 132 134 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "./understand-elf/matmul-v2.cpp":24:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 137)
(note 134 133 135 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 11 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 136 135 137 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f6da3dd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(code_label 137 136 138 12 7 (nil) [1 uses])
(note 138 137 139 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 142 12 (set (reg:SI 144 [ _50 ])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":25:12 740 {*thumb2_movsi_vfp}
     (nil))
(insn 142 139 146 12 (set (reg:SI 145 [ <retval> ])
        (reg:SI 144 [ _50 ])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 144 [ _50 ])
        (nil)))
(insn 146 142 147 12 (set (reg/i:SI 0 r0)
        (reg:SI 145 [ <retval> ])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 145 [ <retval> ])
        (nil)))
(insn 147 146 0 12 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))

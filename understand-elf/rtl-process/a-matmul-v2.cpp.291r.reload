
;; Function main (main, funcdef_no=0, decl_uid=6383, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) +r {*arm_movtas_ze}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 19:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 21:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) l  (1) l  (2) l {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) +r {*arm_movtas_ze}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =l  (1) %0  (2) l {*mul}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 39:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 41:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 48:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 52:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) +r {*arm_movtas_ze}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =l  (1) %0  (2) l {*mul}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 65
	 Choosing alt 0 in insn 65:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 70
	 Choosing alt 0 in insn 70:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 72:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 74
	 Choosing alt 0 in insn 74:  (0) =l  (1) %0  (2) l {*mul}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 76
	 Choosing alt 0 in insn 76:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 80
	 Choosing alt 0 in insn 80:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =l  (1) %0  (2) l {*mul}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 82:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 85
	 Choosing alt 0 in insn 85:  (0) =l  (1) %0  (2) l {*mul}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 87
	 Choosing alt 0 in insn 87:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 91
	 Choosing alt 0 in insn 91:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 92:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) mX {pic_load_addr_unified}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 98:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 99:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 105:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 106:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 111:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 112:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 113:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 120:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 123:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 127:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 135:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5 6
EBB 7 8 9
EBB 10 11
EBB 12

********** Pseudo live ranges #1: **********

  BB 12
   Insn 147: point = 0, n_alt = -1
   Insn 146: point = 0, n_alt = -2
   Insn 142: point = 1, n_alt = -2
   Insn 139: point = 3, n_alt = 1
  BB 11
   Insn 136: point = 4, n_alt = -1
   Insn 135: point = 4, n_alt = 5
  BB 10
   Insn 133: point = 4, n_alt = -1
   Insn 132: point = 4, n_alt = 0
   Insn 131: point = 5, n_alt = 5
  BB 9
   Insn 128: point = 6, n_alt = -1
   Insn 127: point = 6, n_alt = 5
  BB 8
   Insn 125: point = 6, n_alt = -1
   Insn 124: point = 6, n_alt = 0
   Insn 123: point = 7, n_alt = 5
  BB 7
   Insn 121: point = 8, n_alt = -1
   Insn 120: point = 8, n_alt = 3
   Insn 119: point = 9, n_alt = 5
  BB 2
   Insn 149: point = 10, n_alt = -1
   Insn 21: point = 10, n_alt = 7
   Insn 20: point = 11, n_alt = 1
   Insn 19: point = 12, n_alt = 7
   Insn 18: point = 13, n_alt = 7
   Insn 17: point = 14, n_alt = 1
   Insn 16: point = 15, n_alt = -2
   Insn 15: point = 17, n_alt = -2
   Insn 14: point = 18, n_alt = -1
   Insn 13: point = 18, n_alt = 1
   Insn 12: point = 18, n_alt = 7
   Insn 11: point = 19, n_alt = 7
   Insn 10: point = 20, n_alt = 0
   Insn 9: point = 21, n_alt = 4
   Insn 8: point = 22, n_alt = -2
   Insn 7: point = 24, n_alt = -2
   Insn 6: point = 25, n_alt = -1
   Insn 5: point = 25, n_alt = 1
  BB 6
   Insn 113: point = 25, n_alt = 7
   Insn 112: point = 26, n_alt = 2
   Insn 111: point = 28, n_alt = 5
   Insn 110: point = 29, n_alt = -1
   Insn 109: point = 29, n_alt = 1
  BB 5
   Insn 107: point = 29, n_alt = -1
   Insn 106: point = 29, n_alt = 3
   Insn 105: point = 30, n_alt = 5
  BB 3
   Insn 151: point = 31, n_alt = -1
   Insn 41: point = 31, n_alt = 7
   Insn 40: point = 32, n_alt = 1
   Insn 39: point = 33, n_alt = 7
   Insn 38: point = 34, n_alt = 0
   Insn 37: point = 36, n_alt = 0
   Insn 36: point = 38, n_alt = 1
   Insn 35: point = 39, n_alt = 0
   Insn 34: point = 41, n_alt = 1
   Insn 33: point = 42, n_alt = 1
   Insn 32: point = 44, n_alt = 0
   Insn 31: point = 46, n_alt = 0
   Insn 30: point = 47, n_alt = 4
   Insn 29: point = 48, n_alt = 5
   Insn 28: point = 49, n_alt = 1
   Insn 27: point = 51, n_alt = 5
   Insn 26: point = 52, n_alt = 1
   Insn 25: point = 54, n_alt = 5
  BB 4
   Insn 99: point = 55, n_alt = 7
   Insn 98: point = 56, n_alt = 2
   Insn 97: point = 58, n_alt = 5
   Insn 96: point = 59, n_alt = -1
   Insn 95: point = 59, n_alt = -2
   Insn 94: point = 60, n_alt = 1
   Insn 93: point = 61, n_alt = -2
   Insn 92: point = 62, n_alt = 5
   Insn 91: point = 64, n_alt = 0
   Insn 90: point = 66, n_alt = 5
   Insn 89: point = 67, n_alt = 1
   Insn 88: point = 69, n_alt = -2
   Insn 87: point = 71, n_alt = 0
   Insn 86: point = 73, n_alt = 5
   Insn 85: point = 74, n_alt = 0
   Insn 84: point = 76, n_alt = 1
   Insn 83: point = 77, n_alt = 5
   Insn 82: point = 78, n_alt = 7
   Insn 81: point = 79, n_alt = 0
   Insn 80: point = 81, n_alt = 0
   Insn 79: point = 83, n_alt = 5
   Insn 78: point = 84, n_alt = 1
   Insn 77: point = 86, n_alt = -2
   Insn 76: point = 88, n_alt = 0
   Insn 75: point = 90, n_alt = 5
   Insn 74: point = 91, n_alt = 0
   Insn 73: point = 93, n_alt = 1
   Insn 72: point = 94, n_alt = 5
   Insn 71: point = 95, n_alt = 5
   Insn 70: point = 97, n_alt = 0
   Insn 69: point = 99, n_alt = 5
   Insn 68: point = 100, n_alt = 1
   Insn 67: point = 102, n_alt = 5
   Insn 66: point = 103, n_alt = 5
   Insn 65: point = 105, n_alt = 0
   Insn 64: point = 107, n_alt = 5
   Insn 63: point = 108, n_alt = 1
   Insn 62: point = 110, n_alt = 5
   Insn 61: point = 111, n_alt = 7
   Insn 60: point = 112, n_alt = 0
   Insn 59: point = 114, n_alt = 0
   Insn 58: point = 116, n_alt = 1
   Insn 57: point = 117, n_alt = 0
   Insn 56: point = 119, n_alt = 1
   Insn 55: point = 120, n_alt = 1
   Insn 54: point = 122, n_alt = 0
   Insn 53: point = 124, n_alt = 0
   Insn 52: point = 125, n_alt = 4
   Insn 51: point = 126, n_alt = 0
   Insn 50: point = 128, n_alt = 5
   Insn 49: point = 129, n_alt = 1
   Insn 48: point = 131, n_alt = 5
   Insn 47: point = 132, n_alt = 0
   Insn 46: point = 134, n_alt = 5
   Insn 45: point = 135, n_alt = 5
 r113: [53..54]
 r114: [50..52]
 r115: [33..49]
 r116: [37..39] [33..34]
 r117: [113..132]
 r118: [130..131]
 r119: [127..129]
 r120: [111..126]
 r121: [115..117] [111..112]
 r122: [109..110]
 r123: [106..108]
 r124: [104..105]
 r125: [80..103]
 r126: [101..102]
 r127: [98..100]
 r128: [96..97]
 r129: [80..95]
 r130: [89..91]
 r131: [87..88]
 r132: [85..86]
 r133: [82..84]
 r134: [78..81]
 r135: [78..79]
 r136: [72..74]
 r137: [70..71]
 r138: [68..69]
 r139: [65..67]
 r140: [63..64]
 r141: [61..62]
 r142: [18..22]
 r143: [12..15]
 r144: [2..3]
 r145: [0..1]
 r146: [23..24]
 r147: [19..21]
 r148: [16..17]
 r149: [13..14]
 r150: [10..11]
 r151: [50..51]
 r152: [35..48]
 r153: [43..44]
 r154: [45..47]
 r155: [40..42]
 r156: [40..41]
 r157: [35..36]
 r158: [37..38]
 r159: [31..32]
 r160: [133..135]
 r161: [133..134]
 r162: [127..128]
 r163: [121..122]
 r164: [123..125]
 r165: [118..120]
 r166: [118..119]
 r167: [113..114]
 r168: [115..116]
 r169: [106..107]
 r170: [98..99]
 r171: [92..94]
 r172: [92..93]
 r173: [89..90]
 r174: [82..83]
 r175: [75..77]
 r176: [75..76]
 r177: [72..73]
 r178: [65..66]
 r179: [59..60]
 r180: [55..56]
 r181: [57..58]
 r182: [29..30]
 r183: [25..26]
 r184: [27..28]
 r185: [8..9]
 r186: [6..7]
 r187: [4..5]
 r189: [44..44]
 r190: [122..122]
Compressing live ranges: from 136 to 108 - 79%
Ranges after the compression:
 r113: [42..43]
 r114: [40..41]
 r115: [28..39]
 r116: [32..33] [28..29]
 r117: [92..105]
 r118: [104..105]
 r119: [102..103]
 r120: [90..101]
 r121: [94..95] [90..91]
 r122: [88..89]
 r123: [86..87]
 r124: [84..85]
 r125: [66..83]
 r126: [82..83]
 r127: [80..81]
 r128: [78..79]
 r129: [66..77]
 r130: [74..75]
 r131: [72..73]
 r132: [70..71]
 r133: [68..69]
 r134: [64..67]
 r135: [64..65]
 r136: [60..61]
 r137: [58..59]
 r138: [56..57]
 r139: [54..55]
 r140: [52..53]
 r141: [50..51]
 r142: [16..17]
 r143: [12..13]
 r144: [2..3]
 r145: [0..1]
 r146: [18..19]
 r147: [16..17]
 r148: [14..15]
 r149: [12..13]
 r150: [10..11]
 r151: [40..41]
 r152: [30..39]
 r153: [36..37]
 r154: [38..39]
 r155: [34..35]
 r156: [34..35]
 r157: [30..31]
 r158: [32..33]
 r159: [26..27]
 r160: [106..107]
 r161: [106..107]
 r162: [102..103]
 r163: [98..99]
 r164: [100..101]
 r165: [96..97]
 r166: [96..97]
 r167: [92..93]
 r168: [94..95]
 r169: [86..87]
 r170: [80..81]
 r171: [76..77]
 r172: [76..77]
 r173: [74..75]
 r174: [68..69]
 r175: [62..63]
 r176: [62..63]
 r177: [60..61]
 r178: [54..55]
 r179: [48..49]
 r180: [44..45]
 r181: [46..47]
 r182: [24..25]
 r183: [20..21]
 r184: [22..23]
 r185: [8..9]
 r186: [6..7]
 r187: [4..5]
 r189: [37..37]
 r190: [99..99]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 28
changing reg in insn 28
changing reg in insn 39
changing reg in insn 38
changing reg in insn 35
changing reg in insn 39
changing reg in insn 37
changing reg in insn 47
changing reg in insn 54
changing reg in insn 60
changing reg in insn 56
changing reg in insn 57
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 51
changing reg in insn 51
changing reg in insn 61
changing reg in insn 60
changing reg in insn 57
changing reg in insn 61
changing reg in insn 59
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 81
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 81
changing reg in insn 74
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 80
changing reg in insn 82
changing reg in insn 81
changing reg in insn 82
changing reg in insn 85
changing reg in insn 87
changing reg in insn 88
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 93
changing reg in insn 8
changing reg in insn 12
changing reg in insn 11
changing reg in insn 16
changing reg in insn 19
changing reg in insn 18
changing reg in insn 139
changing reg in insn 142
changing reg in insn 142
changing reg in insn 146
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 38
changing reg in insn 34
changing reg in insn 35
changing reg in insn 32
changing reg in insn 33
changing reg in insn 31
changing reg in insn 30
changing reg in insn 32
changing reg in insn 31
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 38
changing reg in insn 36
changing reg in insn 37
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 47
changing reg in insn 46
changing reg in insn 47
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 55
changing reg in insn 53
changing reg in insn 52
changing reg in insn 54
changing reg in insn 53
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 58
changing reg in insn 59
changing reg in insn 64
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 75
changing reg in insn 79
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 90
changing reg in insn 94
changing reg in insn 95
changing reg in insn 98
changing reg in insn 99
changing reg in insn 97
changing reg in insn 98
changing reg in insn 105
changing reg in insn 106
changing reg in insn 112
changing reg in insn 113
changing reg in insn 111
changing reg in insn 112
changing reg in insn 119
changing reg in insn 120
changing reg in insn 123
changing reg in insn 124
changing reg in insn 131
changing reg in insn 132
changing reg in insn 32
changing reg in insn 54
deleting insn with uid = 16.
deleting insn with uid = 77.
deleting insn with uid = 88.
deleting insn with uid = 142.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 136.


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={23d,17u} r1={13d,6u} r2={19d,17u,2e} r3={59d,53u} r7={1d,43u} r12={12d} r13={1d,18u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={10d,4u} r101={6d} r102={1d,1u} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 761{600d,159u,2e} in 112{106 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znwj") [flags 0x41]  <function_decl 0x7f6da3dd3100 operator new>) [0 operator new S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:31 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [146])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (expr_list:REG_NOALIAS (reg/f:SI 3 r3 [146])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 2 r2 [orig:142 _38 ] [142])
        (reg/f:SI 3 r3 [146])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [147])
        (const_int 16960 [0x4240])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (zero_extract:SI (reg:SI 3 r3 [147])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 15 [0xf])) "./understand-elf/matmul-v2.cpp":12:31 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1000000 [0xf4240])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 2 r2 [orig:142 _38 ] [142]) [2 MEM[(int *)_39]+0 S4 A32])
        (reg:SI 3 r3 [147])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])
        (reg/f:SI 2 r2 [orig:142 _38 ] [142])) "./understand-elf/matmul-v2.cpp":12:31 740 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 14 13 15 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znwj") [flags 0x41]  <function_decl 0x7f6da3dd3100 operator new>) [0 operator new S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:26 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 15 14 17 2 (set (reg/f:SI 3 r3 [148])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (expr_list:REG_NOALIAS (reg/f:SI 3 r3 [148])
        (nil)))
(insn 17 15 18 2 (set (reg:SI 2 r2 [149])
        (const_int 1000 [0x3e8])) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 2 (set (mem:SI (reg/f:SI 3 r3 [orig:143 _43 ] [143]) [2 MEM[(int *)_44]+0 S4 A32])
        (reg:SI 2 r2 [149])) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])
        (reg/f:SI 3 r3 [orig:143 _43 ] [143])) "./understand-elf/matmul-v2.cpp":13:26 740 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg:SI 3 r3 [150])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":14:13 740 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 149 2 (set (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])
        (reg:SI 3 r3 [150])) "./understand-elf/matmul-v2.cpp":14:13 740 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 149 21 150 2 (set (pc)
        (label_ref 114)) "./understand-elf/matmul-v2.cpp":14:5 284 {*arm_jump}
     (nil)
 -> 114)
(barrier 150 149 116)
(code_label 116 150 24 3 5 (nil) [1 uses])
(note 24 116 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:SI 3 r3 [orig:113 i.0_1 ] [113])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":15:14 740 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (ashift:SI (reg:SI 3 r3 [orig:113 i.0_1 ] [113])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:15 147 {*arm_shiftsi3}
     (nil))
(insn 27 26 28 3 (set (reg:SI 2 r2 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":15:15 740 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 3 (set (reg/f:SI 1 r1 [orig:115 _3 ] [115])
        (plus:SI (reg:SI 2 r2 [151])
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "./understand-elf/matmul-v2.cpp":15:15 7 {*arm_addsi3}
     (nil))
(insn 29 28 30 3 (set (reg:SI 2 r2 [152])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 3 (set (reg:SI 3 r3 [154])
        (const_int 60495 [0xec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 3 (set (zero_extract:SI (reg:SI 3 r3 [154])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20164 [0x4ec4])) "./understand-elf/matmul-v2.cpp":15:21 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1321528399 [0x4ec4ec4f])
        (nil)))
(insn 32 31 33 3 (parallel [
            (set (reg:SI 3 r3 [153])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2 r2 [152]))
                            (sign_extend:DI (reg:SI 3 r3 [154])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [189]))
        ]) "./understand-elf/matmul-v2.cpp":15:21 71 {*smull_high}
     (nil))
(insn 33 32 34 3 (set (reg:SI 0 r0 [155])
        (ashiftrt:SI (reg:SI 3 r3 [153])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
(insn 34 33 35 3 (set (reg:SI 3 r3 [156])
        (ashiftrt:SI (reg:SI 2 r2 [152])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
(insn 35 34 36 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (minus:SI (reg:SI 0 r0 [155])
            (reg:SI 3 r3 [156]))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [152])
            (const_int 13 [0xd]))
        (nil)))
(insn 36 35 37 3 (set (reg:SI 0 r0 [158])
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 3 (set (reg:SI 3 r3 [157])
        (mult:SI (reg:SI 0 r0 [158])
            (reg:SI 3 r3 [orig:116 _4 ] [116]))) "./understand-elf/matmul-v2.cpp":15:21 56 {*mul}
     (nil))
(insn 38 37 39 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (minus:SI (reg:SI 2 r2 [152])
            (reg:SI 3 r3 [157]))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (nil))
(insn 39 38 40 3 (set (mem:SI (reg/f:SI 1 r1 [orig:115 _3 ] [115]) [2 *_3+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 3 (set (reg:SI 3 r3 [159])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":16:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 151 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])
        (reg:SI 3 r3 [159])) "./understand-elf/matmul-v2.cpp":16:17 740 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 151 41 152 3 (set (pc)
        (label_ref 100)) "./understand-elf/matmul-v2.cpp":16:9 284 {*arm_jump}
     (nil)
 -> 100)
(barrier 152 151 102)
(code_label 102 152 44 4 4 (nil) [1 uses])
(note 44 102 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 4 (set (reg:SI 2 r2 [160])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":17:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 4 (set (reg:SI 3 r3 [161])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":17:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 4 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (plus:SI (reg:SI 2 r2 [160])
            (reg:SI 3 r3 [161]))) "./understand-elf/matmul-v2.cpp":17:27 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 4 (set (reg:SI 3 r3 [orig:118 j.1_6 ] [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":17:20 740 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 4 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 3 r3 [orig:118 j.1_6 ] [118])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":17:21 147 {*arm_shiftsi3}
     (nil))
(insn 50 49 51 4 (set (reg:SI 1 r1 [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":17:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 4 (set (reg/f:SI 1 r1 [orig:120 _8 ] [120])
        (plus:SI (reg:SI 1 r1 [162])
            (reg:SI 3 r3 [orig:119 _7 ] [119]))) "./understand-elf/matmul-v2.cpp":17:21 7 {*arm_addsi3}
     (nil))
(insn 52 51 53 4 (set (reg:SI 3 r3 [164])
        (const_int 26215 [0x6667])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 4 (set (zero_extract:SI (reg:SI 3 r3 [164])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 26214 [0x6666])) "./understand-elf/matmul-v2.cpp":17:30 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1717986919 [0x66666667])
        (nil)))
(insn 54 53 55 4 (parallel [
            (set (reg:SI 3 r3 [163])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2 r2 [orig:117 _5 ] [117]))
                            (sign_extend:DI (reg:SI 3 r3 [164])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [190]))
        ]) "./understand-elf/matmul-v2.cpp":17:30 71 {*smull_high}
     (nil))
(insn 55 54 56 4 (set (reg:SI 0 r0 [165])
        (ashiftrt:SI (reg:SI 3 r3 [163])
            (const_int 3 [0x3]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
(insn 56 55 57 4 (set (reg:SI 3 r3 [166])
        (ashiftrt:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
(insn 57 56 58 4 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (minus:SI (reg:SI 0 r0 [165])
            (reg:SI 3 r3 [166]))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (const_int 20 [0x14]))
        (nil)))
(insn 58 57 59 4 (set (reg:SI 0 r0 [168])
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 4 (set (reg:SI 3 r3 [167])
        (mult:SI (reg:SI 0 r0 [168])
            (reg:SI 3 r3 [orig:121 _9 ] [121]))) "./understand-elf/matmul-v2.cpp":17:30 56 {*mul}
     (nil))
(insn 60 59 61 4 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (minus:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (reg:SI 3 r3 [167]))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (nil))
(insn 61 60 62 4 (set (mem:SI (reg/f:SI 1 r1 [orig:120 _8 ] [120]) [2 *_8+0 S4 A32])
        (reg:SI 3 r3 [orig:121 _9 ] [121])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 4 (set (reg:SI 3 r3 [orig:122 i.2_10 ] [122])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 4 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (ashift:SI (reg:SI 3 r3 [orig:122 i.2_10 ] [122])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:35 147 {*arm_shiftsi3}
     (nil))
(insn 64 63 65 4 (set (reg:SI 2 r2 [169])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:35 740 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 4 (set (reg/f:SI 3 r3 [orig:124 _12 ] [124])
        (plus:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (reg:SI 2 r2 [169]))) "./understand-elf/matmul-v2.cpp":18:35 7 {*arm_addsi3}
     (nil))
(insn 66 65 67 4 (set (reg:SI 2 r2 [orig:125 _13 ] [125])
        (mem:SI (reg/f:SI 3 r3 [orig:124 _12 ] [124]) [2 *_12+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:35 740 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 4 (set (reg:SI 3 r3 [orig:126 j.3_14 ] [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:44 740 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 4 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (ashift:SI (reg:SI 3 r3 [orig:126 j.3_14 ] [126])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:45 147 {*arm_shiftsi3}
     (nil))
(insn 69 68 70 4 (set (reg:SI 1 r1 [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:45 740 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 4 (set (reg/f:SI 3 r3 [orig:128 _16 ] [128])
        (plus:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (reg:SI 1 r1 [170]))) "./understand-elf/matmul-v2.cpp":18:45 7 {*arm_addsi3}
     (nil))
(insn 71 70 72 4 (set (reg:SI 1 r1 [orig:129 _17 ] [129])
        (mem:SI (reg/f:SI 3 r3 [orig:128 _16 ] [128]) [2 *_16+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:45 740 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 4 (set (reg:SI 3 r3 [171])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 4 (set (reg:SI 0 r0 [172])
        (const_int 1000 [0x3e8])) "./understand-elf/matmul-v2.cpp":18:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 75 4 (set (reg:SI 0 r0 [orig:130 _18 ] [130])
        (mult:SI (reg:SI 3 r3 [171])
            (reg:SI 0 r0 [172]))) "./understand-elf/matmul-v2.cpp":18:21 56 {*mul}
     (nil))
(insn 75 74 76 4 (set (reg:SI 3 r3 [173])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 78 4 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (plus:SI (reg:SI 3 r3 [173])
            (reg:SI 0 r0 [orig:130 _18 ] [130]))) "./understand-elf/matmul-v2.cpp":18:23 7 {*arm_addsi3}
     (nil))
(insn 78 76 79 4 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (ashift:SI (reg:SI 3 r3 [orig:132 _20 ] [132])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:25 147 {*arm_shiftsi3}
     (nil))
(insn 79 78 80 4 (set (reg:SI 0 r0 [174])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:25 740 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 4 (set (reg/f:SI 3 r3 [orig:134 _22 ] [134])
        (plus:SI (reg:SI 3 r3 [orig:133 _21 ] [133])
            (reg:SI 0 r0 [174]))) "./understand-elf/matmul-v2.cpp":18:25 7 {*arm_addsi3}
     (nil))
(insn 81 80 82 4 (set (reg:SI 2 r2 [orig:135 _23 ] [135])
        (mult:SI (reg:SI 1 r1 [orig:129 _17 ] [129])
            (reg:SI 2 r2 [orig:125 _13 ] [125]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (nil))
(insn 82 81 83 4 (set (mem:SI (reg/f:SI 3 r3 [orig:134 _22 ] [134]) [2 *_22+0 S4 A32])
        (reg:SI 2 r2 [orig:135 _23 ] [135])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 4 (set (reg:SI 3 r3 [175])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":19:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 4 (set (reg:SI 2 r2 [176])
        (const_int 1000 [0x3e8])) "./understand-elf/matmul-v2.cpp":19:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 86 4 (set (reg:SI 2 r2 [orig:136 _24 ] [136])
        (mult:SI (reg:SI 3 r3 [175])
            (reg:SI 2 r2 [176]))) "./understand-elf/matmul-v2.cpp":19:34 56 {*mul}
     (nil))
(insn 86 85 87 4 (set (reg:SI 3 r3 [177])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":19:36 740 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 89 4 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (plus:SI (reg:SI 3 r3 [177])
            (reg:SI 2 r2 [orig:136 _24 ] [136]))) "./understand-elf/matmul-v2.cpp":19:36 7 {*arm_addsi3}
     (nil))
(insn 89 87 90 4 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (ashift:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":19:38 147 {*arm_shiftsi3}
     (nil))
(insn 90 89 91 4 (set (reg:SI 2 r2 [178])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":19:38 740 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 4 (set (reg/f:SI 3 r3 [orig:140 _28 ] [140])
        (plus:SI (reg:SI 3 r3 [orig:139 _27 ] [139])
            (reg:SI 2 r2 [178]))) "./understand-elf/matmul-v2.cpp":19:38 7 {*arm_addsi3}
     (nil))
(insn 92 91 93 4 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (mem:SI (reg/f:SI 3 r3 [orig:140 _28 ] [140]) [2 *_28+0 S4 A32])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (nil))
(insn 93 92 94 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:141 _29 ] [141])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (nil))
(insn 94 93 95 4 (set (reg:SI 3 r3 [179])
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f6da3b757e0 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "./understand-elf/matmul-v2.cpp":19:19 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f6da3b757e0 *.LC0>)
        (nil)))
(insn 95 94 96 4 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [179])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f6da3b757e0 *.LC0>)
        (nil)))
(call_insn 96 95 97 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x7f6da3cbdc00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":19:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 97 96 98 4 (set (reg:SI 3 r3 [181])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":16:9 740 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 4 (set (reg:SI 3 r3 [180])
        (plus:SI (reg:SI 3 r3 [181])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:9 7 {*arm_addsi3}
     (nil))
(insn 99 98 100 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])
        (reg:SI 3 r3 [180])) "./understand-elf/matmul-v2.cpp":16:9 740 {*thumb2_movsi_vfp}
     (nil))
(code_label 100 99 101 5 3 (nil) [1 uses])
(note 101 100 105 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 105 101 106 5 (set (reg:SI 3 r3 [182])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":16:22 740 {*thumb2_movsi_vfp}
     (nil))
(insn 106 105 107 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [182])
            (const_int 1000 [0x3e8]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 107 106 108 5 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (nil)
 -> 102)
(note 108 107 109 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 6 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) "./understand-elf/matmul-v2.cpp":21:15 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 110 109 111 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("putchar") [flags 0x41]  <function_decl 0x7f6da3cbdf00 __builtin_putchar>) [0 __builtin_putchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":21:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 111 110 112 6 (set (reg:SI 3 r3 [184])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":14:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 112 111 113 6 (set (reg:SI 3 r3 [183])
        (plus:SI (reg:SI 3 r3 [184])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:5 7 {*arm_addsi3}
     (nil))
(insn 113 112 114 6 (set (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])
        (reg:SI 3 r3 [183])) "./understand-elf/matmul-v2.cpp":14:5 740 {*thumb2_movsi_vfp}
     (nil))
(code_label 114 113 115 7 2 (nil) [1 uses])
(note 115 114 119 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 119 115 120 7 (set (reg:SI 3 r3 [185])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":14:18 740 {*thumb2_movsi_vfp}
     (nil))
(insn 120 119 121 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [185])
            (const_int 1000 [0x3e8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 121 120 122 7 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (nil)
 -> 116)
(note 122 121 123 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 8 (set (reg:SI 3 r3 [186])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":23:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 125 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [186])
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":23:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 125 124 126 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "./understand-elf/matmul-v2.cpp":23:5 273 {arm_cond_branch}
     (nil)
 -> 129)
(note 126 125 127 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 9 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 128 127 129 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f6da3dd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(code_label 129 128 130 10 6 (nil) [1 uses])
(note 130 129 131 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 10 (set (reg:SI 3 r3 [187])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":24:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 132 131 133 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [187])
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":24:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 133 132 134 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "./understand-elf/matmul-v2.cpp":24:5 273 {arm_cond_branch}
     (nil)
 -> 137)
(note 134 133 135 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 11 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 136 135 137 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f6da3dd3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(code_label 137 136 138 12 7 (nil) [1 uses])
(note 138 137 139 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 146 12 (set (reg:SI 3 r3 [orig:144 _50 ] [144])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":25:12 740 {*thumb2_movsi_vfp}
     (nil))
(insn 146 139 147 12 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:145 <retval> ] [145])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (nil))
(insn 147 146 156 12 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))
(note 156 147 0 NOTE_INSN_DELETED)

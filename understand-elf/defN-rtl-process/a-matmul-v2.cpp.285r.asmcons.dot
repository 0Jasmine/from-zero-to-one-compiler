digraph "a-matmul-v2.cpp.285r.asmcons" {
overlap=false;
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_0_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_0_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ \ 3:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ \ 2:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 5:\ r0:SI=0x9c40\l\
|\ \ \ \ 6:\ r0:SI=call\ [`_Znaj']\ argc:0\l\
|\ \ \ \ 7:\ r152:SI=r0:SI\l\
\ \ \ \ \ \ REG_NOALIAS\ r152:SI\l\
|\ \ \ \ 8:\ r146:SI=r152:SI\l\
|\ \ \ \ 9:\ r142:SI=r146:SI\l\
|\ \ \ 10:\ r143:SI=0x270f\l\
|\ \ 180:\ pc=L18\l\
}"];

	fn_0_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 18:\ L18:\l\
|\ \ \ 19:\ NOTE_INSN_BASIC_BLOCK\ 4\l\
|\ \ \ 23:\ cc:CC=cmp(r143:SI,0)\l\
|\ \ \ 24:\ pc=\{(cc:CC\>=0)?L20:pc\}\l\
}"];

	fn_0_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 25:\ NOTE_INSN_BASIC_BLOCK\ 5\l\
|\ \ \ 27:\ [sfp:SI-0x8]=r146:SI\l\
|\ \ \ 28:\ r0:SI=0x190\l\
|\ \ \ 29:\ r0:SI=call\ [`_Znaj']\ argc:0\l\
|\ \ \ 30:\ r154:SI=r0:SI\l\
\ \ \ \ \ \ REG_NOALIAS\ r154:SI\l\
|\ \ \ 31:\ r148:SI=r154:SI\l\
|\ \ \ 32:\ r144:SI=r148:SI\l\
|\ \ \ 33:\ r145:SI=0x63\l\
|\ \ 182:\ pc=L41\l\
}"];

	fn_0_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 41:\ L41:\l\
|\ \ \ 42:\ NOTE_INSN_BASIC_BLOCK\ 7\l\
|\ \ \ 46:\ cc:CC=cmp(r145:SI,0)\l\
|\ \ \ 47:\ pc=\{(cc:CC\>=0)?L43:pc\}\l\
}"];

	fn_0_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 48:\ NOTE_INSN_BASIC_BLOCK\ 8\l\
|\ \ \ 50:\ [sfp:SI-0x4]=r148:SI\l\
|\ \ \ 51:\ r156:SI=0\l\
|\ \ \ 52:\ [sfp:SI-0x10]=r156:SI\l\
|\ \ 184:\ pc=L145\l\
}"];

	fn_0_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 145:\ L145:\l\
|\ \ 146:\ NOTE_INSN_BASIC_BLOCK\ 13\l\
|\ \ 150:\ r191:SI=[sfp:SI-0x10]\l\
|\ \ 151:\ cc:CC=cmp(r191:SI,0x63)\l\
|\ \ 152:\ pc=\{(cc:CC\<=0)?L147:pc\}\l\
}"];

	fn_0_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 153:\ NOTE_INSN_BASIC_BLOCK\ 14\l\
|\ \ 154:\ r192:SI=[sfp:SI-0x8]\l\
|\ \ 155:\ cc:CC=cmp(r192:SI,0)\l\
|\ \ 156:\ pc=\{(cc:CC==0)?L160:pc\}\l\
}"];

	fn_0_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 157:\ NOTE_INSN_BASIC_BLOCK\ 15\l\
|\ \ 158:\ r0:SI=[sfp:SI-0x8]\l\
|\ \ 159:\ call\ [`_ZdaPv']\ argc:0\l\
\ \ \ \ \ \ REG_EH_REGION\ 0\l\
}"];

	fn_0_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 160:\ L160:\l\
|\ \ 161:\ NOTE_INSN_BASIC_BLOCK\ 16\l\
|\ \ 162:\ r193:SI=[sfp:SI-0x4]\l\
|\ \ 163:\ cc:CC=cmp(r193:SI,0)\l\
|\ \ 164:\ pc=\{(cc:CC==0)?L168:pc\}\l\
}"];

	fn_0_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 165:\ NOTE_INSN_BASIC_BLOCK\ 17\l\
|\ \ 166:\ r0:SI=[sfp:SI-0x4]\l\
|\ \ 167:\ call\ [`_ZdaPv']\ argc:0\l\
\ \ \ \ \ \ REG_EH_REGION\ 0\l\
}"];

	fn_0_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 168:\ L168:\l\
|\ \ 169:\ NOTE_INSN_BASIC_BLOCK\ 18\l\
|\ \ 170:\ r150:SI=0\l\
|\ \ 173:\ r151:SI=r150:SI\l\
|\ \ 177:\ r0:SI=r151:SI\l\
|\ \ 178:\ use\ r0:SI\l\
}"];

	fn_0_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 147:\ L147:\l\
|\ \ \ 55:\ NOTE_INSN_BASIC_BLOCK\ 9\l\
|\ \ \ 56:\ r113:SI=[sfp:SI-0x10]\l\
|\ \ \ 57:\ r114:SI=r113:SI\<\<0x2\l\
|\ \ \ 58:\ r157:SI=[sfp:SI-0x4]\l\
|\ \ \ 59:\ r115:SI=r157:SI+r114:SI\l\
|\ \ \ 60:\ r158:SI=[sfp:SI-0x10]\l\
|\ \ \ 61:\ r160:SI=0xec4f\l\
|\ \ \ 62:\ zero_extract(r160:SI,0x10,0x10)=0x4ec4\l\
\ \ \ \ \ \ REG_EQUAL\ 0x4ec4ec4f\l\
|\ \ \ 63:\ \{r159:SI=trunc(sign_extend(r158:SI)*sign_extend(r160:SI)\ 0\>\>0x20);clobber\ scratch;\}\l\
|\ \ \ 64:\ r161:SI=r159:SI\>\>0x2\l\
|\ \ \ 65:\ r162:SI=r158:SI\>\>0x1f\l\
|\ \ \ 66:\ r116:SI=r161:SI-r162:SI\l\
\ \ \ \ \ \ REG_EQUAL\ r158:SI/0xd\l\
|\ \ \ 67:\ r164:SI=0xd\l\
|\ \ \ 68:\ r163:SI=r164:SI*r116:SI\l\
|\ \ \ 69:\ r116:SI=r158:SI-r163:SI\l\
|\ \ \ 70:\ [r115:SI]=r116:SI\l\
|\ \ \ 71:\ r165:SI=0\l\
|\ \ \ 72:\ [sfp:SI-0xc]=r165:SI\l\
|\ \ 186:\ pc=L131\l\
}"];

	fn_0_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 131:\ L131:\l\
|\ \ 132:\ NOTE_INSN_BASIC_BLOCK\ 11\l\
|\ \ 136:\ r188:SI=[sfp:SI-0xc]\l\
|\ \ 137:\ cc:CC=cmp(r188:SI,0x63)\l\
|\ \ 138:\ pc=\{(cc:CC\<=0)?L133:pc\}\l\
}"];

	fn_0_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 139:\ NOTE_INSN_BASIC_BLOCK\ 12\l\
|\ \ 140:\ r0:SI=0xa\l\
|\ \ 141:\ r0:SI=call\ [`putchar']\ argc:0\l\
|\ \ 142:\ r190:SI=[sfp:SI-0x10]\l\
|\ \ 143:\ r189:SI=r190:SI+0x1\l\
|\ \ 144:\ [sfp:SI-0x10]=r189:SI\l\
}"];

	fn_0_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ 133:\ L133:\l\
|\ \ \ 75:\ NOTE_INSN_BASIC_BLOCK\ 10\l\
|\ \ \ 76:\ r166:SI=[sfp:SI-0x10]\l\
|\ \ \ 77:\ r167:SI=[sfp:SI-0xc]\l\
|\ \ \ 78:\ r117:SI=r166:SI+r167:SI\l\
|\ \ \ 79:\ r118:SI=[sfp:SI-0xc]\l\
|\ \ \ 80:\ r119:SI=r118:SI\<\<0x2\l\
|\ \ \ 81:\ r168:SI=[sfp:SI-0x8]\l\
|\ \ \ 82:\ r120:SI=r168:SI+r119:SI\l\
|\ \ \ 83:\ r170:SI=0x6667\l\
|\ \ \ 84:\ zero_extract(r170:SI,0x10,0x10)=0x6666\l\
\ \ \ \ \ \ REG_EQUAL\ 0x66666667\l\
|\ \ \ 85:\ \{r169:SI=trunc(sign_extend(r117:SI)*sign_extend(r170:SI)\ 0\>\>0x20);clobber\ scratch;\}\l\
|\ \ \ 86:\ r171:SI=r169:SI\>\>0x3\l\
|\ \ \ 87:\ r172:SI=r117:SI\>\>0x1f\l\
|\ \ \ 88:\ r121:SI=r171:SI-r172:SI\l\
\ \ \ \ \ \ REG_EQUAL\ r117:SI/0x14\l\
|\ \ \ 89:\ r174:SI=0x14\l\
|\ \ \ 90:\ r173:SI=r174:SI*r121:SI\l\
|\ \ \ 91:\ r121:SI=r117:SI-r173:SI\l\
|\ \ \ 92:\ [r120:SI]=r121:SI\l\
|\ \ \ 93:\ r122:SI=[sfp:SI-0x10]\l\
|\ \ \ 94:\ r123:SI=r122:SI\<\<0x2\l\
|\ \ \ 95:\ r175:SI=[sfp:SI-0x4]\l\
|\ \ \ 96:\ r124:SI=r175:SI+r123:SI\l\
|\ \ \ 97:\ r125:SI=[r124:SI]\l\
|\ \ \ 98:\ r126:SI=[sfp:SI-0xc]\l\
|\ \ \ 99:\ r127:SI=r126:SI\<\<0x2\l\
|\ \ 100:\ r176:SI=[sfp:SI-0x8]\l\
|\ \ 101:\ r128:SI=r176:SI+r127:SI\l\
|\ \ 102:\ r129:SI=[r128:SI]\l\
|\ \ 103:\ r177:SI=[sfp:SI-0x10]\l\
|\ \ 104:\ r178:SI=0x64\l\
|\ \ 105:\ r130:SI=r178:SI*r177:SI\l\
|\ \ 106:\ r179:SI=[sfp:SI-0xc]\l\
|\ \ 107:\ r131:SI=r130:SI+r179:SI\l\
|\ \ 108:\ r132:SI=r131:SI\l\
|\ \ 109:\ r133:SI=r132:SI\<\<0x2\l\
|\ \ 110:\ r180:SI=[sfp:SI-0x8]\l\
|\ \ 111:\ r134:SI=r180:SI+r133:SI\l\
|\ \ 112:\ r135:SI=r129:SI*r125:SI\l\
|\ \ 113:\ [r134:SI]=r135:SI\l\
|\ \ 114:\ r181:SI=[sfp:SI-0x10]\l\
|\ \ 115:\ r182:SI=0x64\l\
|\ \ 116:\ r136:SI=r182:SI*r181:SI\l\
|\ \ 117:\ r183:SI=[sfp:SI-0xc]\l\
|\ \ 118:\ r137:SI=r136:SI+r183:SI\l\
|\ \ 119:\ r138:SI=r137:SI\l\
|\ \ 120:\ r139:SI=r138:SI\<\<0x2\l\
|\ \ 121:\ r184:SI=[sfp:SI-0x8]\l\
|\ \ 122:\ r140:SI=r184:SI+r139:SI\l\
|\ \ 123:\ r141:SI=[r140:SI]\l\
|\ \ 124:\ r1:SI=r141:SI\l\
|\ \ 125:\ r185:SI=unspec[const(unspec[`*.LC0',const(unspec[0]\ 18+0x4)]\ 23),0]\ 27\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC0'\l\
|\ \ 126:\ r0:SI=r185:SI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC0'\l\
|\ \ 127:\ r0:SI=call\ [`printf']\ argc:0\l\
|\ \ 128:\ r187:SI=[sfp:SI-0xc]\l\
|\ \ 129:\ r186:SI=r187:SI+0x1\l\
|\ \ 130:\ [sfp:SI-0xc]=r186:SI\l\
}"];

	fn_0_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 43:\ L43:\l\
|\ \ \ 36:\ NOTE_INSN_BASIC_BLOCK\ 6\l\
|\ \ \ 37:\ r155:SI=0\l\
|\ \ \ 38:\ [r144:SI]=r155:SI\l\
|\ \ \ 39:\ r144:SI=r144:SI+0x4\l\
|\ \ \ 40:\ r145:SI=r145:SI-0x1\l\
}"];

	fn_0_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\ \ \ 20:\ L20:\l\
|\ \ \ 13:\ NOTE_INSN_BASIC_BLOCK\ 3\l\
|\ \ \ 14:\ r153:SI=0\l\
|\ \ \ 15:\ [r142:SI]=r153:SI\l\
|\ \ \ 16:\ r142:SI=r142:SI+0x4\l\
|\ \ \ 17:\ r143:SI=r143:SI-0x1\l\
}"];

	fn_0_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_0_basic_block_0:s -> fn_0_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_2:s -> fn_0_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_0_basic_block_3:s -> fn_0_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_0_basic_block_4:s -> fn_0_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_0_basic_block_4:s -> fn_0_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_5:s -> fn_0_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_0_basic_block_6:s -> fn_0_basic_block_7:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_0_basic_block_7:s -> fn_0_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_0_basic_block_7:s -> fn_0_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_8:s -> fn_0_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_0_basic_block_9:s -> fn_0_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_0_basic_block_10:s -> fn_0_basic_block_11:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_0_basic_block_11:s -> fn_0_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_0_basic_block_11:s -> fn_0_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_12:s -> fn_0_basic_block_13:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_0_basic_block_13:s -> fn_0_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_0_basic_block_13:s -> fn_0_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_14:s -> fn_0_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_14:s -> fn_0_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_0_basic_block_15:s -> fn_0_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_16:s -> fn_0_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_16:s -> fn_0_basic_block_18:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_0_basic_block_17:s -> fn_0_basic_block_18:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_18:s -> fn_0_basic_block_1:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_0_basic_block_0:s -> fn_0_basic_block_1:n [style="invis",constraint=true];
}
}

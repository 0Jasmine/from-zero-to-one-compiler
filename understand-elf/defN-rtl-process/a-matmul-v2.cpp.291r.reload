
;; Function main (main, funcdef_no=0, decl_uid=6383, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) j {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 10:  (0) r  (1) j {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 16:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 17:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 27:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 38:  (0) m  (1) l {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 39:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 40:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 50:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 52:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) l  (1) l  (2) l {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 61:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) +r {*arm_movtas_ze}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =l  (1) %0  (2) l {*mul}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 83:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) +r {*arm_movtas_ze}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =l  (1) %0  (2) l {*mul}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 92:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 93:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 96
	 Choosing alt 0 in insn 96:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 100:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 101
	 Choosing alt 0 in insn 101:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 102:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 103:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 105
	 Choosing alt 0 in insn 105:  (0) =l  (1) %0  (2) l {*mul}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 106:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 107
	 Choosing alt 0 in insn 107:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 111
	 Choosing alt 0 in insn 111:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =l  (1) %0  (2) l {*mul}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 113:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 116
	 Choosing alt 0 in insn 116:  (0) =l  (1) %0  (2) l {*mul}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 117:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 118
	 Choosing alt 0 in insn 118:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 121:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 122
	 Choosing alt 0 in insn 122:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 123:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) r  (1) mX {pic_load_addr_unified}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 128:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 129:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 130:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 142:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 143:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 144:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 154:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 158:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 162:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 166:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 170:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6
EBB 7 8
EBB 9
EBB 10
EBB 11 12
EBB 13 14 15
EBB 16 17
EBB 18

********** Pseudo live ranges #1: **********

  BB 18
   Insn 178: point = 0, n_alt = -1
   Insn 177: point = 0, n_alt = -2
   Insn 173: point = 1, n_alt = -2
   Insn 170: point = 3, n_alt = 1
  BB 17
   Insn 167: point = 4, n_alt = -1
   Insn 166: point = 4, n_alt = 5
  BB 16
   Insn 164: point = 4, n_alt = -1
   Insn 163: point = 4, n_alt = 0
   Insn 162: point = 5, n_alt = 5
  BB 15
   Insn 159: point = 6, n_alt = -1
   Insn 158: point = 6, n_alt = 5
  BB 14
   Insn 156: point = 6, n_alt = -1
   Insn 155: point = 6, n_alt = 0
   Insn 154: point = 7, n_alt = 5
  BB 13
   Insn 152: point = 8, n_alt = -1
   Insn 151: point = 8, n_alt = 0
   Insn 150: point = 9, n_alt = 5
  BB 8
   Insn 184: point = 10, n_alt = -1
   Insn 52: point = 10, n_alt = 7
   Insn 51: point = 11, n_alt = 1
   Insn 50: point = 12, n_alt = 7
  BB 7
   Insn 47: point = 14, n_alt = -1
   Insn 46: point = 14, n_alt = 0
  BB 5
   Insn 182: point = 15, n_alt = -1
   Insn 33: point = 15, n_alt = 1
   Insn 32: point = 16, n_alt = -2
   Insn 31: point = 17, n_alt = -2
   Insn 30: point = 19, n_alt = -2
   Insn 29: point = 20, n_alt = -1
   Insn 28: point = 20, n_alt = 1
   Insn 27: point = 20, n_alt = 7
  BB 4
   Insn 24: point = 22, n_alt = -1
   Insn 23: point = 22, n_alt = 0
  BB 2
   Insn 180: point = 23, n_alt = -1
   Insn 10: point = 23, n_alt = 4
   Insn 9: point = 24, n_alt = -2
   Insn 8: point = 25, n_alt = -2
   Insn 7: point = 27, n_alt = -2
   Insn 6: point = 28, n_alt = -1
   Insn 5: point = 28, n_alt = 4
  BB 3
   Insn 17: point = 28, n_alt = 4
   Insn 16: point = 29, n_alt = 2
   Insn 15: point = 30, n_alt = 7
   Insn 14: point = 31, n_alt = 1
  BB 6
   Insn 40: point = 33, n_alt = 4
   Insn 39: point = 34, n_alt = 2
   Insn 38: point = 35, n_alt = 7
   Insn 37: point = 36, n_alt = 1
  BB 12
   Insn 144: point = 38, n_alt = 7
   Insn 143: point = 39, n_alt = 2
   Insn 142: point = 41, n_alt = 5
   Insn 141: point = 42, n_alt = -1
   Insn 140: point = 42, n_alt = 1
  BB 11
   Insn 138: point = 42, n_alt = -1
   Insn 137: point = 42, n_alt = 0
   Insn 136: point = 43, n_alt = 5
  BB 9
   Insn 186: point = 44, n_alt = -1
   Insn 72: point = 44, n_alt = 7
   Insn 71: point = 45, n_alt = 1
   Insn 70: point = 46, n_alt = 7
   Insn 69: point = 47, n_alt = 0
   Insn 68: point = 49, n_alt = 0
   Insn 67: point = 51, n_alt = 1
   Insn 66: point = 52, n_alt = 0
   Insn 65: point = 54, n_alt = 1
   Insn 64: point = 55, n_alt = 1
   Insn 63: point = 57, n_alt = 0
   Insn 62: point = 59, n_alt = 0
   Insn 61: point = 60, n_alt = 4
   Insn 60: point = 61, n_alt = 5
   Insn 59: point = 62, n_alt = 1
   Insn 58: point = 64, n_alt = 5
   Insn 57: point = 65, n_alt = 1
   Insn 56: point = 67, n_alt = 5
  BB 10
   Insn 130: point = 68, n_alt = 7
   Insn 129: point = 69, n_alt = 2
   Insn 128: point = 71, n_alt = 5
   Insn 127: point = 72, n_alt = -1
   Insn 126: point = 72, n_alt = -2
   Insn 125: point = 73, n_alt = 1
   Insn 124: point = 74, n_alt = -2
   Insn 123: point = 75, n_alt = 5
   Insn 122: point = 77, n_alt = 0
   Insn 121: point = 79, n_alt = 5
   Insn 120: point = 80, n_alt = 1
   Insn 119: point = 82, n_alt = -2
   Insn 118: point = 84, n_alt = 0
   Insn 117: point = 86, n_alt = 5
   Insn 116: point = 87, n_alt = 0
   Insn 115: point = 89, n_alt = 1
   Insn 114: point = 90, n_alt = 5
   Insn 113: point = 91, n_alt = 7
   Insn 112: point = 92, n_alt = 0
   Insn 111: point = 94, n_alt = 0
   Insn 110: point = 96, n_alt = 5
   Insn 109: point = 97, n_alt = 1
   Insn 108: point = 99, n_alt = -2
   Insn 107: point = 101, n_alt = 0
   Insn 106: point = 103, n_alt = 5
   Insn 105: point = 104, n_alt = 0
   Insn 104: point = 106, n_alt = 1
   Insn 103: point = 107, n_alt = 5
   Insn 102: point = 108, n_alt = 5
   Insn 101: point = 110, n_alt = 0
   Insn 100: point = 112, n_alt = 5
   Insn 99: point = 113, n_alt = 1
   Insn 98: point = 115, n_alt = 5
   Insn 97: point = 116, n_alt = 5
   Insn 96: point = 118, n_alt = 0
   Insn 95: point = 120, n_alt = 5
   Insn 94: point = 121, n_alt = 1
   Insn 93: point = 123, n_alt = 5
   Insn 92: point = 124, n_alt = 7
   Insn 91: point = 125, n_alt = 0
   Insn 90: point = 127, n_alt = 0
   Insn 89: point = 129, n_alt = 1
   Insn 88: point = 130, n_alt = 0
   Insn 87: point = 132, n_alt = 1
   Insn 86: point = 133, n_alt = 1
   Insn 85: point = 135, n_alt = 0
   Insn 84: point = 137, n_alt = 0
   Insn 83: point = 138, n_alt = 4
   Insn 82: point = 139, n_alt = 0
   Insn 81: point = 141, n_alt = 5
   Insn 80: point = 142, n_alt = 1
   Insn 79: point = 144, n_alt = 5
   Insn 78: point = 145, n_alt = 0
   Insn 77: point = 147, n_alt = 5
   Insn 76: point = 148, n_alt = 5
 r113: [66..67]
 r114: [63..65]
 r115: [46..62]
 r116: [50..52] [46..47]
 r117: [126..145]
 r118: [143..144]
 r119: [140..142]
 r120: [124..139]
 r121: [128..130] [124..125]
 r122: [122..123]
 r123: [119..121]
 r124: [117..118]
 r125: [93..116]
 r126: [114..115]
 r127: [111..113]
 r128: [109..110]
 r129: [93..108]
 r130: [102..104]
 r131: [100..101]
 r132: [98..99]
 r133: [95..97]
 r134: [91..94]
 r135: [91..92]
 r136: [85..87]
 r137: [83..84]
 r138: [81..82]
 r139: [78..80]
 r140: [76..77]
 r141: [74..75]
 r142: [28..32] [22..24]
 r143: [28..32] [22..23]
 r144: [33..37] [14..16]
 r145: [33..37] [14..15]
 r146: [28..32] [20..25]
 r148: [33..37] [12..17]
 r150: [2..3]
 r151: [0..1]
 r152: [26..27]
 r153: [30..31]
 r154: [18..19]
 r155: [35..36]
 r156: [10..11]
 r157: [63..64]
 r158: [48..61]
 r159: [56..57]
 r160: [58..60]
 r161: [53..55]
 r162: [53..54]
 r163: [48..49]
 r164: [50..51]
 r165: [44..45]
 r166: [146..148]
 r167: [146..147]
 r168: [140..141]
 r169: [134..135]
 r170: [136..138]
 r171: [131..133]
 r172: [131..132]
 r173: [126..127]
 r174: [128..129]
 r175: [119..120]
 r176: [111..112]
 r177: [105..107]
 r178: [105..106]
 r179: [102..103]
 r180: [95..96]
 r181: [88..90]
 r182: [88..89]
 r183: [85..86]
 r184: [78..79]
 r185: [72..73]
 r186: [68..69]
 r187: [70..71]
 r188: [42..43]
 r189: [38..39]
 r190: [40..41]
 r191: [8..9]
 r192: [6..7]
 r193: [4..5]
 r195: [57..57]
 r196: [135..135]
Compressing live ranges: from 149 to 112 - 75%
Ranges after the compression:
 r113: [46..47]
 r114: [44..45]
 r115: [32..43]
 r116: [36..37] [32..33]
 r117: [96..109]
 r118: [108..109]
 r119: [106..107]
 r120: [94..105]
 r121: [98..99] [94..95]
 r122: [92..93]
 r123: [90..91]
 r124: [88..89]
 r125: [70..87]
 r126: [86..87]
 r127: [84..85]
 r128: [82..83]
 r129: [70..81]
 r130: [78..79]
 r131: [76..77]
 r132: [74..75]
 r133: [72..73]
 r134: [68..71]
 r135: [68..69]
 r136: [64..65]
 r137: [62..63]
 r138: [60..61]
 r139: [58..59]
 r140: [56..57]
 r141: [54..55]
 r142: [20..21] [16..17]
 r143: [20..21] [16..17]
 r144: [22..23] [12..13]
 r145: [22..23] [12..13]
 r146: [20..21] [16..17]
 r148: [22..23] [12..13]
 r150: [2..3]
 r151: [0..1]
 r152: [18..19]
 r153: [20..21]
 r154: [14..15]
 r155: [22..23]
 r156: [10..11]
 r157: [44..45]
 r158: [34..43]
 r159: [40..41]
 r160: [42..43]
 r161: [38..39]
 r162: [38..39]
 r163: [34..35]
 r164: [36..37]
 r165: [30..31]
 r166: [110..111]
 r167: [110..111]
 r168: [106..107]
 r169: [102..103]
 r170: [104..105]
 r171: [100..101]
 r172: [100..101]
 r173: [96..97]
 r174: [98..99]
 r175: [90..91]
 r176: [84..85]
 r177: [80..81]
 r178: [80..81]
 r179: [78..79]
 r180: [72..73]
 r181: [66..67]
 r182: [66..67]
 r183: [64..65]
 r184: [58..59]
 r185: [52..53]
 r186: [48..49]
 r187: [50..51]
 r188: [28..29]
 r189: [24..25]
 r190: [26..27]
 r191: [8..9]
 r192: [6..7]
 r193: [4..5]
 r195: [41..41]
 r196: [103..103]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 59
changing reg in insn 59
changing reg in insn 70
changing reg in insn 69
changing reg in insn 66
changing reg in insn 70
changing reg in insn 68
changing reg in insn 78
changing reg in insn 85
changing reg in insn 91
changing reg in insn 87
changing reg in insn 88
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 82
changing reg in insn 92
changing reg in insn 91
changing reg in insn 88
changing reg in insn 92
changing reg in insn 90
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 112
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 112
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 111
changing reg in insn 113
changing reg in insn 112
changing reg in insn 113
changing reg in insn 116
changing reg in insn 118
changing reg in insn 119
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 124
changing reg in insn 16
changing reg in insn 9
changing reg in insn 16
changing reg in insn 15
changing reg in insn 17
changing reg in insn 10
changing reg in insn 23
changing reg in insn 17
changing reg in insn 39
changing reg in insn 32
changing reg in insn 39
changing reg in insn 38
changing reg in insn 40
changing reg in insn 33
changing reg in insn 46
changing reg in insn 40
changing reg in insn 8
changing reg in insn 27
changing reg in insn 9
changing reg in insn 31
changing reg in insn 50
changing reg in insn 32
changing reg in insn 170
changing reg in insn 173
changing reg in insn 173
changing reg in insn 177
changing reg in insn 7
changing reg in insn 8
changing reg in insn 14
changing reg in insn 15
changing reg in insn 30
changing reg in insn 31
changing reg in insn 37
changing reg in insn 38
changing reg in insn 51
changing reg in insn 52
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 63
changing reg in insn 69
changing reg in insn 65
changing reg in insn 66
changing reg in insn 63
changing reg in insn 64
changing reg in insn 62
changing reg in insn 61
changing reg in insn 63
changing reg in insn 62
changing reg in insn 64
changing reg in insn 66
changing reg in insn 65
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 67
changing reg in insn 68
changing reg in insn 71
changing reg in insn 72
changing reg in insn 76
changing reg in insn 78
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 82
changing reg in insn 85
changing reg in insn 86
changing reg in insn 84
changing reg in insn 83
changing reg in insn 85
changing reg in insn 84
changing reg in insn 86
changing reg in insn 88
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 91
changing reg in insn 89
changing reg in insn 90
changing reg in insn 95
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 106
changing reg in insn 110
changing reg in insn 114
changing reg in insn 115
changing reg in insn 117
changing reg in insn 121
changing reg in insn 125
changing reg in insn 126
changing reg in insn 129
changing reg in insn 130
changing reg in insn 128
changing reg in insn 129
changing reg in insn 136
changing reg in insn 137
changing reg in insn 143
changing reg in insn 144
changing reg in insn 142
changing reg in insn 143
changing reg in insn 150
changing reg in insn 151
changing reg in insn 154
changing reg in insn 155
changing reg in insn 162
changing reg in insn 163
changing reg in insn 63
changing reg in insn 85
deleting insn with uid = 108.
deleting insn with uid = 119.
deleting insn with uid = 173.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 159.
verify found no changes in insn with uid = 167.


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={25d,21u} r1={15d,8u} r2={21d,18u,2e} r3={61d,54u} r7={1d,49u} r12={12d} r13={1d,24u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={12d,6u} r101={6d} r102={1d,1u} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 793{610d,181u,2e} in 126{120 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (const_int 40000 [0x9c40])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f5e973d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:33 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [152])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_NOALIAS (reg/f:SI 3 r3 [152])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 r0 [orig:146 _44 ] [146])
        (reg/f:SI 3 r3 [152])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 2 r2 [orig:142 _30 ] [142])
        (reg/f:SI 0 r0 [orig:146 _44 ] [146])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 180 2 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (const_int 9999 [0x270f])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 180 10 181 2 (set (pc)
        (label_ref 18)) "./understand-elf/matmul-v2.cpp":12:33 284 {*arm_jump}
     (nil)
 -> 18)
(barrier 181 180 20)
(code_label 20 181 13 3 3 (nil) [1 uses])
(note 13 20 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 1 r1 [153])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 3 (set (mem:SI (reg/f:SI 2 r2 [orig:142 _30 ] [142]) [2 *_30+0 S4 A32])
        (reg:SI 1 r1 [153])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 2 r2 [orig:142 _30 ] [142])
        (plus:SI (reg/f:SI 2 r2 [orig:142 _30 ] [142])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":12:33 7 {*arm_addsi3}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (plus:SI (reg:SI 3 r3 [orig:143 _31 ] [143])
            (const_int -1 [0xffffffffffffffff]))) "./understand-elf/matmul-v2.cpp":12:33 7 {*arm_addsi3}
     (nil))
(code_label 18 17 19 4 2 (nil) [1 uses])
(note 19 18 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 19 24 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:143 _31 ] [143])
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":12:33 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "./understand-elf/matmul-v2.cpp":12:33 273 {arm_cond_branch}
     (nil)
 -> 20)
(note 25 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 25 28 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])
        (reg/f:SI 0 r0 [orig:146 _44 ] [146])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 5 (set (reg:SI 0 r0)
        (const_int 400 [0x190])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 29 28 30 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f5e973d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:28 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 30 29 31 5 (set (reg/f:SI 3 r3 [154])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_NOALIAS (reg/f:SI 3 r3 [154])
        (nil)))
(insn 31 30 32 5 (set (reg/f:SI 0 r0 [orig:148 _52 ] [148])
        (reg/f:SI 3 r3 [154])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 5 (set (reg/f:SI 2 r2 [orig:144 _32 ] [144])
        (reg/f:SI 0 r0 [orig:148 _52 ] [148])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 182 5 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (const_int 99 [0x63])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 182 33 183 5 (set (pc)
        (label_ref 41)) "./understand-elf/matmul-v2.cpp":13:28 284 {*arm_jump}
     (nil)
 -> 41)
(barrier 183 182 43)
(code_label 43 183 36 6 5 (nil) [1 uses])
(note 36 43 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg:SI 1 r1 [155])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 6 (set (mem:SI (reg/f:SI 2 r2 [orig:144 _32 ] [144]) [2 *_32+0 S4 A32])
        (reg:SI 1 r1 [155])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 2 r2 [orig:144 _32 ] [144])
        (plus:SI (reg/f:SI 2 r2 [orig:144 _32 ] [144])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":13:28 7 {*arm_addsi3}
     (nil))
(insn 40 39 41 6 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (plus:SI (reg:SI 3 r3 [orig:145 _33 ] [145])
            (const_int -1 [0xffffffffffffffff]))) "./understand-elf/matmul-v2.cpp":13:28 7 {*arm_addsi3}
     (nil))
(code_label 41 40 42 7 4 (nil) [1 uses])
(note 42 41 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 42 47 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:145 _33 ] [145])
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":13:28 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "./understand-elf/matmul-v2.cpp":13:28 273 {arm_cond_branch}
     (nil)
 -> 43)
(note 48 47 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 48 51 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])
        (reg/f:SI 0 r0 [orig:148 _52 ] [148])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 8 (set (reg:SI 3 r3 [156])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":14:13 740 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 184 8 (set (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])
        (reg:SI 3 r3 [156])) "./understand-elf/matmul-v2.cpp":14:13 740 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 184 52 185 8 (set (pc)
        (label_ref 145)) "./understand-elf/matmul-v2.cpp":14:5 284 {*arm_jump}
     (nil)
 -> 145)
(barrier 185 184 147)
(code_label 147 185 55 9 9 (nil) [1 uses])
(note 55 147 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg:SI 3 r3 [orig:113 i.2_1 ] [113])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":15:14 740 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 9 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (ashift:SI (reg:SI 3 r3 [orig:113 i.2_1 ] [113])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:15 147 {*arm_shiftsi3}
     (nil))
(insn 58 57 59 9 (set (reg:SI 2 r2 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":15:15 740 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 9 (set (reg/f:SI 1 r1 [orig:115 _3 ] [115])
        (plus:SI (reg:SI 2 r2 [157])
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "./understand-elf/matmul-v2.cpp":15:15 7 {*arm_addsi3}
     (nil))
(insn 60 59 61 9 (set (reg:SI 2 r2 [158])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 9 (set (reg:SI 3 r3 [160])
        (const_int 60495 [0xec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 9 (set (zero_extract:SI (reg:SI 3 r3 [160])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20164 [0x4ec4])) "./understand-elf/matmul-v2.cpp":15:21 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1321528399 [0x4ec4ec4f])
        (nil)))
(insn 63 62 64 9 (parallel [
            (set (reg:SI 3 r3 [159])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2 r2 [158]))
                            (sign_extend:DI (reg:SI 3 r3 [160])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [195]))
        ]) "./understand-elf/matmul-v2.cpp":15:21 71 {*smull_high}
     (nil))
(insn 64 63 65 9 (set (reg:SI 0 r0 [161])
        (ashiftrt:SI (reg:SI 3 r3 [159])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
(insn 65 64 66 9 (set (reg:SI 3 r3 [162])
        (ashiftrt:SI (reg:SI 2 r2 [158])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (nil))
(insn 66 65 67 9 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (minus:SI (reg:SI 0 r0 [161])
            (reg:SI 3 r3 [162]))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [158])
            (const_int 13 [0xd]))
        (nil)))
(insn 67 66 68 9 (set (reg:SI 0 r0 [164])
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 9 (set (reg:SI 3 r3 [163])
        (mult:SI (reg:SI 0 r0 [164])
            (reg:SI 3 r3 [orig:116 _4 ] [116]))) "./understand-elf/matmul-v2.cpp":15:21 56 {*mul}
     (nil))
(insn 69 68 70 9 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (minus:SI (reg:SI 2 r2 [158])
            (reg:SI 3 r3 [163]))) "./understand-elf/matmul-v2.cpp":15:21 45 {*arm_subsi3_insn}
     (nil))
(insn 70 69 71 9 (set (mem:SI (reg/f:SI 1 r1 [orig:115 _3 ] [115]) [2 *_3+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 9 (set (reg:SI 3 r3 [165])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":16:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 186 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])
        (reg:SI 3 r3 [165])) "./understand-elf/matmul-v2.cpp":16:17 740 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 186 72 187 9 (set (pc)
        (label_ref 131)) "./understand-elf/matmul-v2.cpp":16:9 284 {*arm_jump}
     (nil)
 -> 131)
(barrier 187 186 133)
(code_label 133 187 75 10 8 (nil) [1 uses])
(note 75 133 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (set (reg:SI 2 r2 [166])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":17:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 10 (set (reg:SI 3 r3 [167])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":17:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 10 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (plus:SI (reg:SI 2 r2 [166])
            (reg:SI 3 r3 [167]))) "./understand-elf/matmul-v2.cpp":17:27 7 {*arm_addsi3}
     (nil))
(insn 79 78 80 10 (set (reg:SI 3 r3 [orig:118 j.3_6 ] [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":17:20 740 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 10 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 3 r3 [orig:118 j.3_6 ] [118])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":17:21 147 {*arm_shiftsi3}
     (nil))
(insn 81 80 82 10 (set (reg:SI 1 r1 [168])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":17:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 82 81 83 10 (set (reg/f:SI 1 r1 [orig:120 _8 ] [120])
        (plus:SI (reg:SI 1 r1 [168])
            (reg:SI 3 r3 [orig:119 _7 ] [119]))) "./understand-elf/matmul-v2.cpp":17:21 7 {*arm_addsi3}
     (nil))
(insn 83 82 84 10 (set (reg:SI 3 r3 [170])
        (const_int 26215 [0x6667])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 10 (set (zero_extract:SI (reg:SI 3 r3 [170])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 26214 [0x6666])) "./understand-elf/matmul-v2.cpp":17:30 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1717986919 [0x66666667])
        (nil)))
(insn 85 84 86 10 (parallel [
            (set (reg:SI 3 r3 [169])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2 r2 [orig:117 _5 ] [117]))
                            (sign_extend:DI (reg:SI 3 r3 [170])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [196]))
        ]) "./understand-elf/matmul-v2.cpp":17:30 71 {*smull_high}
     (nil))
(insn 86 85 87 10 (set (reg:SI 0 r0 [171])
        (ashiftrt:SI (reg:SI 3 r3 [169])
            (const_int 3 [0x3]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
(insn 87 86 88 10 (set (reg:SI 3 r3 [172])
        (ashiftrt:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (const_int 31 [0x1f]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (nil))
(insn 88 87 89 10 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (minus:SI (reg:SI 0 r0 [171])
            (reg:SI 3 r3 [172]))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (const_int 20 [0x14]))
        (nil)))
(insn 89 88 90 10 (set (reg:SI 0 r0 [174])
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 10 (set (reg:SI 3 r3 [173])
        (mult:SI (reg:SI 0 r0 [174])
            (reg:SI 3 r3 [orig:121 _9 ] [121]))) "./understand-elf/matmul-v2.cpp":17:30 56 {*mul}
     (nil))
(insn 91 90 92 10 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (minus:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (reg:SI 3 r3 [173]))) "./understand-elf/matmul-v2.cpp":17:30 45 {*arm_subsi3_insn}
     (nil))
(insn 92 91 93 10 (set (mem:SI (reg/f:SI 1 r1 [orig:120 _8 ] [120]) [2 *_8+0 S4 A32])
        (reg:SI 3 r3 [orig:121 _9 ] [121])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 93 92 94 10 (set (reg:SI 3 r3 [orig:122 i.4_10 ] [122])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 94 93 95 10 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (ashift:SI (reg:SI 3 r3 [orig:122 i.4_10 ] [122])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:35 147 {*arm_shiftsi3}
     (nil))
(insn 95 94 96 10 (set (reg:SI 2 r2 [175])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:35 740 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 10 (set (reg/f:SI 3 r3 [orig:124 _12 ] [124])
        (plus:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (reg:SI 2 r2 [175]))) "./understand-elf/matmul-v2.cpp":18:35 7 {*arm_addsi3}
     (nil))
(insn 97 96 98 10 (set (reg:SI 2 r2 [orig:125 _13 ] [125])
        (mem:SI (reg/f:SI 3 r3 [orig:124 _12 ] [124]) [2 *_12+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:35 740 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 10 (set (reg:SI 3 r3 [orig:126 j.5_14 ] [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:44 740 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 100 10 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (ashift:SI (reg:SI 3 r3 [orig:126 j.5_14 ] [126])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:45 147 {*arm_shiftsi3}
     (nil))
(insn 100 99 101 10 (set (reg:SI 1 r1 [176])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:45 740 {*thumb2_movsi_vfp}
     (nil))
(insn 101 100 102 10 (set (reg/f:SI 3 r3 [orig:128 _16 ] [128])
        (plus:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (reg:SI 1 r1 [176]))) "./understand-elf/matmul-v2.cpp":18:45 7 {*arm_addsi3}
     (nil))
(insn 102 101 103 10 (set (reg:SI 1 r1 [orig:129 _17 ] [129])
        (mem:SI (reg/f:SI 3 r3 [orig:128 _16 ] [128]) [2 *_16+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:45 740 {*thumb2_movsi_vfp}
     (nil))
(insn 103 102 104 10 (set (reg:SI 3 r3 [177])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 104 103 105 10 (set (reg:SI 0 r0 [178])
        (const_int 100 [0x64])) "./understand-elf/matmul-v2.cpp":18:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 105 104 106 10 (set (reg:SI 0 r0 [orig:130 _18 ] [130])
        (mult:SI (reg:SI 3 r3 [177])
            (reg:SI 0 r0 [178]))) "./understand-elf/matmul-v2.cpp":18:21 56 {*mul}
     (nil))
(insn 106 105 107 10 (set (reg:SI 3 r3 [179])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":18:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 107 106 109 10 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (plus:SI (reg:SI 3 r3 [179])
            (reg:SI 0 r0 [orig:130 _18 ] [130]))) "./understand-elf/matmul-v2.cpp":18:23 7 {*arm_addsi3}
     (nil))
(insn 109 107 110 10 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (ashift:SI (reg:SI 3 r3 [orig:132 _20 ] [132])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":18:25 147 {*arm_shiftsi3}
     (nil))
(insn 110 109 111 10 (set (reg:SI 0 r0 [180])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":18:25 740 {*thumb2_movsi_vfp}
     (nil))
(insn 111 110 112 10 (set (reg/f:SI 3 r3 [orig:134 _22 ] [134])
        (plus:SI (reg:SI 3 r3 [orig:133 _21 ] [133])
            (reg:SI 0 r0 [180]))) "./understand-elf/matmul-v2.cpp":18:25 7 {*arm_addsi3}
     (nil))
(insn 112 111 113 10 (set (reg:SI 2 r2 [orig:135 _23 ] [135])
        (mult:SI (reg:SI 1 r1 [orig:129 _17 ] [129])
            (reg:SI 2 r2 [orig:125 _13 ] [125]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (nil))
(insn 113 112 114 10 (set (mem:SI (reg/f:SI 3 r3 [orig:134 _22 ] [134]) [2 *_22+0 S4 A32])
        (reg:SI 2 r2 [orig:135 _23 ] [135])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (nil))
(insn 114 113 115 10 (set (reg:SI 3 r3 [181])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":19:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 115 114 116 10 (set (reg:SI 2 r2 [182])
        (const_int 100 [0x64])) "./understand-elf/matmul-v2.cpp":19:34 740 {*thumb2_movsi_vfp}
     (nil))
(insn 116 115 117 10 (set (reg:SI 2 r2 [orig:136 _24 ] [136])
        (mult:SI (reg:SI 3 r3 [181])
            (reg:SI 2 r2 [182]))) "./understand-elf/matmul-v2.cpp":19:34 56 {*mul}
     (nil))
(insn 117 116 118 10 (set (reg:SI 3 r3 [183])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":19:36 740 {*thumb2_movsi_vfp}
     (nil))
(insn 118 117 120 10 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (plus:SI (reg:SI 3 r3 [183])
            (reg:SI 2 r2 [orig:136 _24 ] [136]))) "./understand-elf/matmul-v2.cpp":19:36 7 {*arm_addsi3}
     (nil))
(insn 120 118 121 10 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (ashift:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":19:38 147 {*arm_shiftsi3}
     (nil))
(insn 121 120 122 10 (set (reg:SI 2 r2 [184])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":19:38 740 {*thumb2_movsi_vfp}
     (nil))
(insn 122 121 123 10 (set (reg/f:SI 3 r3 [orig:140 _28 ] [140])
        (plus:SI (reg:SI 3 r3 [orig:139 _27 ] [139])
            (reg:SI 2 r2 [184]))) "./understand-elf/matmul-v2.cpp":19:38 7 {*arm_addsi3}
     (nil))
(insn 123 122 124 10 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (mem:SI (reg/f:SI 3 r3 [orig:140 _28 ] [140]) [2 *_28+0 S4 A32])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 125 10 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:141 _29 ] [141])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (nil))
(insn 125 124 126 10 (set (reg:SI 3 r3 [185])
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f5e97171c60 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "./understand-elf/matmul-v2.cpp":19:19 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f5e97171c60 *.LC0>)
        (nil)))
(insn 126 125 127 10 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [185])) "./understand-elf/matmul-v2.cpp":19:19 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f5e97171c60 *.LC0>)
        (nil)))
(call_insn 127 126 128 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x7f5e972bdc00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":19:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 128 127 129 10 (set (reg:SI 3 r3 [187])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":16:9 740 {*thumb2_movsi_vfp}
     (nil))
(insn 129 128 130 10 (set (reg:SI 3 r3 [186])
        (plus:SI (reg:SI 3 r3 [187])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:9 7 {*arm_addsi3}
     (nil))
(insn 130 129 131 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])
        (reg:SI 3 r3 [186])) "./understand-elf/matmul-v2.cpp":16:9 740 {*thumb2_movsi_vfp}
     (nil))
(code_label 131 130 132 11 7 (nil) [1 uses])
(note 132 131 136 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 136 132 137 11 (set (reg:SI 3 r3 [188])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 j+0 S4 A32])) "./understand-elf/matmul-v2.cpp":16:22 740 {*thumb2_movsi_vfp}
     (nil))
(insn 137 136 138 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [188])
            (const_int 99 [0x63]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 138 137 139 11 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (nil)
 -> 133)
(note 139 138 140 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 12 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) "./understand-elf/matmul-v2.cpp":21:15 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 141 140 142 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("putchar") [flags 0x41]  <function_decl 0x7f5e972bdf00 __builtin_putchar>) [0 __builtin_putchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":21:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 142 141 143 12 (set (reg:SI 3 r3 [190])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":14:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 143 142 144 12 (set (reg:SI 3 r3 [189])
        (plus:SI (reg:SI 3 r3 [190])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:5 7 {*arm_addsi3}
     (nil))
(insn 144 143 145 12 (set (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])
        (reg:SI 3 r3 [189])) "./understand-elf/matmul-v2.cpp":14:5 740 {*thumb2_movsi_vfp}
     (nil))
(code_label 145 144 146 13 6 (nil) [1 uses])
(note 146 145 150 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 150 146 151 13 (set (reg:SI 3 r3 [191])
        (mem/c:SI (reg/f:SI 7 r7) [2 i+0 S4 A64])) "./understand-elf/matmul-v2.cpp":14:18 740 {*thumb2_movsi_vfp}
     (nil))
(insn 151 150 152 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [191])
            (const_int 99 [0x63]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 152 151 153 13 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (nil)
 -> 147)
(note 153 152 154 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 14 (set (reg:SI 3 r3 [192])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":23:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 155 154 156 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [192])
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":23:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 156 155 157 14 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "./understand-elf/matmul-v2.cpp":23:5 273 {arm_cond_branch}
     (nil)
 -> 160)
(note 157 156 158 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 15 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 matrix+0 S4 A64])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 159 158 160 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f5e973d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(code_label 160 159 161 16 10 (nil) [1 uses])
(note 161 160 162 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 16 (set (reg:SI 3 r3 [193])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":24:5 740 {*thumb2_movsi_vfp}
     (nil))
(insn 163 162 164 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [193])
            (const_int 0 [0]))) "./understand-elf/matmul-v2.cpp":24:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 164 163 165 16 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "./understand-elf/matmul-v2.cpp":24:5 273 {arm_cond_branch}
     (nil)
 -> 168)
(note 165 164 166 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 17 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 vect+0 S4 A32])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 167 166 168 17 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f5e973d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(code_label 168 167 169 18 11 (nil) [1 uses])
(note 169 168 170 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 177 18 (set (reg:SI 3 r3 [orig:150 _62 ] [150])
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":25:12 740 {*thumb2_movsi_vfp}
     (nil))
(insn 177 170 178 18 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:151 <retval> ] [151])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (nil))
(insn 178 177 192 18 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))
(note 192 178 0 NOTE_INSN_DELETED)


;; Function main (main, funcdef_no=30, decl_uid=6647, cgraph_uid=31, symbol_order=30) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)


main

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 100 [cc]
;;  ref usage 	r0={14d,12u} r1={11d,3u} r2={13d,8u} r3={17d,11u} r4={5d,9u,4e} r5={4d,3u} r6={5d,6u} r7={4d,6u} r8={3d,3u} r9={4d,4u} r10={4d,4u} r11={4d,3u} r12={12d} r13={5d,45u} r14={7d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={8d,2u} r101={6d} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 700{575d,121u,4e} in 65{59 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }d-1(16){ }d-1(17){ }d-1(18){ }d-1(19){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 7 [r7] 9 [r9] 10 [r10] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 7 [r7] 9 [r9] 10 [r10] 13 [sp]
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 7 [r7] 9 [r9] 10 [r10] 13 [sp]
;; live  out 	 7 [r7] 9 [r9] 10 [r10] 13 [sp]

( 5 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 7 [r7] 9 [r9] 10 [r10] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 11 [fp]
;; live  in  	 7 [r7] 9 [r9] 10 [r10] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 11 [fp]
;; live  kill	 1 [r1]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]

( 4 3 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 11 [fp] 100 [cc]
;; live  kill	 3 [r3] 12 [ip] 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]

( 4 )->[5]->( 3 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 7 [r7] 9 [r9] 10 [r10] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;; live  in  	 7 [r7] 9 [r9] 10 [r10] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 7 [r7] 100 [cc]
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 7 [r7] 9 [r9] 10 [r10] 13 [sp]
;; live  out 	 7 [r7] 9 [r9] 10 [r10] 13 [sp]

( 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 15 [pc]
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 152 to worklist
  Adding insn 192 to worklist
  Adding insn 162 to worklist
  Adding insn 163 to worklist
  Adding insn 14 to worklist
  Adding insn 164 to worklist
  Adding insn 10 to worklist
  Adding insn 178 to worklist
  Adding insn 156 to worklist
  Adding insn 36 to worklist
  Adding insn 66 to worklist
  Adding insn 62 to worklist
  Adding insn 56 to worklist
  Adding insn 53 to worklist
  Adding insn 77 to worklist
  Adding insn 158 to worklist
  Adding insn 72 to worklist
  Adding insn 185 to worklist
  Adding insn 184 to worklist
  Adding insn 182 to worklist
  Adding insn 88 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
Finished finding needed instructions:
processing block 6 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 183 to worklist
  Adding insn 87 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
processing block 5 lr out =  7 [r7] 9 [r9] 10 [r10] 13 [sp]
  Adding insn 76 to worklist
  Adding insn 73 to worklist
  Adding insn 159 to worklist
  Adding insn 74 to worklist
  Adding insn 71 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
processing block 4 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
  Adding insn 65 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 54 to worklist
  Adding insn 63 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
processing block 3 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp]
  Adding insn 41 to worklist
  Adding insn 155 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 191 to worklist
  Adding insn 5 to worklist
  Adding insn 24 to worklist
  Adding insn 20 to worklist
processing block 2 lr out =  7 [r7] 9 [r9] 10 [r10] 13 [sp]
  Adding insn 4 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
  Adding insn 17 to worklist
  Adding insn 18 to worklist
  Adding insn 11 to worklist
  Adding insn 13 to worklist
  Adding insn 118 to worklist
  Adding insn 9 to worklist
  Adding insn 179 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)
;;   ======================================================
;;   -- basic block 2 from 178 to 4 -- after reload
;;   ======================================================

;;	  0--> b  0: i 178 {[pre sp+=0xffffffffffffffdc]=unspec[r4] 0;use r5;use r6;use r7;use r8;use r9;use r10;use fp;use lr;}:(cortex_a53_slot_any+cortex_a53_ls_agen),(cortex_a53_store+cortex_a53_slot0),cortex_a53_store
;;	  0--> b  0: i   9 r0=0x9c40                               :cortex_a53_slot_any
;;	  1--> b  0: i 174 r10=unspec[const(unspec[`*.LC0',const(unspec[0] 18+0x4)] 23)] 1:(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_load
;;	  2--> b  0: i 179 sp=sp-0x1c                              :cortex_a53_slot_any
;;	  2--> b  0: i 124 r9=0xcccd                               :cortex_a53_slot_any
;;	  3--> b  0: i 125 zxt(r9,0x10,0x10)=0xcccc                :cortex_a53_slot_any
;;	  3--> b  0: i  10 {r0=call [`_Znaj'];use 0;clobber lr;}   :(cortex_a53_slot_any+cortex_a53_branch)
;;	  4--> b  0: i 118 r3=r0                                   :cortex_a53_slot_any
;;	  4--> b  0: i 175 r10=unspec[r10,0x4,0] 2                 :cortex_a53_slot_any
;;	  5--> b  0: i  11 r4=r3                                   :cortex_a53_slot_any
;;	  5--> b  0: i  13 r0=0x190                                :cortex_a53_slot_any
;;	  6--> b  0: i   4 r7=0x64                                 :cortex_a53_slot_any
;;	  6--> b  0: i 164 [sp+0x10]=r3                            :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	  7--> b  0: i  14 {r0=call [`_Znaj'];use 0;clobber lr;}   :(cortex_a53_slot_any+cortex_a53_branch)
;;	  7--> b  0: i  18 r3=r4-0x4                               :cortex_a53_slot_any
;;	  8--> b  0: i  17 r2=r0-0x4                               :cortex_a53_slot_any
;;	  8--> b  0: i 162 [sp+0x8]=r3                             :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	  9--> b  0: i 192 {[sp]=r3;[sp+0x4]=r2;}                  :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	  9--> b  0: i 121 r3=0xec4f                               :cortex_a53_slot_any
;;	 10--> b  0: i 122 zxt(r3,0x10,0x10)=0x4ec4                :cortex_a53_slot_any
;;	 10--> b  0: i 163 [sp+0x14]=r0                            :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	 11--> b  0: i 152 [sp+0xc]=r3                             :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	Ready list (final):  
;;   total time = 11
;;   new head = 178
;;   new tail = 152

;;   ======================================================
;;   -- basic block 3 from 20 to 41 -- after reload
;;   ======================================================

;;	  0--> b  0: i 191 {r5=[sp+0x8];r3=[sp+0xc];}              :(cortex_a53_single_issue+cortex_a53_ls_agen),(cortex_a53_load+cortex_a53_slot0),cortex_a53_load
;;	  1--> b  0: i  20 r4=r7-0x64                              :cortex_a53_slot_any
;;	  2--> b  0: i  24 r2=0xd                                  :cortex_a53_slot_any
;;	  2--> b  0: i   5 fp=[sp]                                 :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_load
;;	  3--> b  0: i  41 r8=0x14                                 :cortex_a53_slot_any
;;	  4--> b  0: i  22 {r6=trn(zxn(r4)*zxn(r3) 0>>0x20);clobber r1;}:(cortex_a53_slot_any+cortex_a53_imul)
;;	  4--> b  0: i 155 r3=[sp+0x4]                             :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_load
;;	  7--> b  0: i  23 r6=r6 0>>0x2                            :cortex_a53_slot_any
;;	 10--> b  0: i  26 r6=r4-r2*r6                             :(cortex_a53_slot_any+cortex_a53_imul)
;;	 11--> b  0: i  36 [++r3]=r6                               :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	 13--> b  0: i 156 [sp+0x4]=r3                             :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	Ready list (final):  
;;   total time = 13
;;   new head = 191
;;   new tail = 156

;;   ======================================================
;;   -- basic block 4 from 39 to 66 -- after reload
;;   ======================================================

;;	  0--> b  0: i  39 {r2=trn(zxn(r4)*zxn(r9) 0>>0x20);clobber r3;}:(cortex_a53_slot_any+cortex_a53_imul)
;;	  0--> b  0: i  60 r1=r10                                  :cortex_a53_slot_any
;;	  1--> b  0: i  61 r0=0x1                                  :cortex_a53_slot_any
;;	  3--> b  0: i  40 r2=r2 0>>0x4                            :cortex_a53_slot_any
;;	  6--> b  0: i  43 r2=r4-r8*r2                             :(cortex_a53_slot_any+cortex_a53_imul)
;;	  6--> b  0: i  63 r4=r4+0x1                               :cortex_a53_slot_any
;;	  7--> b  0: i  53 [++r5]=r2                               :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	 10--> b  0: i  54 r2=r6*r2                                :(cortex_a53_slot_any+cortex_a53_imul)
;;	 11--> b  0: i  56 [++fp]=r2                               :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	 12--> b  0: i  62 {r0=call [`__printf_chk'];use 0;clobber lr;}:(cortex_a53_slot_any+cortex_a53_branch)
;;	 12--> b  0: i  65 cc=cmp(r7,r4)                           :cortex_a53_slot_any
;;	 13--> b  0: i  66 pc={(cc!=0)?L64:pc}                     :(cortex_a53_slot_any+cortex_a53_branch)
;;	Ready list (final):  
;;   total time = 13
;;   new head = 39
;;   new tail = 66

;;   ======================================================
;;   -- basic block 5 from 171 to 77 -- after reload
;;   ======================================================

;;	  0--> b  0: i 171 r1=unspec[const(unspec[`*.LC1',const(unspec[0x1] 18+0x4)] 23)] 1:(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_load
;;	  0--> b  0: i  71 r0=0x1                                  :cortex_a53_slot_any
;;	  1--> b  0: i  74 r7=r7+r0                                :cortex_a53_slot_any
;;	  2--> b  0: i 172 r1=unspec[r1,0x4,0x1] 2                 :cortex_a53_slot_any
;;	  3--> b  0: i  72 {r0=call [`__printf_chk'];use 0;clobber lr;}:(cortex_a53_slot_any+cortex_a53_branch)
;;	  3--> b  0: i 159 r3=[sp]                                 :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_load
;;	  4--> b  0: i  76 cc=cmp(r7,0xc8)                         :cortex_a53_slot_any
;;	  5--> b  0: i  73 r3=r3+0x190                             :cortex_a53_slot_any
;;	  5--> b  0: i 158 [sp]=r3                                 :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_store
;;	  6--> b  0: i  77 pc={(cc!=0)?L75:pc}                     :(cortex_a53_slot_any+cortex_a53_branch)
;;	Ready list (final):  
;;   total time = 6
;;   new head = 171
;;   new tail = 77

;;   ======================================================
;;   -- basic block 6 from 79 to 185 -- after reload
;;   ======================================================

;;	  0--> b  0: i  79 r0=[sp+0x10]                            :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_load
;;	  1--> b  0: i  80 {call [`_ZdaPv'];use 0;clobber lr;}     :(cortex_a53_slot_any+cortex_a53_branch)
;;	  1--> b  0: i  81 r0=[sp+0x14]                            :(cortex_a53_slot_any+cortex_a53_ls_agen),cortex_a53_load
;;	  2--> b  0: i  82 {call [`_ZdaPv'];use 0;clobber lr;}     :(cortex_a53_slot_any+cortex_a53_branch)
;;	  2--> b  0: i  87 r0=0                                    :cortex_a53_slot_any
;;	  3--> b  0: i  88 use r0                                  :nothing
;;	  3--> b  0: i 182 unspec/v[0] 0                           :nothing
;;	  3--> b  0: i 183 sp=sp+0x1c                              :cortex_a53_slot_any
;;	  6--> b  0: i 184 unspec[sp] 4                            :nothing
;;	  6--> b  0: i 185 {return;sp=sp+0x24;r4=[sp];r5=[sp+0x4];r6=[sp+0x8];r7=[sp+0xc];r8=[sp+0x10];r9=[sp+0x14];r10=[sp+0x18];fp=[sp+0x1c];pc=[sp+0x20];}:(cortex_a53_single_issue+cortex_a53_ls_agen),(cortex_a53_load+cortex_a53_slot0),cortex_a53_load
;;	Ready list (final):  
;;   total time = 6
;;   new head = 79
;;   new tail = 185



starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 100 [cc]
;;  ref usage 	r0={14d,12u} r1={11d,3u} r2={13d,8u} r3={17d,11u} r4={5d,9u,4e} r5={4d,3u} r6={5d,6u} r7={4d,6u} r8={3d,3u} r9={4d,4u} r10={4d,4u} r11={4d,3u} r12={12d} r13={5d,45u} r14={7d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={8d,2u} r101={6d} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 700{575d,121u,4e} in 65{59 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 161 2 NOTE_INSN_FUNCTION_BEG)
(note 161 2 178 2 NOTE_INSN_DELETED)
(insn/f:TI 178 161 9 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -36 [0xffffffffffffffdc]))) [3  A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 r10))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":11:1 378 {*push_multi}
     (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 r10)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [3  S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [3  S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [3  S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [3  S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [3  S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [3  S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [3  S4 A32])
                                                        (reg:SI 10 r10))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [3  S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [3  S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))
(insn 9 178 174 2 (set (reg:SI 0 r0)
        (const_int 40000 [0x9c40])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 174 9 179 2 (set (reg/f:SI 10 r10 [156])
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f11831dbc60 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
            ] UNSPEC_PIC_SYM)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 255 {pic_load_addr_32bit}
     (nil))
(insn/f:TI 179 174 180 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) "./understand-elf/matmul-v2.cpp":11:1 7 {*arm_addsi3}
     (nil))
(note 180 179 124 2 NOTE_INSN_PROLOGUE_END)
(insn 124 180 125 2 (set (reg:SI 9 r9 [146])
        (const_int 52429 [0xcccd])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 52429 [0xcccd])
        (nil)))
(insn:TI 125 124 10 2 (set (zero_extract:SI (reg:SI 9 r9 [146])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 52428 [0xcccc])) "./understand-elf/matmul-v2.cpp":17:30 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int -858993459 [0xffffffffcccccccd])
        (nil)))
(call_insn 10 125 118 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn:TI 118 10 175 2 (set (reg:SI 3 r3 [160])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 175 118 11 2 (set (reg/f:SI 10 r10 [156])
        (unspec:SI [
                (reg/f:SI 10 r10 [156])
                (const_int 4 [0x4])
                (const_int 0 [0])
            ] UNSPEC_PIC_BASE)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 257 {pic_add_dot_plus_four}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f11831dbc60 *.LC0>)
        (nil)))
(insn:TI 11 175 13 2 (set (reg/f:SI 4 r4 [orig:121 _28 ] [121])
        (reg:SI 3 r3 [160])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_NOALIAS (reg/f:SI 133)
        (nil)))
(insn 13 11 4 2 (set (reg:SI 0 r0)
        (const_int 400 [0x190])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 4 13 164 2 (set (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
        (const_int 100 [0x64])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 100 [0x64])
        (nil)))
(insn 164 4 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [2 %sfp+-8 S4 A32])
        (reg/f:SI 3 r3 [orig:121 _28 ] [121])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:121 _28 ] [121])
        (nil)))
(call_insn:TI 14 164 18 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:28 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 18 14 17 2 (set (reg/f:SI 3 r3 [orig:125 ivtmp.32 ] [125])
        (plus:SI (reg/f:SI 4 r4 [orig:121 _28 ] [121])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 4 r4 [orig:121 _28 ] [121])
        (nil)))
(insn:TI 17 18 162 2 (set (reg:SI 2 r2 [orig:128 ivtmp.30 ] [128])
        (plus:SI (reg/f:SI 0 r0 [orig:122 _30 ] [122])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:122 _30 ] [122])
        (nil)))
(insn 162 17 192 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [2 %sfp+-16 S4 A32])
        (reg/f:SI 3 r3 [orig:125 ivtmp.32 ] [125])) 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 192 162 121 2 (parallel [
            (set (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])
                (reg/f:SI 3 r3 [orig:125 ivtmp.32 ] [125]))
            (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [2 %sfp+-20 S4 A32])
                (reg:SI 2 r2 [orig:128 ivtmp.30 ] [128]))
        ]) "./understand-elf/matmul-v2.cpp":13:28 413 {*thumb2_strd_base}
     (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:125 ivtmp.32 ] [125])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:128 ivtmp.30 ] [128])
            (nil))))
(insn 121 192 122 2 (set (reg:SI 3 r3 [136])
        (const_int 60495 [0xec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 60495 [0xec4f])
        (nil)))
(insn:TI 122 121 163 2 (set (zero_extract:SI (reg:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20164 [0x4ec4])) "./understand-elf/matmul-v2.cpp":15:21 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1321528399 [0x4ec4ec4f])
        (nil)))
(insn 163 122 152 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [2 %sfp+-4 S4 A32])
        (reg/f:SI 0 r0 [orig:122 _30 ] [122])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 152 163 75 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [2 %sfp+-12 S4 A32])
        (reg:SI 3 r3 [136])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 3 r3 [136])
        (nil)))
(code_label 75 152 19 3 3 (nil) [1 uses])
(note 19 75 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 25 19 191 3 NOTE_INSN_DELETED)
(insn:TI 191 25 20 3 (parallel [
            (set (reg:SI 5 r5 [orig:123 ivtmp.17 ] [123])
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 8 [0x8])) [2 %sfp+-16 S4 A32]))
            (set (reg:SI 3 r3 [136])
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 12 [0xc])) [2 %sfp+-12 S4 A32]))
        ]) "./understand-elf/matmul-v2.cpp":15:21 409 {*thumb2_ldrd}
     (nil))
(insn:TI 20 191 24 3 (set (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
        (plus:SI (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (const_int -100 [0xffffffffffffff9c]))) 7 {*arm_addsi3}
     (nil))
(insn:TI 24 20 5 3 (set (reg:SI 2 r2 [138])
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 13 [0xd])
        (nil)))
(insn 5 24 41 3 (set (reg:SI 11 fp [orig:130 ivtmp.20 ] [130])
        (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 41 5 22 3 (set (reg:SI 8 r8 [148])
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 20 [0x14])
        (nil)))
(insn:TI 22 41 155 3 (parallel [
            (set (reg:SI 6 r6 [135])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                            (zero_extend:DI (reg:SI 3 r3 [136])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [162]))
        ]) "./understand-elf/matmul-v2.cpp":15:21 72 {*umull_high}
     (expr_list:REG_DEAD (reg:SI 3 r3 [136])
        (expr_list:REG_UNUSED (reg:SI 1 r1 [162])
            (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                            (const_int 1321528399 [0x4ec4ec4f]))
                        (const_int 32 [0x20])))
                (nil)))))
(insn 155 22 23 3 (set (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [2 %sfp+-20 S4 A32])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 23 155 26 3 (set (reg:SI 6 r6 [orig:113 _4 ] [113])
        (lshiftrt:SI (reg:SI 6 r6 [135])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (const_int 13 [0xd]))
        (nil)))
(insn:TI 26 23 36 3 (set (reg:SI 6 r6 [orig:113 _4 ] [113])
        (minus:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (mult:SI (reg:SI 2 r2 [138])
                (reg:SI 6 r6 [orig:113 _4 ] [113])))) "./understand-elf/matmul-v2.cpp":15:21 58 {*mls}
     (expr_list:REG_DEAD (reg:SI 2 r2 [138])
        (nil)))
(insn:TI 36 26 156 3 (set (mem:SI (pre_inc:SI (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])) [1 MEM[(int *)_20]+0 S4 A32])
        (reg:SI 6 r6 [orig:113 _4 ] [113])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])
        (nil)))
(insn:TI 156 36 64 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [2 %sfp+-20 S4 A32])
        (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])
        (nil)))
(code_label 64 156 37 4 2 (nil) [1 uses])
(note 37 64 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 42 37 39 4 NOTE_INSN_DELETED)
(insn:TI 39 42 60 4 (parallel [
            (set (reg:SI 2 r2 [145])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                            (zero_extend:DI (reg:SI 9 r9 [146])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [163]))
        ]) "./understand-elf/matmul-v2.cpp":17:30 72 {*umull_high}
     (expr_list:REG_UNUSED (reg:SI 3 r3 [163])
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                        (const_int 3435973837 [0xcccccccd]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 60 39 61 4 (set (reg:SI 1 r1)
        (reg/f:SI 10 r10 [156])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f11831dbc60 *.LC0>)
        (nil)))
(insn:TI 61 60 40 4 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 40 61 43 4 (set (reg:SI 2 r2 [orig:115 _9 ] [115])
        (lshiftrt:SI (reg:SI 2 r2 [145])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (const_int 20 [0x14]))
        (nil)))
(insn:TI 43 40 63 4 (set (reg:SI 2 r2 [orig:115 _9 ] [115])
        (minus:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (mult:SI (reg:SI 8 r8 [148])
                (reg:SI 2 r2 [orig:115 _9 ] [115])))) "./understand-elf/matmul-v2.cpp":17:30 58 {*mls}
     (nil))
(insn 63 43 53 4 (set (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
        (plus:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:22 7 {*arm_addsi3}
     (nil))
(insn:TI 53 63 54 4 (set (mem:SI (pre_inc:SI (reg:SI 5 r5 [orig:123 ivtmp.17 ] [123])) [1 MEM[(int *)_43]+0 S4 A32])
        (reg:SI 2 r2 [orig:115 _9 ] [115])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 5 r5 [orig:123 ivtmp.17 ] [123])
        (nil)))
(insn:TI 54 53 56 4 (set (reg:SI 2 r2 [orig:116 _15 ] [116])
        (mult:SI (reg:SI 6 r6 [orig:113 _4 ] [113])
            (reg:SI 2 r2 [orig:115 _9 ] [115]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (nil))
(insn:TI 56 54 62 4 (set (mem:SI (pre_inc:SI (reg:SI 11 fp [orig:130 ivtmp.20 ] [130])) [1 MEM[(int *)_57]+0 S4 A32])
        (reg:SI 2 r2 [orig:116 _15 ] [116])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 11 fp [orig:130 ivtmp.20 ] [130])
        (nil)))
(call_insn:TI 62 56 65 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 65 62 66 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn:TI 66 65 67 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 64)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1062895956 (nil)))
 -> 64)
(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 68 67 171 5 NOTE_INSN_DELETED)
(insn:TI 171 68 71 5 (set (reg:SI 1 r1)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f11831dbcf0 *.LC1>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
            ] UNSPEC_PIC_SYM)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 255 {pic_load_addr_32bit}
     (nil))
(insn 71 171 74 5 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 74 71 172 5 (set (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
        (plus:SI (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (reg:SI 0 r0))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn:TI 172 74 72 5 (set (reg:SI 1 r1)
        (unspec:SI [
                (reg:SI 1 r1)
                (const_int 4 [0x4])
                (const_int 1 [0x1])
            ] UNSPEC_PIC_BASE)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 257 {pic_add_dot_plus_four}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f11831dbcf0 *.LC1>)
        (nil)))
(call_insn:TI 72 172 159 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 159 72 76 5 (set (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])
        (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])) "./understand-elf/matmul-v2.cpp":14:18 740 {*thumb2_movsi_vfp}
     (nil))
(insn:TI 76 159 73 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (const_int 200 [0xc8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
(insn:TI 73 76 158 5 (set (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])
        (plus:SI (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])
            (const_int 400 [0x190]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn 158 73 77 5 (set (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])
        (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])) "./understand-elf/matmul-v2.cpp":14:18 740 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])
        (nil)))
(jump_insn:TI 77 158 78 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 75)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1062895924 (nil)))
 -> 75)
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 79 78 80 6 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [2 %sfp+-8 S4 A32])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn:TI 80 79 81 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 81 80 82 6 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [2 %sfp+-4 S4 A32])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn:TI 82 81 87 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 87 82 88 6 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (nil))
(insn 88 87 196 6 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))
(note 196 88 182 6 NOTE_INSN_EPILOGUE_BEG)
(insn:TI 182 196 183 6 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "./understand-elf/matmul-v2.cpp":26:1 301 {blockage}
     (nil))
(insn/f 183 182 184 6 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "./understand-elf/matmul-v2.cpp":26:1 7 {*arm_addsi3}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])))
        (nil)))
(insn:TI 184 183 185 6 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "./understand-elf/matmul-v2.cpp":26:1 397 {force_register_use}
     (nil))
(jump_insn 185 184 188 6 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 36 [0x24])))
            (set/f (reg:SI 4 r4)
                (mem/c:SI (reg/f:SI 13 sp) [3  S4 A32]))
            (set/f (reg:SI 5 r5)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [3  S4 A32]))
            (set/f (reg:SI 6 r6)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 8 [0x8])) [3  S4 A32]))
            (set/f (reg:SI 7 r7)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 12 [0xc])) [3  S4 A32]))
            (set/f (reg:SI 8 r8)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 16 [0x10])) [3  S4 A32]))
            (set/f (reg:SI 9 r9)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 20 [0x14])) [3  S4 A32]))
            (set/f (reg:SI 10 r10)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 24 [0x18])) [3  S4 A32]))
            (set/f (reg:SI 11 fp)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 28 [0x1c])) [3  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 32 [0x20])) [3  S4 A32]))
        ]) "./understand-elf/matmul-v2.cpp":26:1 381 {*pop_multiple_with_writeback_and_return}
     (expr_list:REG_UNUSED (reg:SI 15 pc)
        (expr_list:REG_CFA_RESTORE (reg:SI 11 fp)
            (expr_list:REG_CFA_RESTORE (reg:SI 10 r10)
                (expr_list:REG_CFA_RESTORE (reg:SI 9 r9)
                    (expr_list:REG_CFA_RESTORE (reg:SI 8 r8)
                        (expr_list:REG_CFA_RESTORE (reg:SI 7 r7)
                            (expr_list:REG_CFA_RESTORE (reg:SI 6 r6)
                                (expr_list:REG_CFA_RESTORE (reg:SI 5 r5)
                                    (expr_list:REG_CFA_RESTORE (reg:SI 4 r4)
                                        (nil))))))))))
 -> return)
(barrier 188 185 127)
(note 127 188 141 NOTE_INSN_DELETED)
(note 141 127 0 NOTE_INSN_DELETED)


;; Function main (main, funcdef_no=30, decl_uid=6647, cgraph_uid=31, symbol_order=30) (executed once)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=40, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) r  (1) j {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=22,losers=3,rld_nregs=3
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=10,overall=13,losers=2,rld_nregs=2
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=13,overall=13,losers=2,rld_nregs=2
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=22,losers=2 -- refuse
	 Choosing alt 10 in insn 18:  (0) r  (1) rk  (2) L {*arm_addsi3}
      Creating newreg=175 from oldreg=125, assigning class GENERAL_REGS to r175
      Creating newreg=176 from oldreg=121, assigning class CORE_REGS to r176
   18: r175:SI=r176:SI-0x4
    Inserting insn reload before:
  143: r176:SI=r121:SI
    Inserting insn reload after:
  142: r125:SI=r175:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 142:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=177 from oldreg=175, assigning class LO_REGS to r177
  142: r125:SI=r177:SI
    Inserting insn reload before:
  144: r177:SI=r175:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 143:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r176 for output r176:SI, change to class LO_REGS for r176
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=22,losers=3,rld_nregs=3
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=10,overall=13,losers=2,rld_nregs=2
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=13,overall=13,losers=2,rld_nregs=2
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=22,losers=2 -- refuse
	 Choosing alt 10 in insn 17:  (0) r  (1) rk  (2) L {*arm_addsi3}
      Creating newreg=178 from oldreg=128, assigning class GENERAL_REGS to r178
      Creating newreg=179 from oldreg=122, assigning class CORE_REGS to r179
   17: r178:SI=r179:SI-0x4
    Inserting insn reload before:
  146: r179:SI=r122:SI
    Inserting insn reload after:
  145: r128:SI=r178:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 145:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=180 from oldreg=178, assigning class LO_REGS to r180
  145: r128:SI=r180:SI
    Inserting insn reload before:
  147: r180:SI=r178:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 146:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r179 for output r179:SI, change to class LO_REGS for r179
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=8,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=14,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=181 from oldreg=125, assigning class LO_REGS to r181
    3: r126:SI=r181:SI
    Inserting insn reload before:
  148: r181:SI=r125:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 148:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) mX {pic_load_addr_unified}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 4 in insn 121:  (0) r  (1) j {*thumb2_movsi_vfp}
      Creating newreg=182 from oldreg=136, assigning class GENERAL_REGS to r182
  121: r182:SI=0xec4f
      REG_EQUAL 0xec4f
    Inserting insn reload after:
  149: r136:SI=r182:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 149:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=183 from oldreg=182, assigning class LO_REGS to r183
  149: r136:SI=r183:SI
    Inserting insn reload before:
  150: r183:SI=r182:SI

            0 Non input pseudo reload: reject++
            0 Input/Output reload: reject+=6
          alt=0,overall=13,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 122:  (0) +r {*arm_movtas_ze}
      Creating newreg=184 from oldreg=136, assigning class GENERAL_REGS to r184
  122: zero_extract(r184:SI,0x10,0x10)=0x4ec4
      REG_EQUAL 0x4ec4ec4f
    Inserting insn reload before:
  151: r184:SI=r136:SI
    Inserting insn reload after:
  152: r136:SI=r184:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 152:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=185 from oldreg=184, assigning class LO_REGS to r185
  152: r136:SI=r185:SI
    Inserting insn reload before:
  153: r185:SI=r184:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 151:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r184 for output r184:SI, change to class LO_REGS for r184
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 124:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) +r {*arm_movtas_ze}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 20:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) I {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=8,losers=1,rld_nregs=1
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=2,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 5:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 22:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
      Creating newreg=186 from oldreg=136, assigning class GENERAL_REGS to r186
   22: {r135:SI=trunc(zero_extend(r131:SI)*zero_extend(r186:SI) 0>>0x20);clobber r162:SI;}
      REG_UNUSED r162:SI
      REG_EQUAL trunc(zero_extend(r131:SI)*0x4ec4ec4f 0>>0x20)
    Inserting insn reload before:
  154: r186:SI=r136:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 154:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r186 for output r186:SI, change to class LO_REGS for r186
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) r  (2) r  (3) r {*mls}
      Creating newreg=187 from oldreg=128, assigning class CORE_REGS to address r187
	   Change to class GENERAL_REGS for r187
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 36:  (0) m  (1) l {*thumb2_movsi_vfp}
   36: [++r187:SI]=r113:SI
      REG_INC r128:SI
    Inserting insn reload before:
  155: r187:SI=r128:SI
    Inserting insn reload after:
  156: r128:SI=r187:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 156:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=188 from oldreg=187, assigning class LO_REGS to r188
  156: r128:SI=r188:SI
    Inserting insn reload before:
  157: r188:SI=r187:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 155:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r187 for output r187:SI, change to class LO_REGS for r187
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) I {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) r  (2) r  (3) r {*mls}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 63:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 54
	 Choosing alt 0 in insn 54:  (0) =l  (1) %0  (2) l {*mul}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 56:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) I {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) r {*arm_cmpsi_insn}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) mX {pic_load_addr_unified}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) I {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 74:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=13,losers=2,rld_nregs=2
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=2,rld_nregs=2
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=22,losers=2 -- refuse
	 Choosing alt 4 in insn 73:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Creating newreg=189 from oldreg=126, assigning class GENERAL_REGS to r189
      Creating newreg=190 from oldreg=126, assigning class CORE_REGS to r190
   73: r189:SI=r190:SI+0x190
    Inserting insn reload before:
  159: r190:SI=r126:SI
    Inserting insn reload after:
  158: r126:SI=r189:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 158:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=191 from oldreg=189, assigning class LO_REGS to r191
  158: r126:SI=r191:SI
    Inserting insn reload before:
  160: r191:SI=r189:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 159:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r190 for output r190:SI, change to class LO_REGS for r190
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) l  (1) Py {*arm_cmpsi_insn}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=192 from oldreg=136, assigning class LO_REGS to inheritance r192
    Original reg change 136->192 (bb2):
  149: r192:SI=r183:SI
    Add original<-inheritance after:
  161: r136:SI=r192:SI

    Inheritance reuse change 136->192 (bb2):
  151: r184:SI=r192:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=193 from oldreg=125, assigning class LO_REGS to inheritance r193
    Original reg change 125->193 (bb2):
  142: r193:SI=r177:SI
    Add original<-inheritance after:
  162: r125:SI=r193:SI

    Inheritance reuse change 125->193 (bb2):
  148: r181:SI=r193:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=194 from oldreg=122, assigning class GENERAL_REGS to inheritance r194
    Original reg change 122->194 (bb2):
   15: r194:SI=r161:SI
      REG_DEAD r161:SI
      REG_NOALIAS r134:SI
    Add original<-inheritance after:
  163: r122:SI=r194:SI

    Inheritance reuse change 122->194 (bb2):
  146: r179:SI=r194:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=195 from oldreg=121, assigning class GENERAL_REGS to inheritance r195
    Original reg change 121->195 (bb2):
   11: r195:SI=r160:SI
      REG_DEAD r160:SI
      REG_NOALIAS r133:SI
    Add original<-inheritance after:
  164: r121:SI=r195:SI

    Inheritance reuse change 121->195 (bb2):
  143: r176:SI=r195:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   161: r136:SI=r192:SI
deleting insn with uid = 161.
EBB 3
EBB 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 88: point = 0, n_alt = -1
   Insn 87: point = 0, n_alt = 1
   Insn 82: point = 0, n_alt = -1
   Insn 81: point = 0, n_alt = 5
   Insn 80: point = 1, n_alt = -1
   Insn 79: point = 1, n_alt = 5
  BB 5
   Insn 77: point = 3, n_alt = -1
   Insn 76: point = 3, n_alt = 0
   Insn 158: point = 3, n_alt = 7
   Insn 160: point = 5, n_alt = -2
	   Creating copy r189->r191@10
   Insn 73: point = 7, n_alt = 4
   Insn 159: point = 9, n_alt = 5
   Insn 72: point = 11, n_alt = -1
   Insn 74: point = 11, n_alt = 2
   Insn 71: point = 12, n_alt = 1
   Insn 70: point = 12, n_alt = 1
   Insn 140: point = 12, n_alt = -2
   Insn 139: point = 14, n_alt = -2
   Insn 138: point = 16, n_alt = -2
  BB 4
   Insn 66: point = 19, n_alt = -1
   Insn 65: point = 19, n_alt = 1
   Insn 62: point = 19, n_alt = -1
   Insn 61: point = 19, n_alt = 1
   Insn 60: point = 19, n_alt = -2
   Insn 59: point = 19, n_alt = -2
   Insn 56: point = 20, n_alt = 7
   Insn 54: point = 21, n_alt = 0
   Insn 53: point = 23, n_alt = 7
   Insn 63: point = 24, n_alt = 2
   Insn 43: point = 25, n_alt = 0
   Insn 40: point = 26, n_alt = 1
   Insn 39: point = 28, n_alt = 0
  BB 3
   Insn 137: point = 30, n_alt = -2
   Insn 136: point = 32, n_alt = -2
   Insn 135: point = 34, n_alt = -2
   Insn 134: point = 36, n_alt = -2
   Insn 133: point = 38, n_alt = -2
   Insn 132: point = 40, n_alt = -2
   Insn 131: point = 42, n_alt = -2
   Insn 41: point = 44, n_alt = 1
   Insn 156: point = 45, n_alt = 7
   Insn 157: point = 47, n_alt = -2
	   Creating copy r187->r188@10
   Insn 36: point = 49, n_alt = 7
   Insn 155: point = 50, n_alt = 5
   Insn 26: point = 52, n_alt = 0
   Insn 23: point = 54, n_alt = 1
   Insn 22: point = 56, n_alt = 0
   Insn 154: point = 58, n_alt = 5
   Insn 6: point = 59, n_alt = 5
   Insn 5: point = 60, n_alt = 6
   Insn 24: point = 61, n_alt = 1
   Insn 20: point = 62, n_alt = 10
  BB 2
   Insn 130: point = 64, n_alt = -2
   Insn 129: point = 66, n_alt = -2
   Insn 128: point = 68, n_alt = -2
   Insn 4: point = 70, n_alt = 1
   Insn 125: point = 71, n_alt = 0
   Insn 124: point = 72, n_alt = 4
   Insn 152: point = 73, n_alt = 7
   Insn 153: point = 75, n_alt = -2
	   Creating copy r184->r185@1
   Insn 122: point = 77, n_alt = 0
   Insn 151: point = 78, n_alt = 5
	   Creating copy r184<-r192@1
   Insn 149: point = 80, n_alt = 7
	   Creating copy r183->r192@1
   Insn 150: point = 82, n_alt = -2
	   Creating copy r182->r183@1
   Insn 121: point = 84, n_alt = 4
   Insn 57: point = 85, n_alt = 1
   Insn 3: point = 86, n_alt = 7
   Insn 148: point = 88, n_alt = 5
	   Creating copy r181<-r193@1
   Insn 145: point = 90, n_alt = 7
   Insn 147: point = 92, n_alt = -2
	   Creating copy r178->r180@1
   Insn 17: point = 94, n_alt = 10
   Insn 146: point = 96, n_alt = 5
	   Creating copy r179<-r194@1
   Insn 162: point = 98, n_alt = -1
   Insn 142: point = 99, n_alt = 7
	   Creating copy r177->r193@1
   Insn 144: point = 101, n_alt = -2
	   Creating copy r175->r177@1
   Insn 18: point = 103, n_alt = 10
   Insn 143: point = 105, n_alt = 5
	   Creating copy r176<-r195@1
   Insn 163: point = 107, n_alt = -1
   Insn 15: point = 108, n_alt = 7
	Hard reg 0 is preferable by r194 with profit 1
   Insn 119: point = 110, n_alt = -2
   Insn 14: point = 111, n_alt = -1
   Insn 164: point = 111, n_alt = -1
   Insn 11: point = 112, n_alt = 7
	Hard reg 3 is preferable by r195 with profit 1
   Insn 13: point = 114, n_alt = 1
   Insn 118: point = 114, n_alt = -2
   Insn 10: point = 115, n_alt = -1
   Insn 9: point = 115, n_alt = 4
 r113: [43..54]
 r115: [22..26]
 r116: [19..21]
 r119: [69..70]
 r121: [1..111]
 r122: [0..107]
 r123: [39..59]
 r125: [3..98]
 r126: [10..86] [3..3]
 r128: [51..90] [3..45]
 r130: [37..60]
 r131: [35..62]
 r135: [55..56]
 r136: [3..73]
 r138: [53..61]
 r145: [27..28]
 r146: [67..72]
 r148: [19..44]
 r156: [65..85]
 r160: [113..114]
 r161: [109..110]
 r162: [56..56]
 r163: [28..28]
 r164: [41..68] [3..16]
 r165: [33..66] [3..14]
 r166: [31..64] [3..12]
 r167: [19..42]
 r168: [17..40]
 r169: [19..38]
 r170: [19..36]
 r171: [19..34]
 r172: [15..32]
 r173: [13..30]
 r175: [102..103]
 r176: [104..105]
 r177: [100..101]
 r178: [93..94]
 r179: [95..96]
 r180: [91..92]
 r181: [87..88]
 r182: [83..84]
 r183: [81..82]
 r184: [76..78]
 r185: [74..75]
 r186: [57..58]
 r187: [48..50]
 r188: [46..47]
 r189: [6..7]
 r190: [8..9]
 r191: [4..5]
 r192: [79..80]
 r193: [89..99]
 r194: [97..108]
 r195: [106..112]
Compressing live ranges: from 115 to 85 - 73%
Ranges after the compression:
 r113: [33..40]
 r115: [16..17]
 r116: [14..15]
 r119: [49..50]
 r121: [0..82]
 r122: [0..80]
 r123: [29..44]
 r125: [1..72]
 r126: [8..60] [1..1]
 r128: [39..64] [1..34]
 r130: [27..44]
 r131: [25..44]
 r135: [41..42]
 r136: [1..50]
 r138: [39..44]
 r145: [18..19]
 r146: [47..50]
 r148: [14..34]
 r156: [45..60]
 r160: [83..84]
 r161: [81..82]
 r162: [42..42]
 r163: [19..19]
 r164: [31..48] [1..13]
 r165: [23..46] [1..11]
 r166: [21..44] [1..9]
 r167: [14..32]
 r168: [14..30]
 r169: [14..28]
 r170: [14..26]
 r171: [14..24]
 r172: [12..22]
 r173: [10..20]
 r175: [75..76]
 r176: [77..78]
 r177: [73..74]
 r178: [67..68]
 r179: [69..70]
 r180: [65..66]
 r181: [61..62]
 r182: [59..60]
 r183: [57..58]
 r184: [53..54]
 r185: [51..52]
 r186: [43..44]
 r187: [37..38]
 r188: [35..36]
 r189: [4..5]
 r190: [6..7]
 r191: [2..3]
 r192: [55..56]
 r193: [63..72]
 r194: [71..80]
 r195: [79..82]

********** Assignment #1: **********

	 Assigning to 187 (cl=LO_REGS, orig=128, freq=30, tfirst=187, tfreq=30)...
	   Assign 3 to reload r187 (freq=30)
	Hard reg 3 is preferable by r188 with profit 10
	 Assigning to 188 (cl=LO_REGS, orig=128, freq=20, tfirst=187, tfreq=30)...
	   Assign 3 to reload r188 (freq=20)
	 Assigning to 186 (cl=LO_REGS, orig=136, freq=20, tfirst=186, tfreq=20)...
	   Assign 3 to reload r186 (freq=20)
	 Assigning to 190 (cl=LO_REGS, orig=126, freq=20, tfirst=190, tfreq=20)...
	   Assign 3 to reload r190 (freq=20)
	 Assigning to 191 (cl=LO_REGS, orig=126, freq=20, tfirst=191, tfreq=20)...
	   Assign 3 to reload r191 (freq=20)
	Hard reg 3 is preferable by r189 with profit 10
	 Assigning to 193 (cl=LO_REGS, orig=125, freq=3, tfirst=177, tfreq=3)...
	   Assign 3 to inheritance r193 (freq=3)
	Hard reg 3 is preferable by r177 with profit 1
	Hard reg 3 is preferable by r175 with profit 1
	Hard reg 3 is preferable by r181 with profit 1
	 Assigning to 177 (cl=LO_REGS, orig=125, freq=2, tfirst=177, tfreq=3)...
	   Assign 3 to reload r177 (freq=2)
	Hard reg 3 is preferable by r175 with profit 2
	 Assigning to 181 (cl=LO_REGS, orig=125, freq=2, tfirst=177, tfreq=3)...
	   Assign 3 to reload r181 (freq=2)
	 Assigning to 183 (cl=LO_REGS, orig=136, freq=2, tfirst=183, tfreq=3)...
	   Assign 3 to reload r183 (freq=2)
	Hard reg 3 is preferable by r182 with profit 1
	Hard reg 3 is preferable by r192 with profit 1
	Hard reg 3 is preferable by r184 with profit 1
	Hard reg 3 is preferable by r185 with profit 1
	 Assigning to 184 (cl=LO_REGS, orig=136, freq=3, tfirst=183, tfreq=3)...
	   Assign 3 to reload r184 (freq=3)
	Hard reg 3 is preferable by r192 with profit 2
	Hard reg 3 is preferable by r185 with profit 2
	 Assigning to 185 (cl=LO_REGS, orig=136, freq=2, tfirst=183, tfreq=3)...
	   Assign 3 to reload r185 (freq=2)
	 Assigning to 192 (cl=LO_REGS, orig=136, freq=2, tfirst=183, tfreq=3)...
	   Assign 3 to inheritance r192 (freq=2)
	 Assigning to 176 (cl=LO_REGS, orig=121, freq=2, tfirst=176, tfreq=2)...
	   Assign 3 to reload r176 (freq=2)
	Hard reg 3 is preferable by r195 with profit 2
	 Assigning to 179 (cl=LO_REGS, orig=122, freq=2, tfirst=179, tfreq=2)...
	   Assign 2 to reload r179 (freq=2)
	Hard reg 0 is preferable by r194 with profit 1
	Hard reg 2 is preferable by r194 with profit 1
	 Assigning to 180 (cl=LO_REGS, orig=128, freq=2, tfirst=180, tfreq=2)...
	   Assign 2 to reload r180 (freq=2)
	Hard reg 2 is preferable by r178 with profit 1
	 Assigning to 189 (cl=GENERAL_REGS, orig=126, freq=20, tfirst=189, tfreq=20)...
	   Assign 3 to reload r189 (freq=20)
	 Assigning to 194 (cl=GENERAL_REGS, orig=122, freq=3, tfirst=194, tfreq=3)...
	   Assign 2 to inheritance r194 (freq=3)
	 Assigning to 195 (cl=GENERAL_REGS, orig=121, freq=3, tfirst=195, tfreq=3)...
	   Assign 4 to inheritance r195 (freq=3)
	 Assigning to 175 (cl=GENERAL_REGS, orig=125, freq=2, tfirst=175, tfreq=2)...
	   Assign 3 to reload r175 (freq=2)
	 Assigning to 178 (cl=GENERAL_REGS, orig=128, freq=2, tfirst=178, tfreq=2)...
	   Assign 2 to reload r178 (freq=2)
	 Assigning to 182 (cl=GENERAL_REGS, orig=136, freq=2, tfirst=182, tfreq=2)...
	   Assign 3 to reload r182 (freq=2)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 4 out of 4 (100.00%)

********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 164:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 163:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 162:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)

Cands:
0 (nop=0, remat_regno=121, reload_regno=-1):
(insn 164 11 14 2 (set (reg/f:SI 121 [ _28 ])
                    (reg/f:SI 195 [orig:121 _28 ] [121])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
                 (nil))
1 (nop=0, remat_regno=122, reload_regno=-1):
(insn 163 15 143 2 (set (reg/f:SI 122 [ _30 ])
                    (reg/f:SI 194 [orig:122 _30 ] [122])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
                 (nil))
2 (nop=0, remat_regno=125, reload_regno=-1):
(insn 162 142 146 2 (set (reg/f:SI 125 [ ivtmp.32 ])
                    (reg/f:SI 193 [orig:125 ivtmp.32 ] [125])) 740 {*thumb2_movsi_vfp}
                 (nil))

BB 2:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122 125 126 128 136 164 165 166
  changed regs: 0 [r0] 119 121 122 125 126 128 136 146 156 160 161 164 165 166 175 176 177 178 179 180 181 182 183 184 185 192 193 194 195
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 119 146 156 160 161 175 176 177 178 179 180 181 182 183 184 185 192 193 194 195

BB 3:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122 125 126 128 136 164 165 166
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122 125 126 128 136 148 167 168 169 170 171 172 173
  changed regs: 113 123 128 130 131 135 138 148 162 167 168 169 170 171 172 173 186 187 188
  dead regs: 113 123 128 130 131 135 138 164 165 166 186 187 188

BB 4:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122 125 126 128 136 148 167 168 169 170 171 172 173
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122 125 126 128 136 148 167 168 169 170 171 172 173
  changed regs: 0 [r0] 1 [r1] 2 [r2] 115 116 145 163 169 170 171
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 115 116 145

BB 5:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122 125 126 128 136 168 172 173
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122 125 126 128 136 164 165 166
  changed regs: 0 [r0] 1 [r1] 126 164 165 166 189 190 191
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 126 168 172 173 189 190 191

BB 6:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 122
  register live out: 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0]
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 121 122
subreg regs:
  Slot 0 regnos (width = 0):	 126
  Slot 1 regnos (width = 0):	 128
  Slot 2 regnos (width = 0):	 125
  Slot 3 regnos (width = 0):	 136
  Slot 4 regnos (width = 0):	 121
  Slot 5 regnos (width = 0):	 122
Changing spilled pseudos to memory in insn #164
Changing spilled pseudos to memory in insn #163
Changing spilled pseudos to memory in insn #162
Changing spilled pseudos to memory in insn #145
Changing spilled pseudos to memory in insn #3
Changing spilled pseudos to memory in insn #152
Changing spilled pseudos to memory in insn #5
Changing spilled pseudos to memory in insn #6
Changing spilled pseudos to memory in insn #154
Changing spilled pseudos to memory in insn #155
Changing spilled pseudos to memory in insn #156
Changing spilled pseudos to memory in insn #159
Changing spilled pseudos to memory in insn #158
Changing spilled pseudos to memory in insn #79
Changing spilled pseudos to memory in insn #81
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=64, prev_offset=40)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=36, prev_offset=0)
Can eliminate 103 to 7 (offset=64, prev_offset=0)
Can eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 158:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 159:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 156:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 155:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 154:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 5:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 152:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 145:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 162:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 163:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 164:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=64, prev_offset=64)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=36, prev_offset=0)
Can eliminate 103 to 7 (offset=64, prev_offset=0)
Can eliminate 102 to 13 (offset=24, prev_offset=24)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
changing reg in insn 26
changing reg in insn 23
changing reg in insn 131
changing reg in insn 26
changing reg in insn 36
changing reg in insn 43
changing reg in insn 40
changing reg in insn 53
changing reg in insn 43
changing reg in insn 54
changing reg in insn 56
changing reg in insn 59
changing reg in insn 4
changing reg in insn 128
changing reg in insn 6
changing reg in insn 133
changing reg in insn 5
changing reg in insn 134
changing reg in insn 20
changing reg in insn 135
changing reg in insn 22
changing reg in insn 26
changing reg in insn 22
changing reg in insn 23
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 39
changing reg in insn 40
changing reg in insn 125
changing reg in insn 124
changing reg in insn 129
changing reg in insn 125
changing reg in insn 41
changing reg in insn 43
changing reg in insn 57
changing reg in insn 130
changing reg in insn 118
changing reg in insn 11
changing reg in insn 119
changing reg in insn 15
changing reg in insn 22
changing reg in insn 39
changing reg in insn 138
changing reg in insn 128
changing reg in insn 74
changing reg in insn 132
changing reg in insn 20
changing reg in insn 76
changing reg in insn 74
changing reg in insn 139
changing reg in insn 129
changing reg in insn 136
changing reg in insn 140
changing reg in insn 130
changing reg in insn 137
changing reg in insn 131
changing reg in insn 132
changing reg in insn 138
changing reg in insn 65
changing reg in insn 133
changing reg in insn 53
changing reg in insn 53
changing reg in insn 134
changing reg in insn 56
changing reg in insn 56
changing reg in insn 135
changing reg in insn 63
changing reg in insn 65
changing reg in insn 63
changing reg in insn 43
changing reg in insn 39
changing reg in insn 40
changing reg in insn 39
changing reg in insn 136
changing reg in insn 139
changing reg in insn 39
changing reg in insn 137
changing reg in insn 140
changing reg in insn 60
deleting insn with uid = 119.
deleting insn with uid = 144.
deleting insn with uid = 142.
deleting insn with uid = 146.
deleting insn with uid = 147.
deleting insn with uid = 148.
deleting insn with uid = 150.
deleting insn with uid = 149.
deleting insn with uid = 151.
deleting insn with uid = 153.
deleting insn with uid = 128.
deleting insn with uid = 129.
deleting insn with uid = 130.
deleting insn with uid = 157.
deleting insn with uid = 131.
deleting insn with uid = 132.
deleting insn with uid = 133.
deleting insn with uid = 134.
deleting insn with uid = 135.
deleting insn with uid = 136.
deleting insn with uid = 137.
deleting insn with uid = 59.
deleting insn with uid = 138.
deleting insn with uid = 139.
deleting insn with uid = 140.
deleting insn with uid = 160.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 82.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,10u} r1={10d,2u} r2={14d,10u} r3={18d,11u} r4={3d,8u,4e} r5={2d,1u} r6={3d,4u} r7={2d,4u} r8={1d,1u} r9={2d,2u} r10={1d,1u} r11={2d,1u} r12={12d} r13={1d,27u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={8d,2u} r101={6d} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 642{554d,84u,4e} in 61{55 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg:SI 0 r0)
        (const_int 40000 [0x9c40])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 118 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":12:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 118 10 13 2 (set (reg:SI 3 r3 [160])
        (reg:SI 0 r0)) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(insn 13 118 11 2 (set (reg:SI 0 r0)
        (const_int 400 [0x190])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 11 13 164 2 (set (reg/f:SI 4 r4 [orig:121 _28 ] [121])
        (reg:SI 3 r3 [160])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (expr_list:REG_NOALIAS (reg/f:SI 133)
        (nil)))
(insn 164 11 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [2 %sfp+-8 S4 A32])
        (reg/f:SI 4 r4 [orig:121 _28 ] [121])) "./understand-elf/matmul-v2.cpp":12:33 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 14 164 15 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>) [0 operator new [] S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":13:28 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0x7f11833d3200 operator new []>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 15 14 163 2 (set (reg/f:SI 2 r2 [orig:122 _30 ] [122])
        (reg:SI 0 r0 [161])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_NOALIAS (reg/f:SI 134)
        (nil)))
(insn 163 15 143 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [2 %sfp+-4 S4 A32])
        (reg/f:SI 2 r2 [orig:122 _30 ] [122])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 143 163 18 2 (set (reg/f:SI 3 r3 [orig:121 _28 ] [121])
        (reg/f:SI 4 r4 [orig:121 _28 ] [121])) 740 {*thumb2_movsi_vfp}
     (nil))
(insn 18 143 162 2 (set (reg/f:SI 3 r3 [orig:125 ivtmp.32 ] [125])
        (plus:SI (reg/f:SI 3 r3 [orig:121 _28 ] [121])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 162 18 17 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [2 %sfp+-16 S4 A32])
        (reg/f:SI 3 r3 [orig:125 ivtmp.32 ] [125])) 740 {*thumb2_movsi_vfp}
     (nil))
(insn 17 162 145 2 (set (reg:SI 2 r2 [orig:128 ivtmp.30 ] [128])
        (plus:SI (reg/f:SI 2 r2 [orig:122 _30 ] [122])
            (const_int -4 [0xfffffffffffffffc]))) 7 {*arm_addsi3}
     (nil))
(insn 145 17 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [2 %sfp+-20 S4 A32])
        (reg:SI 2 r2 [orig:128 ivtmp.30 ] [128])) 740 {*thumb2_movsi_vfp}
     (nil))
(insn 3 145 57 2 (set (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])
        (reg/f:SI 3 r3 [orig:125 ivtmp.32 ] [125])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (nil))
(insn 57 3 121 2 (set (reg/f:SI 10 r10 [156])
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f11831dbc60 *.LC0>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f11831dbc60 *.LC0>)
        (nil)))
(insn 121 57 161 2 (set (reg:SI 3 r3 [136])
        (const_int 60495 [0xec4f])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 60495 [0xec4f])
        (nil)))
(note 161 121 122 2 NOTE_INSN_DELETED)
(insn 122 161 152 2 (set (zero_extract:SI (reg:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20164 [0x4ec4])) "./understand-elf/matmul-v2.cpp":15:21 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int 1321528399 [0x4ec4ec4f])
        (nil)))
(insn 152 122 124 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [2 %sfp+-12 S4 A32])
        (reg:SI 3 r3 [136])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 124 152 125 2 (set (reg:SI 9 r9 [146])
        (const_int 52429 [0xcccd])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 52429 [0xcccd])
        (nil)))
(insn 125 124 4 2 (set (zero_extract:SI (reg:SI 9 r9 [146])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 52428 [0xcccc])) "./understand-elf/matmul-v2.cpp":17:30 403 {*arm_movtas_ze}
     (expr_list:REG_EQUAL (const_int -858993459 [0xffffffffcccccccd])
        (nil)))
(insn 4 125 75 2 (set (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
        (const_int 100 [0x64])) "./understand-elf/matmul-v2.cpp":13:28 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 100 [0x64])
        (nil)))
(code_label 75 4 19 3 3 (nil) [1 uses])
(note 19 75 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 25 19 20 3 NOTE_INSN_DELETED)
(insn 20 25 24 3 (set (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
        (plus:SI (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (const_int -100 [0xffffffffffffff9c]))) 7 {*arm_addsi3}
     (nil))
(insn 24 20 5 3 (set (reg:SI 2 r2 [138])
        (const_int 13 [0xd])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 13 [0xd])
        (nil)))
(insn 5 24 6 3 (set (reg:SI 11 fp [orig:130 ivtmp.20 ] [130])
        (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 154 3 (set (reg:SI 5 r5 [orig:123 ivtmp.17 ] [123])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [2 %sfp+-16 S4 A32])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 154 6 22 3 (set (reg:SI 3 r3 [136])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [2 %sfp+-12 S4 A32])) "./understand-elf/matmul-v2.cpp":15:21 740 {*thumb2_movsi_vfp}
     (nil))
(insn 22 154 23 3 (parallel [
            (set (reg:SI 6 r6 [135])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                            (zero_extend:DI (reg:SI 3 r3 [136])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [162]))
        ]) "./understand-elf/matmul-v2.cpp":15:21 72 {*umull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                    (const_int 1321528399 [0x4ec4ec4f]))
                (const_int 32 [0x20])))
        (nil)))
(insn 23 22 26 3 (set (reg:SI 6 r6 [orig:113 _4 ] [113])
        (lshiftrt:SI (reg:SI 6 r6 [135])
            (const_int 2 [0x2]))) "./understand-elf/matmul-v2.cpp":15:21 147 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (const_int 13 [0xd]))
        (nil)))
(insn 26 23 155 3 (set (reg:SI 6 r6 [orig:113 _4 ] [113])
        (minus:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (mult:SI (reg:SI 2 r2 [138])
                (reg:SI 6 r6 [orig:113 _4 ] [113])))) "./understand-elf/matmul-v2.cpp":15:21 58 {*mls}
     (nil))
(insn 155 26 36 3 (set (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [2 %sfp+-20 S4 A32])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 36 155 156 3 (set (mem:SI (pre_inc:SI (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])) [1 MEM[(int *)_20]+0 S4 A32])
        (reg:SI 6 r6 [orig:113 _4 ] [113])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])
        (nil)))
(insn 156 36 41 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [2 %sfp+-20 S4 A32])
        (reg:SI 3 r3 [orig:128 ivtmp.30 ] [128])) "./understand-elf/matmul-v2.cpp":15:17 740 {*thumb2_movsi_vfp}
     (nil))
(insn 41 156 64 3 (set (reg:SI 8 r8 [148])
        (const_int 20 [0x14])) "./understand-elf/matmul-v2.cpp":17:30 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 20 [0x14])
        (nil)))
(code_label 64 41 37 4 2 (nil) [1 uses])
(note 37 64 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 42 37 39 4 NOTE_INSN_DELETED)
(insn 39 42 40 4 (parallel [
            (set (reg:SI 2 r2 [145])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                            (zero_extend:DI (reg:SI 9 r9 [146])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [163]))
        ]) "./understand-elf/matmul-v2.cpp":17:30 72 {*umull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))
                    (const_int 3435973837 [0xcccccccd]))
                (const_int 32 [0x20])))
        (nil)))
(insn 40 39 43 4 (set (reg:SI 2 r2 [orig:115 _9 ] [115])
        (lshiftrt:SI (reg:SI 2 r2 [145])
            (const_int 4 [0x4]))) "./understand-elf/matmul-v2.cpp":17:30 147 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (const_int 20 [0x14]))
        (nil)))
(insn 43 40 63 4 (set (reg:SI 2 r2 [orig:115 _9 ] [115])
        (minus:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (mult:SI (reg:SI 8 r8 [148])
                (reg:SI 2 r2 [orig:115 _9 ] [115])))) "./understand-elf/matmul-v2.cpp":17:30 58 {*mls}
     (nil))
(insn 63 43 53 4 (set (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
        (plus:SI (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":16:22 7 {*arm_addsi3}
     (nil))
(insn 53 63 54 4 (set (mem:SI (pre_inc:SI (reg:SI 5 r5 [orig:123 ivtmp.17 ] [123])) [1 MEM[(int *)_43]+0 S4 A32])
        (reg:SI 2 r2 [orig:115 _9 ] [115])) "./understand-elf/matmul-v2.cpp":17:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 5 r5 [orig:123 ivtmp.17 ] [123])
        (nil)))
(insn 54 53 56 4 (set (reg:SI 2 r2 [orig:116 _15 ] [116])
        (mult:SI (reg:SI 6 r6 [orig:113 _4 ] [113])
            (reg:SI 2 r2 [orig:115 _9 ] [115]))) "./understand-elf/matmul-v2.cpp":18:36 56 {*mul}
     (nil))
(insn 56 54 60 4 (set (mem:SI (pre_inc:SI (reg:SI 11 fp [orig:130 ivtmp.20 ] [130])) [1 MEM[(int *)_57]+0 S4 A32])
        (reg:SI 2 r2 [orig:116 _15 ] [116])) "./understand-elf/matmul-v2.cpp":18:27 740 {*thumb2_movsi_vfp}
     (expr_list:REG_INC (reg:SI 11 fp [orig:130 ivtmp.20 ] [130])
        (nil)))
(insn 60 56 61 4 (set (reg:SI 1 r1)
        (reg/f:SI 10 r10 [156])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0x7f11831dbc60 *.LC0>)
        (nil)))
(insn 61 60 62 4 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 62 61 65 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 65 62 66 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (reg:SI 4 r4 [orig:131 ivtmp.15 ] [131]))) "./understand-elf/matmul-v2.cpp":16:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 66 65 67 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 64)
            (pc))) "./understand-elf/matmul-v2.cpp":16:22 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 64)
(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 68 67 70 5 NOTE_INSN_DELETED)
(insn 70 68 71 5 (set (reg:SI 1 r1)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f11831dbcf0 *.LC1>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 4 [0x4])))
                        ] UNSPEC_SYMBOL_OFFSET))
                (const_int 1 [0x1])
            ] UNSPEC_PIC_UNIFIED)) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 254 {pic_load_addr_unified}
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0x7f11831dbcf0 *.LC1>)
        (nil)))
(insn 71 70 74 5 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 740 {*thumb2_movsi_vfp}
     (nil))
(insn 74 71 72 5 (set (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
        (plus:SI (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (const_int 1 [0x1]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(call_insn 72 74 159 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>) [0 __printf_chk S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "/usr/arm-linux-gnueabihf/include/bits/stdio2.h":112:23 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__printf_chk") [flags 0x41]  <function_decl 0x7f118318f100 __printf_chk>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 159 72 73 5 (set (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])
        (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])) "./understand-elf/matmul-v2.cpp":14:18 740 {*thumb2_movsi_vfp}
     (nil))
(insn 73 159 158 5 (set (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])
        (plus:SI (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])
            (const_int 400 [0x190]))) "./understand-elf/matmul-v2.cpp":14:18 7 {*arm_addsi3}
     (nil))
(insn 158 73 76 5 (set (mem/c:SI (reg/f:SI 13 sp) [2 %sfp+-24 S4 A32])
        (reg:SI 3 r3 [orig:126 ivtmp.32 ] [126])) "./understand-elf/matmul-v2.cpp":14:18 740 {*thumb2_movsi_vfp}
     (nil))
(insn 76 158 77 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 7 r7 [orig:119 ivtmp.35 ] [119])
            (const_int 200 [0xc8]))) "./understand-elf/matmul-v2.cpp":14:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 77 76 78 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 75)
            (pc))) "./understand-elf/matmul-v2.cpp":14:18 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895924 (nil))
 -> 75)
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 6 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [2 %sfp+-8 S4 A32])) "./understand-elf/matmul-v2.cpp":23:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 80 79 81 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":23:13 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 81 80 82 6 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [2 %sfp+-4 S4 A32])) "./understand-elf/matmul-v2.cpp":24:13 740 {*thumb2_movsi_vfp}
     (nil))
(call_insn 82 81 87 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>) [0 operator delete [] S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "./understand-elf/matmul-v2.cpp":24:13 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f11833d3400 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 87 82 88 6 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) "./understand-elf/matmul-v2.cpp":26:1 740 {*thumb2_movsi_vfp}
     (nil))
(insn 88 87 127 6 (use (reg/i:SI 0 r0)) "./understand-elf/matmul-v2.cpp":26:1 -1
     (nil))
(note 127 88 141 NOTE_INSN_DELETED)
(note 141 127 0 NOTE_INSN_DELETED)
